/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  OtcOrdersFeature,
  OtcOrdersFeatureInterface,
} from "../OtcOrdersFeature";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "zeroExAddress",
        type: "address",
      },
      {
        internalType: "contract IEtherToken",
        name: "weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "taker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "makerToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "takerToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "makerTokenFilledAmount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "takerTokenFilledAmount",
        type: "uint128",
      },
    ],
    name: "OtcOrderFilled",
    type: "event",
  },
  {
    inputs: [],
    name: "EIP712_DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEATURE_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEATURE_VERSION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20Token",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20Token",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryAndNonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrder",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature",
        name: "makerSignature",
        type: "tuple",
      },
      {
        internalType: "uint128",
        name: "takerTokenFillAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "taker",
        type: "address",
      },
      {
        internalType: "bool",
        name: "useSelfBalance",
        type: "bool",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "_fillOtcOrder",
    outputs: [
      {
        internalType: "uint128",
        name: "takerTokenFilledAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "makerTokenFilledAmount",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20Token",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20Token",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryAndNonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrder[]",
        name: "orders",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature[]",
        name: "makerSignatures",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature[]",
        name: "takerSignatures",
        type: "tuple[]",
      },
      {
        internalType: "bool[]",
        name: "unwrapWeth",
        type: "bool[]",
      },
    ],
    name: "batchFillTakerSignedOtcOrders",
    outputs: [
      {
        internalType: "bool[]",
        name: "successes",
        type: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20Token",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20Token",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryAndNonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrder",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature",
        name: "makerSignature",
        type: "tuple",
      },
      {
        internalType: "uint128",
        name: "takerTokenFillAmount",
        type: "uint128",
      },
    ],
    name: "fillOtcOrder",
    outputs: [
      {
        internalType: "uint128",
        name: "takerTokenFilledAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "makerTokenFilledAmount",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20Token",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20Token",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryAndNonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrder",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature",
        name: "makerSignature",
        type: "tuple",
      },
      {
        internalType: "uint128",
        name: "takerTokenFillAmount",
        type: "uint128",
      },
    ],
    name: "fillOtcOrderForEth",
    outputs: [
      {
        internalType: "uint128",
        name: "takerTokenFilledAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "makerTokenFilledAmount",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20Token",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20Token",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryAndNonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrder",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature",
        name: "makerSignature",
        type: "tuple",
      },
    ],
    name: "fillOtcOrderWithEth",
    outputs: [
      {
        internalType: "uint128",
        name: "takerTokenFilledAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "makerTokenFilledAmount",
        type: "uint128",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20Token",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20Token",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryAndNonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrder",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature",
        name: "makerSignature",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature",
        name: "takerSignature",
        type: "tuple",
      },
    ],
    name: "fillTakerSignedOtcOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20Token",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20Token",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryAndNonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrder",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature",
        name: "makerSignature",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature",
        name: "takerSignature",
        type: "tuple",
      },
    ],
    name: "fillTakerSignedOtcOrderForEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20Token",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20Token",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryAndNonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrder",
        name: "order",
        type: "tuple",
      },
    ],
    name: "getOtcOrderHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20Token",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20Token",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryAndNonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrder",
        name: "order",
        type: "tuple",
      },
    ],
    name: "getOtcOrderInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "enum LibNativeOrder.OrderStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrderInfo",
        name: "orderInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "txOrigin",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonceBucket",
        type: "uint64",
      },
    ],
    name: "lastOtcTxOriginNonce",
    outputs: [
      {
        internalType: "uint128",
        name: "lastNonce",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "migrate",
    outputs: [
      {
        internalType: "bytes4",
        name: "success",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610100604052610018600160008061015960201b60201c565b60c09081525034801561002a57600080fd5b506040516140f13803806140f1833981810160405281019061004c9190610224565b813073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f9e5dae0addaf20578aeb5d70341d092b53b4e14480ac5726438fd436df7ba4277f06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c83856040516020016100ff9594939291906102a5565b6040516020818303038152906040528051906020012060a0818152505050508073ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff168152505050506102f8565b60008163ffffffff1660208463ffffffff16901b60408663ffffffff16901b171790509392505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101b382610188565b9050919050565b6101c3816101a8565b81146101ce57600080fd5b50565b6000815190506101e0816101ba565b92915050565b60006101f1826101a8565b9050919050565b610201816101e6565b811461020c57600080fd5b50565b60008151905061021e816101f8565b92915050565b6000806040838503121561023b5761023a610183565b5b6000610249858286016101d1565b925050602061025a8582860161020f565b9150509250929050565b6000819050919050565b61027781610264565b82525050565b6000819050919050565b6102908161027d565b82525050565b61029f816101a8565b82525050565b600060a0820190506102ba600083018861026e565b6102c7602083018761026e565b6102d4604083018661026e565b6102e16060830185610287565b6102ee6080830184610296565b9695505050505050565b60805160a05160c05160e051613d8161037060003960008181610573015281816105ca015281816107480152818161079f015281816108920152818161096101528181610cf00152610daf015260006103c1015260008181610eb20152611b300152600081816111320152611ca60152613d816000f3fe6080604052600436106100dd5760003560e01c80638c807c431161007f578063dab400f311610059578063dab400f3146102db578063dac748d414610306578063e4ba843914610344578063e52d176414610382576100dd565b80638c807c43146102355780638fd3ab8014610272578063a578efaf1461029d576100dd565b806359ebfb45116100bb57806359ebfb45146101735780636ae4b4f7146101b0578063706394d5146101db578063724d39531461020c576100dd565b8063031b905c146100e25780634f9481101461010d57806353476b8914610136575b600080fd5b3480156100ee57600080fd5b506100f76103bf565b60405161010491906125ac565b60405180910390f35b34801561011957600080fd5b50610134600480360381019061012f9190612952565b6103e3565b005b34801561014257600080fd5b5061015d600480360381019061015891906129a8565b610482565b60405161016a91906129e5565b60405180910390f35b34801561017f57600080fd5b5061019a60048036038101906101959190612a40565b61049c565b6040516101a79190612a8f565b60405180910390f35b3480156101bc57600080fd5b506101c5610535565b6040516101d29190612b29565b60405180910390f35b6101f560048036038101906101f09190612b4b565b61056e565b604051610203929190612b8d565b60405180910390f35b34801561021857600080fd5b50610233600480360381019061022e9190612952565b610890565b005b34801561024157600080fd5b5061025c600480360381019061025791906129a8565b610a70565b6040516102699190612c6b565b60405180910390f35b34801561027e57600080fd5b50610287610c3c565b6040516102949190612cc1565b60405180910390f35b3480156102a957600080fd5b506102c460048036038101906102bf9190612cdc565b610ceb565b6040516102d2929190612b8d565b60405180910390f35b3480156102e757600080fd5b506102f0610eb0565b6040516102fd91906129e5565b60405180910390f35b34801561031257600080fd5b5061032d60048036038101906103289190612cdc565b610ed4565b60405161033b929190612b8d565b60405180910390f35b34801561035057600080fd5b5061036b60048036038101906103669190612d6a565b610f60565b604051610379929190612b8d565b60405180910390f35b34801561038e57600080fd5b506103a960048036038101906103a49190613052565b611040565b6040516103b691906131e7565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60006103ee84610a70565b905060006104008260000151846112b7565b905061040e85838684611464565b61041e8586606001518384611755565b50507fac75f773e3a92f1a02b12134d65e1f47f8a14eabe4eaf1e24624918e6a8b269f8260000151866080015183886000015189602001518a604001518b606001516040516104739796959493929190613218565b60405180910390a15050505050565b600061049561049083611a17565b611b2c565b9050919050565b6000806104a7611b7e565b90508060000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060009054906101000a90046fffffffffffffffffffffffffffffffff1691505092915050565b6040518060400160405280600981526020017f4f74634f7264657273000000000000000000000000000000000000000000000081525081565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16846020015173ffffffffffffffffffffffffffffffffffffffff160361064e577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561063057600080fd5b505af1158015610644573d6000803e3d6000fd5b50505050506106d5565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff16846020015173ffffffffffffffffffffffffffffffffffffffff16146106d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cb906132f9565b60405180910390fd5b5b60006106e085610a70565b90506106ee85828633611464565b610702856106fb34611b94565b3033611755565b809350819450505034836fffffffffffffffffffffffffffffffff161015610835576000836fffffffffffffffffffffffffffffffff16346107449190613348565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16866020015173ffffffffffffffffffffffffffffffffffffffff1603610829577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b81526004016107f691906125ac565b600060405180830381600087803b15801561081057600080fd5b505af1158015610824573d6000803e3d6000fd5b505050505b6108333382611bcc565b505b7fac75f773e3a92f1a02b12134d65e1f47f8a14eabe4eaf1e24624918e6a8b269f81600001518660800151338860000151896020015187896040516108809796959493929190613218565b60405180910390a1509250929050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16836000015173ffffffffffffffffffffffffffffffffffffffff1614610922576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610919906133ee565b60405180910390fd5b600061092d84610a70565b9050600061093f8260000151846112b7565b905061094d85838684611464565b61095d8586606001518330611755565b50507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d86604001516040518263ffffffff1660e01b81526004016109bc9190613449565b600060405180830381600087803b1580156109d657600080fd5b505af11580156109ea573d6000803e3d6000fd5b50505050610a0e8186604001516fffffffffffffffffffffffffffffffff16611bcc565b7fac75f773e3a92f1a02b12134d65e1f47f8a14eabe4eaf1e24624918e6a8b269f8260000151866080015183886000015189602001518a604001518b60600151604051610a619796959493929190613218565b60405180910390a15050505050565b610a78612564565b610a8182610482565b8160000181815250506000610a94611b7e565b9050600060c08460e00151901c9050600060808560e00151901c905060008560e00151905060008460000160008860c0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060009054906101000a90046fffffffffffffffffffffffffffffffff169050806fffffffffffffffffffffffffffffffff16826fffffffffffffffffffffffffffffffff1611610baa57600086602001906004811115610b8857610b87612bc5565b5b90816004811115610b9c57610b9b612bc5565b5b815250505050505050610c37565b4267ffffffffffffffff168467ffffffffffffffff1611610c0057600486602001906004811115610bde57610bdd612bc5565b5b90816004811115610bf257610bf1612bc5565b5b815250505050505050610c37565b600186602001906004811115610c1957610c18612bc5565b5b90816004811115610c2d57610c2c612bc5565b5b8152505050505050505b919050565b6000610c4e63dac748d460e01b611c87565b610c5e63a578efaf60e01b611c87565b610c6e63706394d560e01b611c87565b610c7e63724d395360e01b611c87565b610c8e634f94811060e01b611c87565b610c9e63e52d176460e01b611c87565b610cae63e4ba843960e01b611c87565b610cbe638c807c4360e01b611c87565b610cce6353476b8960e01b611c87565b610cde6359ebfb4560e01b611c87565b632c64c5ef60e01b905090565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16856000015173ffffffffffffffffffffffffffffffffffffffff1614610d80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d77906134d6565b60405180910390fd5b6000610d8b86610a70565b9050610d9986828733611464565b610da586853330611755565b80935081945050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d836040518263ffffffff1660e01b8152600401610e069190613449565b600060405180830381600087803b158015610e2057600080fd5b505af1158015610e34573d6000803e3d6000fd5b50505050610e5433836fffffffffffffffffffffffffffffffff16611bcc565b7fac75f773e3a92f1a02b12134d65e1f47f8a14eabe4eaf1e24624918e6a8b269f816000015187608001513389600001518a602001518789604051610e9f9796959493929190613218565b60405180910390a150935093915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806000610ee286610a70565b9050610ef086828733611464565b610efc86853333611755565b80935081945050507fac75f773e3a92f1a02b12134d65e1f47f8a14eabe4eaf1e24624918e6a8b269f816000015187608001513389600001518a602001518789604051610f4f9796959493929190613218565b60405180910390a150935093915050565b6000803073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fa857610fa7610fa233611d17565b611daf565b5b6000610fb389610a70565b9050610fc189828a89611464565b610fd9898887610fd15788610fd3565b305b87611755565b80935081945050507fac75f773e3a92f1a02b12134d65e1f47f8a14eabe4eaf1e24624918e6a8b269f81600001518a60800151888c600001518d60200151878960405161102c9796959493929190613218565b60405180910390a150965096945050505050565b606083518551148015611054575082518551145b8015611061575081518551145b6110a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110979061358e565b60405180910390fd5b845167ffffffffffffffff8111156110bb576110ba6125f1565b5b6040519080825280602002602001820160405280156110e95781602001602082028036833780820191505090505b50905060005b855181146112ae57600083828151811061110c5761110b6135ae565b5b602002602001015161112557634f94811060e01b61112e565b63724d395360e01b5b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168188848151811061117b5761117a6135ae565b5b6020026020010151888581518110611196576111956135ae565b5b60200260200101518886815181106111b1576111b06135ae565b5b60200260200101516040516024016111cb939291906137ad565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611235919061382e565b600060405180830381855af49150503d8060008114611270576040519150601f19603f3d011682016040523d82523d6000602084013e611275565b606091505b505083838151811061128a576112896135ae565b5b602002602001018115151515815250505080806112a690613845565b9150506110ef565b50949350505050565b60006112c38383611db7565b600260048111156112d7576112d6612bc5565b5b826000015160048111156112ee576112ed612bc5565b5b036113555760018383602001518460400151856060015160405160008152602001604052604051611322949392919061389c565b6020604051602081039080840390855afa158015611344573d6000803e3d6000fd5b505050602060405103519050611416565b6003600481111561136957611368612bc5565b5b826000015160048111156113805761137f612bc5565b5b036114155760007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005283601c52603c6000209050600181846020015185604001518660600151604051600081526020016040526040516113e5949392919061389c565b6020604051602081039080840390855afa158015611407573d6000803e3d6000fd5b505050602060405103519150505b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361145e5761145d611458600585611f14565b611daf565b5b92915050565b6001600481111561147857611477612bc5565b5b8360200151600481111561148f5761148e612bc5565b5b146114c1576114c06114bb8460000151856020015160048111156114b6576114b5612bc5565b5b611faf565b611daf565b5b600073ffffffffffffffffffffffffffffffffffffffff168460a0015173ffffffffffffffffffffffffffffffffffffffff161415801561153257508073ffffffffffffffffffffffffffffffffffffffff168460a0015173ffffffffffffffffffffffffffffffffffffffff1614155b156115535761155261154d8460000151838760a0015161204a565b611daf565b5b600061155d6120e8565b90503273ffffffffffffffffffffffffffffffffffffffff168560c0015173ffffffffffffffffffffffffffffffffffffffff161415801561162c57508060030160008660c0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b1561164d5761164c6116478560000151328860c001516120fe565b611daf565b5b600061165d8560000151856112b7565b9050856080015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561172c5750816004016000876080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b1561174d5761174c611747866000015183896080015161219c565b611daf565b5b505050505050565b600080600060808760e00151901c905060008760e00151905080611777611b7e565b60000160008a60c0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505085606001516fffffffffffffffffffffffffffffffff16856fffffffffffffffffffffffffffffffff160361185a5785606001519150856040015190506118b6565b61186885876060015161223a565b91506118b3826fffffffffffffffffffffffffffffffff1687606001516fffffffffffffffffffffffffffffffff1688604001516fffffffffffffffffffffffffffffffff16612277565b90505b3073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036119c15773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff16866020015173ffffffffffffffffffffffffffffffffffffffff160361199657856080015173ffffffffffffffffffffffffffffffffffffffff166108fc836fffffffffffffffffffffffffffffffff169081150290604051600060405180830381858888f19350505050158015611990573d6000803e3d6000fd5b506119bc565b6119bb86602001518760800151846fffffffffffffffffffffffffffffffff16612299565b5b6119e8565b6119e78660200151858860800151856fffffffffffffffffffffffffffffffff16612399565b5b611a0e8660000151876080015185846fffffffffffffffffffffffffffffffff16612399565b94509492505050565b60006040517f2f754524de756ae72459efbe1ec88c19a745639821de528ac3fb88f9e65e35c88152825173ffffffffffffffffffffffffffffffffffffffff166020820152602083015173ffffffffffffffffffffffffffffffffffffffff16604082015260408301516fffffffffffffffffffffffffffffffff16606082015260608301516fffffffffffffffffffffffffffffffff166080820152608083015173ffffffffffffffffffffffffffffffffffffffff1660a082015260a083015173ffffffffffffffffffffffffffffffffffffffff1660c082015260c083015173ffffffffffffffffffffffffffffffffffffffff1660e082015260e08301516101008201526101208120915050919050565b60007f000000000000000000000000000000000000000000000000000000000000000082604051602001611b61929190613959565b604051602081830303815290604052805190602001209050919050565b600080611b8b60086124b6565b90508091505090565b60006fffffffffffffffffffffffffffffffff8016821115611bc457611bc3611bbe6003846124e2565b611daf565b5b819050919050565b6000811115611c835760008273ffffffffffffffffffffffffffffffffffffffff1682604051611bfb906139b6565b60006040518083038185875af1925050503d8060008114611c38576040519150601f19603f3d011682016040523d82523d6000602084013e611c3d565b606091505b5050905080611c81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7890613a3d565b60405180910390fd5b505b5050565b3073ffffffffffffffffffffffffffffffffffffffff16636eb224cb827f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401611ce2929190613a5d565b600060405180830381600087803b158015611cfc57600080fd5b505af1158015611d10573d6000803e3d6000fd5b5050505050565b60607ff0ec779b0bcda6d84abf99ee2c67647d1100ebbb553a9c2d1c2ba1579592832c82604051602401611d4b9190613a86565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b805160208201fd5b7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141816040015160001c101580611e2c5750600160027ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141611e179190613ad0565b611e219190613b01565b816060015160001c10155b15611e4557611e44611e3f600584611f14565b611daf565b5b60006004811115611e5957611e58612bc5565b5b81600001516004811115611e7057611e6f612bc5565b5b03611e8957611e88611e83600384611f14565b611daf565b5b60016004811115611e9d57611e9c612bc5565b5b81600001516004811115611eb457611eb3612bc5565b5b03611ecd57611ecc611ec7600084611f14565b611daf565b5b600480811115611ee057611edf612bc5565b5b81600001516004811115611ef757611ef6612bc5565b5b03611f1057611f0f611f0a600284611f14565b611daf565b5b5050565b60607ff18f11f3027e735c758137924b262d4d3aff0037dcd785aca3c699fa05d960bd8383604051602401611f4a929190613b7d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b60607f47ab394e41470191eaf9fa542e84ac483a12665fbd616eb8d1c022ced6c940008383604051602401611fe5929190613ba6565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b60607f5d3300180a4547b3e27137be832d3ebf56f1ba5ebb30dd580999c61f77fa639684848460405160240161208293929190613bcf565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509392505050565b6000806120f560076124b6565b90508091505090565b60607fc0972f3cc4234ca2091de7e7bc7081494bd29ac280167d66f0d44168973b163484848460405160240161213693929190613bcf565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509392505050565b60607ff13e65d925201525f3d71a731833b19bb26e44cfbd97caf72a366b73866f71248484846040516024016121d493929190613bcf565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509392505050565b6000816fffffffffffffffffffffffffffffffff16836fffffffffffffffffffffffffffffffff161061226d578161226f565b825b905092915050565b60008282856122869190613c06565b6122909190613ad0565b90509392505050565b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612307576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122fe90613cba565b60405180910390fd5b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152816024820152602081604483600073ffffffffffffffffffffffffffffffffffffffff89165af13d6001835114602082101516811517821691508161239157806000843e8083fd5b505050505050565b3073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603612407576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123fe90613cba565b60405180910390fd5b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015273ffffffffffffffffffffffffffffffffffffffff83166024820152816044820152602081606483600073ffffffffffffffffffffffffffffffffffffffff8a165af13d600183511460208210151681151782169150816124ad57806000843e8083fd5b50505050505050565b60006080600183600b8111156124cf576124ce612bc5565b5b6124d99190613b01565b901b9050919050565b606063c996af7b60e01b83836040516024016124ff929190613d22565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b6040518060400160405280600080191681526020016000600481111561258d5761258c612bc5565b5b81525090565b6000819050919050565b6125a681612593565b82525050565b60006020820190506125c1600083018461259d565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612629826125e0565b810181811067ffffffffffffffff82111715612648576126476125f1565b5b80604052505050565b600061265b6125c7565b90506126678282612620565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006126978261266c565b9050919050565b60006126a98261268c565b9050919050565b6126b98161269e565b81146126c457600080fd5b50565b6000813590506126d6816126b0565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b612701816126dc565b811461270c57600080fd5b50565b60008135905061271e816126f8565b92915050565b61272d8161268c565b811461273857600080fd5b50565b60008135905061274a81612724565b92915050565b61275981612593565b811461276457600080fd5b50565b60008135905061277681612750565b92915050565b60006101008284031215612793576127926125db565b5b61279e610100612651565b905060006127ae848285016126c7565b60008301525060206127c2848285016126c7565b60208301525060406127d68482850161270f565b60408301525060606127ea8482850161270f565b60608301525060806127fe8482850161273b565b60808301525060a06128128482850161273b565b60a08301525060c06128268482850161273b565b60c08301525060e061283a84828501612767565b60e08301525092915050565b6005811061285357600080fd5b50565b60008135905061286581612846565b92915050565b600060ff82169050919050565b6128818161286b565b811461288c57600080fd5b50565b60008135905061289e81612878565b92915050565b6000819050919050565b6128b7816128a4565b81146128c257600080fd5b50565b6000813590506128d4816128ae565b92915050565b6000608082840312156128f0576128ef6125db565b5b6128fa6080612651565b9050600061290a84828501612856565b600083015250602061291e8482850161288f565b6020830152506040612932848285016128c5565b6040830152506060612946848285016128c5565b60608301525092915050565b6000806000610200848603121561296c5761296b6125d1565b5b600061297a8682870161277c565b93505061010061298c868287016128da565b92505061018061299e868287016128da565b9150509250925092565b600061010082840312156129bf576129be6125d1565b5b60006129cd8482850161277c565b91505092915050565b6129df816128a4565b82525050565b60006020820190506129fa60008301846129d6565b92915050565b600067ffffffffffffffff82169050919050565b612a1d81612a00565b8114612a2857600080fd5b50565b600081359050612a3a81612a14565b92915050565b60008060408385031215612a5757612a566125d1565b5b6000612a658582860161273b565b9250506020612a7685828601612a2b565b9150509250929050565b612a89816126dc565b82525050565b6000602082019050612aa46000830184612a80565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612ae4578082015181840152602081019050612ac9565b60008484015250505050565b6000612afb82612aaa565b612b058185612ab5565b9350612b15818560208601612ac6565b612b1e816125e0565b840191505092915050565b60006020820190508181036000830152612b438184612af0565b905092915050565b6000806101808385031215612b6357612b626125d1565b5b6000612b718582860161277c565b925050610100612b83858286016128da565b9150509250929050565b6000604082019050612ba26000830185612a80565b612baf6020830184612a80565b9392505050565b612bbf816128a4565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110612c0557612c04612bc5565b5b50565b6000819050612c1682612bf4565b919050565b6000612c2682612c08565b9050919050565b612c3681612c1b565b82525050565b604082016000820151612c526000850182612bb6565b506020820151612c656020850182612c2d565b50505050565b6000604082019050612c806000830184612c3c565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612cbb81612c86565b82525050565b6000602082019050612cd66000830184612cb2565b92915050565b60008060006101a08486031215612cf657612cf56125d1565b5b6000612d048682870161277c565b935050610100612d16868287016128da565b925050610180612d288682870161270f565b9150509250925092565b60008115159050919050565b612d4781612d32565b8114612d5257600080fd5b50565b600081359050612d6481612d3e565b92915050565b6000806000806000806102008789031215612d8857612d876125d1565b5b6000612d9689828a0161277c565b965050610100612da889828a016128da565b955050610180612dba89828a0161270f565b9450506101a0612dcc89828a0161273b565b9350506101c0612dde89828a01612d55565b9250506101e0612df089828a0161273b565b9150509295509295509295565b600080fd5b600067ffffffffffffffff821115612e1d57612e1c6125f1565b5b602082029050602081019050919050565b600080fd5b6000612e46612e4184612e02565b612651565b9050808382526020820190506101008402830185811115612e6a57612e69612e2e565b5b835b81811015612e945780612e7f888261277c565b84526020840193505061010081019050612e6c565b5050509392505050565b600082601f830112612eb357612eb2612dfd565b5b8135612ec3848260208601612e33565b91505092915050565b600067ffffffffffffffff821115612ee757612ee66125f1565b5b602082029050602081019050919050565b6000612f0b612f0684612ecc565b612651565b90508083825260208201905060808402830185811115612f2e57612f2d612e2e565b5b835b81811015612f575780612f4388826128da565b845260208401935050608081019050612f30565b5050509392505050565b600082601f830112612f7657612f75612dfd565b5b8135612f86848260208601612ef8565b91505092915050565b600067ffffffffffffffff821115612faa57612fa96125f1565b5b602082029050602081019050919050565b6000612fce612fc984612f8f565b612651565b90508083825260208201905060208402830185811115612ff157612ff0612e2e565b5b835b8181101561301a57806130068882612d55565b845260208401935050602081019050612ff3565b5050509392505050565b600082601f83011261303957613038612dfd565b5b8135613049848260208601612fbb565b91505092915050565b6000806000806080858703121561306c5761306b6125d1565b5b600085013567ffffffffffffffff81111561308a576130896125d6565b5b61309687828801612e9e565b945050602085013567ffffffffffffffff8111156130b7576130b66125d6565b5b6130c387828801612f61565b935050604085013567ffffffffffffffff8111156130e4576130e36125d6565b5b6130f087828801612f61565b925050606085013567ffffffffffffffff811115613111576131106125d6565b5b61311d87828801613024565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61315e81612d32565b82525050565b60006131708383613155565b60208301905092915050565b6000602082019050919050565b600061319482613129565b61319e8185613134565b93506131a983613145565b8060005b838110156131da5781516131c18882613164565b97506131cc8361317c565b9250506001810190506131ad565b5085935050505092915050565b600060208201905081810360008301526132018184613189565b905092915050565b6132128161268c565b82525050565b600060e08201905061322d600083018a6129d6565b61323a6020830189613209565b6132476040830188613209565b6132546060830187613209565b6132616080830186613209565b61326e60a0830185612a80565b61327b60c0830184612a80565b98975050505050505050565b7f4f74634f7264657273466561747572653a3a66696c6c4f74634f72646572576960008201527f74684574682f494e56414c49445f54414b45525f544f4b454e00000000000000602082015250565b60006132e3603983612ab5565b91506132ee82613287565b604082019050919050565b60006020820190508181036000830152613312816132d6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061335382612593565b915061335e83612593565b925082820390508181111561337657613375613319565b5b92915050565b7f4f74634f7264657273466561747572653a3a66696c6c54616b65725369676e6560008201527f644f74634f726465722f4d414b45525f544f4b454e5f4e4f545f574554480000602082015250565b60006133d8603e83612ab5565b91506133e38261337c565b604082019050919050565b60006020820190508181036000830152613407816133cb565b9050919050565b6000819050919050565b600061343361342e613429846126dc565b61340e565b612593565b9050919050565b61344381613418565b82525050565b600060208201905061345e600083018461343a565b92915050565b7f4f74634f7264657273466561747572653a3a66696c6c4f74634f72646572466f60008201527f724574682f4d414b45525f544f4b454e5f4e4f545f5745544800000000000000602082015250565b60006134c0603983612ab5565b91506134cb82613464565b604082019050919050565b600060208201905081810360008301526134ef816134b3565b9050919050565b7f4f74634f7264657273466561747572653a3a626174636846696c6c54616b657260008201527f5369676e65644f74634f72646572732f4d49534d4154434845445f415252415960208201527f5f4c454e47544853000000000000000000000000000000000000000000000000604082015250565b6000613578604883612ab5565b9150613583826134f6565b606082019050919050565b600060208201905081810360008301526135a78161356b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006135f86135f36135ee8461266c565b61340e565b61266c565b9050919050565b600061360a826135dd565b9050919050565b600061361c826135ff565b9050919050565b61362c81613611565b82525050565b61363b816126dc565b82525050565b61364a8161268c565b82525050565b61365981612593565b82525050565b610100820160008201516136766000850182613623565b5060208201516136896020850182613623565b50604082015161369c6040850182613632565b5060608201516136af6060850182613632565b5060808201516136c26080850182613641565b5060a08201516136d560a0850182613641565b5060c08201516136e860c0850182613641565b5060e08201516136fb60e0850182613650565b50505050565b6005811061371257613711612bc5565b5b50565b600081905061372382613701565b919050565b600061373382613715565b9050919050565b61374381613728565b82525050565b6137528161286b565b82525050565b60808201600082015161376e600085018261373a565b5060208201516137816020850182613749565b5060408201516137946040850182612bb6565b5060608201516137a76060850182612bb6565b50505050565b6000610200820190506137c3600083018661365f565b6137d1610100830185613758565b6137df610180830184613758565b949350505050565b600081519050919050565b600081905092915050565b6000613808826137e7565b61381281856137f2565b9350613822818560208601612ac6565b80840191505092915050565b600061383a82846137fd565b915081905092915050565b600061385082612593565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361388257613881613319565b5b600182019050919050565b6138968161286b565b82525050565b60006080820190506138b160008301876129d6565b6138be602083018661388d565b6138cb60408301856129d6565b6138d860608301846129d6565b95945050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b60006139226002836138e1565b915061392d826138ec565b600282019050919050565b6000819050919050565b61395361394e826128a4565b613938565b82525050565b600061396482613915565b91506139708285613942565b6020820191506139808284613942565b6020820191508190509392505050565b50565b60006139a06000836137f2565b91506139ab82613990565b600082019050919050565b60006139c182613993565b9150819050919050565b7f466978696e546f6b656e5370656e6465723a3a5f7472616e736665724574682f60008201527f5452414e534645525f4641494c45440000000000000000000000000000000000602082015250565b6000613a27602f83612ab5565b9150613a32826139cb565b604082019050919050565b60006020820190508181036000830152613a5681613a1a565b9050919050565b6000604082019050613a726000830185612cb2565b613a7f6020830184613209565b9392505050565b6000602082019050613a9b6000830184613209565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613adb82612593565b9150613ae683612593565b925082613af657613af5613aa1565b5b828204905092915050565b6000613b0c82612593565b9150613b1783612593565b9250828201905080821115613b2f57613b2e613319565b5b92915050565b60068110613b4657613b45612bc5565b5b50565b6000819050613b5782613b35565b919050565b6000613b6782613b49565b9050919050565b613b7781613b5c565b82525050565b6000604082019050613b926000830185613b6e565b613b9f60208301846129d6565b9392505050565b6000604082019050613bbb60008301856129d6565b613bc8602083018461388d565b9392505050565b6000606082019050613be460008301866129d6565b613bf16020830185613209565b613bfe6040830184613209565b949350505050565b6000613c1182612593565b9150613c1c83612593565b9250828202613c2a81612593565b91508282048414831517613c4157613c40613319565b5b5092915050565b7f466978696e546f6b656e5370656e6465722f43414e4e4f545f494e564f4b455f60008201527f53454c4600000000000000000000000000000000000000000000000000000000602082015250565b6000613ca4602483612ab5565b9150613caf82613c48565b604082019050919050565b60006020820190508181036000830152613cd381613c97565b9050919050565b60048110613ceb57613cea612bc5565b5b50565b6000819050613cfc82613cda565b919050565b6000613d0c82613cee565b9050919050565b613d1c81613d01565b82525050565b6000604082019050613d376000830185613d13565b613d44602083018461259d565b939250505056fea264697066735822122031ae57b34890ebfd3077e5ec6f451776aac7e3480bb4bca8950d22979daafa4164736f6c634300081c0033";

type OtcOrdersFeatureConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OtcOrdersFeatureConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OtcOrdersFeature__factory extends ContractFactory {
  constructor(...args: OtcOrdersFeatureConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    zeroExAddress: AddressLike,
    weth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(zeroExAddress, weth, overrides || {});
  }
  override deploy(
    zeroExAddress: AddressLike,
    weth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(zeroExAddress, weth, overrides || {}) as Promise<
      OtcOrdersFeature & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OtcOrdersFeature__factory {
    return super.connect(runner) as OtcOrdersFeature__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OtcOrdersFeatureInterface {
    return new Interface(_abi) as OtcOrdersFeatureInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OtcOrdersFeature {
    return new Contract(address, _abi, runner) as unknown as OtcOrdersFeature;
  }
}
