{
  "_format": "hh-sol-artifact-1",
  "contractName": "NativeOrdersFeature",
  "sourceName": "contracts/src/features/NativeOrdersFeature.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "zeroExAddress",
          "type": "address"
        },
        {
          "internalType": "contract IEtherToken",
          "name": "weth",
          "type": "address"
        },
        {
          "internalType": "contract IStaking",
          "name": "staking",
          "type": "address"
        },
        {
          "internalType": "contract FeeCollectorController",
          "name": "feeCollectorController",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "protocolFeeMultiplier",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "makerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "takerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "takerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "takerTokenFeeFilledAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "protocolFeePaid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "pool",
          "type": "bytes32"
        }
      ],
      "name": "LimitOrderFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "OrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "OrderSignerRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "makerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "takerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minValidSalt",
          "type": "uint256"
        }
      ],
      "name": "PairCancelledLimitOrders",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "makerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "takerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minValidSalt",
          "type": "uint256"
        }
      ],
      "name": "PairCancelledRfqOrders",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "makerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "takerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "takerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "pool",
          "type": "bytes32"
        }
      ],
      "name": "RfqOrderFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "RfqOrderOriginsAllowed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "EIP712_DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEATURE_NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEATURE_VERSION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROTOCOL_FEE_MULTIPLIER",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "_fillLimitOrder",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "takerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "useSelfBalance",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "_fillRfqOrder",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "takerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "batchCancelLimitOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Token[]",
          "name": "makerTokens",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20Token[]",
          "name": "takerTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minValidSalts",
          "type": "uint256[]"
        }
      ],
      "name": "batchCancelPairLimitOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token[]",
          "name": "makerTokens",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20Token[]",
          "name": "takerTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minValidSalts",
          "type": "uint256[]"
        }
      ],
      "name": "batchCancelPairLimitOrdersWithSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Token[]",
          "name": "makerTokens",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20Token[]",
          "name": "takerTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minValidSalts",
          "type": "uint256[]"
        }
      ],
      "name": "batchCancelPairRfqOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token[]",
          "name": "makerTokens",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20Token[]",
          "name": "takerTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minValidSalts",
          "type": "uint256[]"
        }
      ],
      "name": "batchCancelPairRfqOrdersWithSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "batchCancelRfqOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature[]",
          "name": "signatures",
          "type": "tuple[]"
        }
      ],
      "name": "batchGetLimitOrderRelevantStates",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum LibNativeOrder.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFilledAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct LibNativeOrder.OrderInfo[]",
          "name": "orderInfos",
          "type": "tuple[]"
        },
        {
          "internalType": "uint128[]",
          "name": "actualFillableTakerTokenAmounts",
          "type": "uint128[]"
        },
        {
          "internalType": "bool[]",
          "name": "isSignatureValids",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature[]",
          "name": "signatures",
          "type": "tuple[]"
        }
      ],
      "name": "batchGetRfqOrderRelevantStates",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum LibNativeOrder.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFilledAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct LibNativeOrder.OrderInfo[]",
          "name": "orderInfos",
          "type": "tuple[]"
        },
        {
          "internalType": "uint128[]",
          "name": "actualFillableTakerTokenAmounts",
          "type": "uint128[]"
        },
        {
          "internalType": "bool[]",
          "name": "isSignatureValids",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "cancelLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Token",
          "name": "makerToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token",
          "name": "takerToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minValidSalt",
          "type": "uint256"
        }
      ],
      "name": "cancelPairLimitOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token",
          "name": "makerToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token",
          "name": "takerToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minValidSalt",
          "type": "uint256"
        }
      ],
      "name": "cancelPairLimitOrdersWithSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Token",
          "name": "makerToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token",
          "name": "takerToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minValidSalt",
          "type": "uint256"
        }
      ],
      "name": "cancelPairRfqOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token",
          "name": "makerToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token",
          "name": "takerToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minValidSalt",
          "type": "uint256"
        }
      ],
      "name": "cancelPairRfqOrdersWithSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "cancelRfqOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        }
      ],
      "name": "fillLimitOrder",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "takerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        }
      ],
      "name": "fillOrKillLimitOrder",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        }
      ],
      "name": "fillOrKillRfqOrder",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        }
      ],
      "name": "fillRfqOrder",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "takerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getLimitOrderHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getLimitOrderInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum LibNativeOrder.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFilledAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct LibNativeOrder.OrderInfo",
          "name": "orderInfo",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        }
      ],
      "name": "getLimitOrderRelevantState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum LibNativeOrder.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFilledAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct LibNativeOrder.OrderInfo",
          "name": "orderInfo",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "actualFillableTakerTokenAmount",
          "type": "uint128"
        },
        {
          "internalType": "bool",
          "name": "isSignatureValid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProtocolFeeMultiplier",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "multiplier",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getRfqOrderHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getRfqOrderInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum LibNativeOrder.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFilledAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct LibNativeOrder.OrderInfo",
          "name": "orderInfo",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        }
      ],
      "name": "getRfqOrderRelevantState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum LibNativeOrder.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFilledAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct LibNativeOrder.OrderInfo",
          "name": "orderInfo",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "actualFillableTakerTokenAmount",
          "type": "uint128"
        },
        {
          "internalType": "bool",
          "name": "isSignatureValid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "isValidOrderSigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migrate",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "success",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "registerAllowedOrderSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "origins",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "registerAllowedRfqOrigins",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "poolIds",
          "type": "bytes32[]"
        }
      ],
      "name": "transferProtocolFeesForPools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x610180604052680100000003000000006101605234801561001e575f5ffd5b50604051614ab1380380614ab183398101604081905261003d916101cc565b848484848483838383838383838c80805f4690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f9e5dae0addaf20578aeb5d70341d092b53b4e14480ac5726438fd436df7ba4277f06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c83856040516020016100f19594939291909485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60408051601f1981840301815282825280516020918201206080526001600160a01b03891660c0819052633c9506a360e21b8452915191965063f2541a8c95506004808401955090935090918290030181865afa158015610154573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101789190610245565b60e0526001600160a01b0393841661010052919092166101205263ffffffff1660a052505030610140525061025c9b505050505050505050505050565b6001600160a01b03811681146101c9575f5ffd5b50565b5f5f5f5f5f60a086880312156101e0575f5ffd5b85516101eb816101b5565b60208701519095506101fc816101b5565b604087015190945061020d816101b5565b606087015190935061021e816101b5565b608087015190925063ffffffff81168114610237575f5ffd5b809150509295509295909350565b5f60208284031215610255575f5ffd5b5051919050565b60805160a05160c05160e051610100516101205161014051610160516147de6102d35f395f61024e01525f612ae901525f61212501525f6120a701525f6133b301525f8181612011015261337401525f81816103a101528181610572015261333201525f818161068d015261085701526147de5ff3fe608060405260043610610207575f3560e01c80639a4f809c11610113578063b4658bfb1161009d578063ea7faa611161006d578063ea7faa61146106ce578063f6274f66146106ed578063f6e0f6a514610700578063fd5f995b1461071f578063fe55a3ef1461073e575f5ffd5b8063b4658bfb1461063e578063d0a55fb01461065d578063dab400f31461067c578063dd11d225146106af575f5ffd5b8063aa6b21cd116100e3578063aa6b21cd14610594578063aa77476c146105b3578063ad354eeb146105d2578063b09f1fb114610600578063b10a33f41461061f575f5ffd5b80639a4f809c146105045780639baa45a8146105235780639f0434f514610542578063a0edcef514610561575f5ffd5b8063487b5c201161019457806386a0c8d71161016457806386a0c8d7146104675780638fd3ab80146104865780639240529c146104b3578063935c82a4146104c657806395480889146104e5575f5ffd5b8063487b5c20146103935780636ae4b4f7146103d65780636b52a4a8146104195780637d49ec1a14610448575f5ffd5b8063346693c5116101da578063346693c5146102bf57806337f381d8146102eb5780633cd2f0261461030a578063414e4ccf14610329578063438cdfc51461035c575f5ffd5b8063016a6d651461020b578063031b905c1461023d5780630f0e8cf7146102705780631fb0979514610291575b5f5ffd5b348015610216575f5ffd5b5061022a610225366004613643565b61075d565b6040519081526020015b60405180910390f35b348015610248575f5ffd5b5061022a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561027b575f5ffd5b5061028f61028a36600461374e565b6108aa565b005b34801561029c575f5ffd5b506102b06102ab3660046138b0565b610951565b6040516102349392919061393f565b3480156102ca575f5ffd5b506102de6102d9366004613643565b610a33565b604051610234919061396c565b3480156102f6575f5ffd5b506102b0610305366004613a07565b610ae2565b348015610315575f5ffd5b5061028f610324366004613a3c565b610bab565b61033c610337366004613aab565b610be3565b604080516001600160801b03938416815292909116602083015201610234565b348015610367575f5ffd5b5061037b610376366004613b1b565b610c62565b6040516001600160801b039091168152602001610234565b34801561039e575f5ffd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405163ffffffff9091168152602001610234565b3480156103e1575f5ffd5b5061040c6040518060400160405280600b81526020016a4c696d69744f726465727360a81b81525081565b6040516102349190613b64565b348015610424575f5ffd5b50610438610433366004613b99565b610d0e565b6040519015158152602001610234565b348015610453575f5ffd5b5061028f610462366004613bd0565b610d49565b348015610472575f5ffd5b5061028f61048136600461374e565b610daf565b348015610491575f5ffd5b5061049a610e47565b6040516001600160e01b03199091168152602001610234565b61037b6104c1366004613beb565b611044565b3480156104d1575f5ffd5b5061028f6104e0366004613c29565b6110ca565b3480156104f0575f5ffd5b506102de6104ff366004613bd0565b6110f1565b34801561050f575f5ffd5b5061028f61051e366004613c77565b611181565b34801561052e575f5ffd5b5061028f61053d366004613cb5565b61118d565b34801561054d575f5ffd5b5061028f61055c366004613d51565b6111c2565b34801561056c575f5ffd5b506103c17f000000000000000000000000000000000000000000000000000000000000000081565b34801561059f575f5ffd5b5061033c6105ae366004613e07565b61123b565b3480156105be575f5ffd5b5061033c6105cd366004613b1b565b6112be565b3480156105dd575f5ffd5b506105f16105ec366004613ed0565b61132b565b60405161023493929190613fa5565b34801561060b575f5ffd5b5061028f61061a366004614042565b611561565b34801561062a575f5ffd5b5061028f610639366004613c29565b611677565b348015610649575f5ffd5b506105f16106583660046140e4565b61169e565b348015610668575f5ffd5b5061028f610677366004613c77565b6118c9565b348015610687575f5ffd5b5061022a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156106ba575f5ffd5b5061022a6106c9366004613bd0565b6118d5565b3480156106d9575f5ffd5b5061028f6106e8366004614146565b6119e9565b61033c6106fb366004613beb565b611a65565b34801561070b575f5ffd5b5061028f61071a366004614172565b611ad7565b34801561072a575f5ffd5b5061028f610739366004613d51565b611b0c565b348015610749575f5ffd5b5061028f610758366004613643565b611b7e565b5f6108a4610847835f6040517fe593d3fdfa8b60e5e17a1b2204662ecbe15c23f2084b9ad5bae40359540a7da9815282516001600160a01b0316602082015260208301516001600160a01b0316604082015260408301516001600160801b0316606082015260608301516001600160801b0316608082015260808301516001600160a01b031660a082015260a08301516001600160a01b031660c082015260c08301516001600160a01b031660e082015260e08301516101008201526101008301516001600160401b03166101208201526101208301516101408201526101608120915050919050565b60405161190160f01b60208201527f00000000000000000000000000000000000000000000000000000000000000006022820152604281018290525f90606201604051602081830303815290604052805190602001209050919050565b92915050565b815183511480156108bc575080518351145b6108e15760405162461bcd60e51b81526004016108d890614204565b60405180910390fd5b5f5b835181101561094b576109433385838151811061090257610902614261565b602002602001015185848151811061091c5761091c614261565b602002602001015185858151811061093657610936614261565b6020026020010151611be0565b6001016108e3565b50505050565b604080516060810182525f808252602082018190529181018290529080610977856110f1565b92506109db6040518060a001604052808760a001516001600160a01b03168152602001875f01516001600160a01b0316815260200187604001516001600160801b0316815260200187606001516001600160801b0316815260200185815250611cba565b83519092505f906109fa906109f536889003880188614275565b611dad565b9050806001600160a01b03168660a001516001600160a01b03161480610a295750610a298660a0015182610d0e565b9150509250925092565b604080516060810182525f8082526020820181905291810191909152610a588261075d565b81525f610a63611f17565b60808401516001600160a01b039081165f9081526002929092016020908152604080842087518416855282528084208288015190931684529190529020546060840151610100850151610120860151929350610ac3928592919085611f23565b60c08301516001600160a01b0316610adc575f60208301525b50919050565b604080516060810182525f808252602082018190529181018290529080610b0885610a33565b9250610b6c6040518060a0016040528087608001516001600160a01b03168152602001875f01516001600160a01b0316815260200187604001516001600160801b0316815260200187606001516001600160801b0316815260200185815250611cba565b91505f610b7c845f015186611dad565b9050806001600160a01b031686608001516001600160a01b03161480610a295750610a29866080015182610d0e565b5f5b81811015610bde57610bd6838383818110610bca57610bca614261565b90506020020135611ff9565b600101610bad565b505050565b5f80333014610bfd57610bfd610bf8336121be565b612205565b5f610c486040518060a001604052808a8152602001898152602001886001600160801b03168152602001876001600160a01b03168152602001866001600160a01b031681525061220d565b602081015160409091015190999098509650505050505050565b5f5f610cb66040518060c00160405280878152602001868152602001856001600160801b03168152602001336001600160a01b031681526020015f15158152602001336001600160a01b03168152506125af565b9050826001600160801b031681602001516001600160801b03161015610d0257610d02610bf8610ce58761075d565b83602001516001600160801b0316866001600160801b03166128dd565b60400151949350505050565b5f610d17611f17565b6001600160a01b039384165f908152600491909101602090815260408083209490951682529290925250205460ff1690565b5f610d53826118d5565b90508160a001516001600160a01b0316336001600160a01b031614158015610d865750610d848260a0015133610d0e565b155b15610d9d57610d9d610bf882338560a00151612959565b610dab818360a00151612991565b5050565b81518351148015610dc1575080518351145b610ddd5760405162461bcd60e51b81526004016108d890614204565b5f5b835181101561094b57610e3f33858381518110610dfe57610dfe614261565b6020026020010151858481518110610e1857610e18614261565b6020026020010151858581518110610e3257610e32614261565b60200260200101516129f4565b600101610ddf565b5f610e58631e69781360e11b612ac2565b610e68637b13a7b360e11b612ac2565b610e78632a9dd1db60e21b612ac2565b610e8863249014a760e21b612ac2565b610e9863438cdfc560e01b612ac2565b610ea863414e4ccf60e01b612ac2565b610eb863aa6b21cd60e01b612ac2565b610ec8633ea4f60d60e11b612ac2565b610ed863fe55a3ef60e01b612ac2565b610ee863137548b560e31b612ac2565b610ef863f6e0f6a560e01b612ac2565b610f08630d0a55fb60e41b612ac2565b610f18632c428cfd60e21b612ac2565b610f286386a0c8d760e01b612ac2565b610f38639f0434f560e01b612ac2565b610f48632693e02760e21b612ac2565b610f586324d720a960e21b612ac2565b610f68630f0e8cf760e01b612ac2565b610f7863fd5f995b60e01b612ac2565b610f88639548088960e01b612ac2565b610f9863346693c560e01b612ac2565b610fa863dd11d22560e01b612ac2565b610fb863016a6d6560e01b612ac2565b610fc8630243dae160e51b612ac2565b610fd863b09f1fb160e01b612ac2565b610fe8631fb0979560e01b612ac2565b610ff86306fe703b60e31b612ac2565b61100863b4658bfb60e01b612ac2565b61101863ad354eeb60e01b612ac2565b61102863ea7faa6160e01b612ac2565b611038630d6a549560e31b612ac2565b50632c64c5ef60e01b90565b5f5f6110906040518060a00160405280878152602001868152602001856001600160801b03168152602001336001600160a01b03168152602001336001600160a01b031681525061220d565b9050826001600160801b031681602001516001600160801b031610156110bf576110bf610bf8610ce5876118d5565b8051610d0290612b42565b6110d48433610d0e565b6110e5576110e5610bf88533612bc1565b61094b84848484611be0565b604080516060810182525f8082526020820181905291810191909152611116826118d5565b81525f611121611f17565b60a08401516001600160a01b039081165f9081526001929092016020908152604080842087518416855282528084208288015190931684529190529020546060840151610140850151610160860151929350610adc928592919085611f23565b610bde33848484611be0565b5f5b8151811015610dab576111ba8282815181106111ad576111ad614261565b6020026020010151610d49565b60010161118f565b815183511480156111d4575080518351145b6111f05760405162461bcd60e51b81526004016108d890614204565b6111fa8433610d0e565b61120b5761120b610bf88533612bc1565b5f5b83518110156112345761122c85858381518110610dfe57610dfe614261565b60010161120d565b5050505050565b5f8033301461125057611250610bf8336121be565b5f6112a36040518060c001604052808b81526020018a8152602001896001600160801b03168152602001886001600160a01b031681526020018715158152602001866001600160a01b03168152506125af565b6020810151604090910151909a909950975050505050505050565b5f5f5f6113136040518060c00160405280888152602001878152602001866001600160801b03168152602001336001600160a01b031681526020015f15158152602001336001600160a01b03168152506125af565b60208101516040909101519097909650945050505050565b6060808085841461134e5760405162461bcd60e51b81526004016108d89061428f565b856001600160401b038111156113665761136661349e565b6040519080825280602002602001820160405280156113af57816020015b604080516060810182525f80825260208083018290529282015282525f199092019101816113845790505b509250856001600160401b038111156113ca576113ca61349e565b6040519080825280602002602001820160405280156113f3578160200160208202803683370190505b509150856001600160401b0381111561140e5761140e61349e565b604051908082528060200260200182016040528015611437578160200160208202803683370190505b5090505f5b8681101561155657306337f381d889898481811061145c5761145c614261565b9050610140020188888581811061147557611475614261565b9050608002016040518363ffffffff1660e01b815260040161149892919061431a565b60a060405180830381865afa9250505080156114d1575060408051601f3d908101601f191682019092526114ce91810190614414565b60015b1561154e57828785815181106114e9576114e9614261565b60200260200101819052508186858151811061150757611507614261565b60200260200101906001600160801b031690816001600160801b0316815250508085858151811061153a5761153a614261565b911515602092830291909101909101525050505b60010161143c565b509450945094915050565b3332146115c05760405162461bcd60e51b815260206004820152602760248201527f4e61746976654f7264657273466561747572652f4e4f5f434f4e54524143545f6044820152664f524947494e5360c81b60648201526084016108d8565b5f6115c9611f17565b90505f5b835181101561163657335f908152600383016020526040812085518592908790859081106115fd576115fd614261565b6020908102919091018101516001600160a01b031682528101919091526040015f20805460ff19169115159190911790556001016115cd565b507f02dfead5eb769b298e82dd9650b31c40559a3d42701dbf53c931bc2682847c3133848460405161166a939291906144a6565b60405180910390a1505050565b6116818433610d0e565b61169257611692610bf88533612bc1565b61094b848484846129f4565b606080808584146116c15760405162461bcd60e51b81526004016108d89061428f565b856001600160401b038111156116d9576116d961349e565b60405190808252806020026020018201604052801561172257816020015b604080516060810182525f80825260208083018290529282015282525f199092019101816116f75790505b509250856001600160401b0381111561173d5761173d61349e565b604051908082528060200260200182016040528015611766578160200160208202803683370190505b509150856001600160401b038111156117815761178161349e565b6040519080825280602002602001820160405280156117aa578160200160208202803683370190505b5090505f5b868110156115565730631fb097958989848181106117cf576117cf614261565b905061018002018888858181106117e8576117e8614261565b9050608002016040518363ffffffff1660e01b815260040161180b92919061450f565b60a060405180830381865afa925050508015611844575060408051601f3d908101601f1916820190925261184191810190614414565b60015b156118c1578287858151811061185c5761185c614261565b60200260200101819052508186858151811061187a5761187a614261565b60200260200101906001600160801b031690816001600160801b031681525050808585815181106118ad576118ad614261565b911515602092830291909101909101525050505b6001016117af565b610bde338484846129f4565b5f6108a4610847835f6040517fce918627cb55462ddbb85e73de69a8b322f2bc88f4507c52fcad6d4c33c29d49815282516001600160a01b0316602082015260208301516001600160a01b0316604082015260408301516001600160801b0316606082015260608301516001600160801b0316608082015260808301516001600160801b031660a082015260a08301516001600160a01b031660c082015260c08301516001600160a01b031660e082015260e08301516001600160a01b03166101008201526101008301516001600160a01b03166101208201526101208301516101408201526101408301516001600160401b03166101608201526101608301516101808201526101a08120915050919050565b5f6119f2611f17565b335f81815260048301602090815260408083206001600160a01b03891680855290835292819020805460ff1916881515908117909155815194855291840192909252908201529091507f6ea9dbe8b2cc119348716a9220a0742ad62b7884ecb0ff4b32cd508121fd93799060600161166a565b5f5f5f611ab26040518060a00160405280888152602001878152602001866001600160801b03168152602001336001600160a01b03168152602001336001600160a01b031681525061220d565b9050611ac0815f0151612b42565b602081015160409091015190969095509350505050565b5f5b8151811015610dab57611b04828281518110611af757611af7614261565b6020026020010151611b7e565b600101611ad9565b81518351148015611b1e575080518351145b611b3a5760405162461bcd60e51b81526004016108d890614204565b611b448433610d0e565b611b5557611b55610bf88533612bc1565b5f5b835181101561123457611b768585838151811061090257610902614261565b600101611b57565b5f611b888261075d565b905081608001516001600160a01b0316336001600160a01b031614158015611bbb5750611bb9826080015133610d0e565b155b15611bd257611bd2610bf882338560800151612959565b610dab818360800151612991565b5f611be9611f17565b6001600160a01b038087165f9081526002830160209081526040808320898516845282528083209388168352929052205490915082811115611c3257611c32610bf88483612c3e565b6001600160a01b038681165f81815260028501602090815260408083208a8616808552908352818420958a1680855295835292819020889055805193845290830191909152810191909152606081018490527ffe7ffb1edfe79f4df716cb2dcad21cf2f31b104d816a7976ba1e6e4653c1efb1906080015b60405180910390a1505050505050565b5f81604001516001600160801b03165f1480611ce1575060608201516001600160801b0316155b15611ced57505f919050565b60018260800151602001516004811115611d0957611d096138f0565b14611d1557505f919050565b5f611d5b8360800151604001518460600151611d319190614647565b6001600160801b031684606001516001600160801b031685604001516001600160801b0316612c7c565b9050611d7781611d728560200151865f0151612c9a565b612d76565b9050611da6611da18285604001516001600160801b031686606001516001600160801b0316612d8b565b612dac565b9392505050565b5f611db88383612dce565b600282516004811115611dcd57611dcd6138f0565b03611e3e5760208083015160408085015160608087015183515f815295860180855289905260ff9094169285019290925290830152608082015260019060a0016020604051602081039080840390855afa158015611e2d573d5f5f3e3d5ffd5b505050602060405103519050611efb565b600382516004811115611e5357611e536138f0565b03611efb575f7f19457468657265756d205369676e6564204d6573736167653a0a3332000000005f5283601c52603c5f2090506001818460200151856040015186606001516040515f8152602001604052604051611ecd949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015611eed573d5f5f3e3d5ffd5b505050602060405103519150505b6001600160a01b0381166108a4576108a4610bf8600585612ea3565b5f5f6108a46007612ed9565b5f611f2c611f17565b86515f9081526020829052604090819020546001600160801b03808216928a0183905292935091871611611f7f576020870160025b90816004811115611f7457611f746138f0565b815250505050611234565b600160ff1b811615611f9657602087016003611f61565b50426001600160401b0316846001600160401b031611611fd4576020860160045b90816004811115611fca57611fca6138f0565b8152505050611234565b82821115611fe757602086016003611fb7565b60016020870181905250505050505050565b6040516318cdf6cd60e11b8152600481018290525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063319bed9a906024016020604051808303815f875af115801561205f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120839190614666565b6040516370a0823160e01b81526001600160a01b0380831660048301529192505f917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156120ec573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121109190614681565b90506001811115610bde576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a3b4a3278380612157600186614698565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064015f604051808303815f87803b1580156121a3575f5ffd5b505af11580156121b5573d5f5f3e3d5ffd5b50505050505050565b604080516001600160a01b039290921660248084019190915281518084039091018152604490920190526020810180516001600160e01b031663f0ec779b60e01b17905290565b805160208201fd5b604080516080810182525f8082526020820181905291810182905260608101919091525f61223d835f01516110f1565b9050600181602001516004811115612257576122576138f0565b1461228157612281610bf8825f01518360200151600481111561227c5761227c6138f0565b612f01565b825160c001516001600160a01b0316158015906122bb575082606001516001600160a01b0316835f015160c001516001600160a01b031614155b156122dc576122dc610bf8825f01518560600151865f015160c00151612f41565b825160e001516001600160a01b031615801590612316575082608001516001600160a01b0316835f015160e001516001600160a01b031614155b1561233757612337610bf8825f01518560800151865f015160e00151612f79565b5f612349825f01518560200151611dad565b9050835f015160a001516001600160a01b0316816001600160a01b0316141580156123815750835160a0015161237f9082610d0e565b155b1561239d578151845160a0015161239d91610bf8918490612fb1565b50825161012001516123ae90612fe9565b8252604080516101408101825282518152845160a0908101516001600160a01b039081166020808501919091526060808901805184168688015251831681860152885151831660808601528851909101519091169183019190915285518301516001600160801b0390811660c0840152865190910151811660e08301528583015181166101008301529183015190911661012082015261244d906130c8565b6001600160801b039081166040850152908116602084015283516080015116156124d5576124a982602001516001600160801b0316845f0151606001516001600160801b0316855f0151608001516001600160801b0316612c7c565b6001600160801b031660608084018290528451602081015191860151610100909101516124d5936131ff565b8051835160a08101516060808701516101008401518451602080870151908a01516040808c0151968c01518c51610120909a015191517fab614d2b738543c0ea21f56347cf696a3a0c42a7cbec3212a5ca22a4dcff21249b6125a19b909a999390919a8b526001600160a01b03998a1660208c015297891660408b015295881660608a015293871660808901529190951660a08701526001600160801b0394851660c0870152841660e08601529092166101008401526101208301919091526101408201526101600190565b60405180910390a150919050565b604080516080810182525f8082526020820181905291810182905260608101919091525f6125df835f0151610a33565b90506001816020015160048111156125f9576125f96138f0565b1461261e5761261e610bf8825f01518360200151600481111561227c5761227c6138f0565b5f612627611f17565b845160c001519091506001600160a01b031632148015906126725750835160c001516001600160a01b03165f908152600382016020908152604080832032845290915290205460ff16155b1561268e578151845160c0015161268e91610bf891329061328b565b50825160a001516001600160a01b0316158015906126c9575082606001516001600160a01b0316835f015160a001516001600160a01b031614155b156126ea576126ea610bf8825f01518560600151865f015160a00151612f41565b5f6126fc825f01518560200151611dad565b9050835f0151608001516001600160a01b0316816001600160a01b03161415801561273457508351608001516127329082610d0e565b155b1561275057815184516080015161275091610bf8918490612fb1565b5060408051610140810182528251815284516080908101516001600160a01b031660208301528501516128319282019061278e578560600151612790565b305b6001600160a01b031681526020018560a001516001600160a01b03168152602001855f01515f01516001600160a01b03168152602001855f0151602001516001600160a01b03168152602001855f0151604001516001600160801b03168152602001855f0151606001516001600160801b0316815260200185604001516001600160801b0316815260200183604001516001600160801b03168152506130c8565b6001600160801b039081166040858101829052929091166020808601829052845187516080808201516060808c015184518588015160e0968701518c519889526001600160a01b03958616998901999099529184169a87019a909a52988216908501529096169582019590955260a081019290925260c0820192909252918201527f829fa99d94dc4636925b38632e625736a614c154d55006b7ab6bea979c210c3290610100016125a1565b6040516024810184905260448101839052606481018290526060907f21948612b5ef214ec0508df4901600e07a810a371be76b25d59ade73826e3d97906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290509392505050565b60607f88b2c08e4a5f57d416ad23dad18c20497ccfe684b1379b28fd564adaf582b80f84848460405160240161291e939291906146ab565b5f61299a611f17565b5f84815260208281526040918290208054600160ff1b17905581518681526001600160a01b038616918101919091529192507fa6eb7cdc219e1518ced964e9a34e61d68a94e4f1569db3e84256ba981ba52753910161166a565b5f6129fd611f17565b6001600160a01b038087165f9081526001830160209081526040808320898516845282528083209388168352929052205490915082811115612a4657612a46610bf88483612c3e565b6001600160a01b038681165f81815260018501602090815260408083208a8616808552908352818420958a1680855295835292819020889055805193845290830191909152810191909152606081018490527fa91fe7ae62fce669df2c7f880f8c14d178531aae72515558e5c948e37c32a57290608001611caa565b604051636eb224cb60e01b81526001600160e01b0319821660048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201523090636eb224cb906044015f604051808303815f87803b158015612b30575f5ffd5b505af1158015611234573d5f5f3e3d5ffd5b8034118015612b515750333014155b15612bbe575f612b618234614698565b6040519091505f90339083908381818185875af1925050503d805f8114612ba3576040519150601f19603f3d011682016040523d82523d5f602084013e612ba8565b606091505b5050905080610bde57610bde610bf833846132c3565b50565b6040516001600160a01b038084166024830152821660448201526060907f84356db366796dc6e2aeb1ad74b631fe4e5ec6a650464da6059e9f95c8810a10906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905092915050565b60405160248101839052604481018290526060907fb12bc7e7d341f4431d6faf05f991ee3b779183e341b24243064e10c886cd187390606401612c04565b5f82612c8883866146ca565b612c9291906146e1565b949350505050565b604051636eb1769f60e11b81526001600160a01b0382811660048301523060248301525f91611da69185169063dd62ed3e90604401602060405180830381865afa158015612cea573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612d0e9190614681565b6040516370a0823160e01b81526001600160a01b0385811660048301528616906370a0823190602401602060405180830381865afa158015612d52573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d729190614681565b5f818310612d845781611da6565b5090919050565b5f82612d98600182614698565b612da284876146ca565b612c889190614700565b5f6001600160801b03821115612dca57612dca610bf8600384613309565b5090565b604081015170014551231950b75fc4402da1732fc9bebe19111580612e1e5750612e0b600270014551231950b75fc4402da1732fc9bebe196146e1565b612e16906001614700565b606082015110155b15612e3157612e31610bf8600584612ea3565b5f81516004811115612e4557612e456138f0565b03612e5857612e58610bf8600384612ea3565b600181516004811115612e6d57612e6d6138f0565b03612e7f57612e7f610bf85f84612ea3565b600481516004811115612e9457612e946138f0565b03610dab57610dab610bf86002845b60607ff18f11f3027e735c758137924b262d4d3aff0037dcd785aca3c699fa05d960bd8383604051602401612c04929190614713565b5f608082600b811115612eee57612eee6138f0565b612ef9906001614700565b901b92915050565b6040516024810183905260ff821660448201526060907f47ab394e41470191eaf9fa542e84ac483a12665fbd616eb8d1c022ced6c9400090606401612c04565b60607f5d3300180a4547b3e27137be832d3ebf56f1ba5ebb30dd580999c61f77fa639684848460405160240161291e939291906146ab565b60607f15e6a383bb02d79ee933b927fbecba78cdde16cba84b94a99661f44bcce3b73684848460405160240161291e939291906146ab565b60607ff13e65d925201525f3d71a731833b19bb26e44cfbd97caf72a366b73866f712484848460405160240161291e939291906146ab565b5f5f612ff3613326565b9050805f0361300457505f92915050565b5f61300e8461335c565b90505f816001600160a01b0316836040515f6040518083038185875af1925050503d805f8114613059576040519150601f19603f3d011682016040523d82523d5f602084013e61305e565b606091505b50509050806130bf5760405162461bcd60e51b815260206004820152602760248201527f466978696e50726f746f636f6c466565732f45544845525f5452414e5346455260448201526617d1905312515160ca1b60648201526084016108d8565b50909392505050565b5f5f6130ed8361010001518461012001518560e001516130e89190614647565b6133f9565b915061311d826001600160801b03168460e001516001600160801b03168560c001516001600160801b0316612c7c565b90506001600160801b038216158061313c57506001600160801b038116155b1561314b57505f928392509050565b8183610120015161315c9190614731565b6001600160801b031661316d611f17565b84515f90815260209190915260409081902091909155830151306001600160a01b03909116036131b8576131b38360a001518460200151846001600160801b0316613419565b6131d9565b6131d98360a0015184604001518560200151856001600160801b03166131ff565b6131fa836080015184602001518560600151846001600160801b03166131ff565b915091565b306001600160a01b038516036132275760405162461bcd60e51b81526004016108d890614750565b6040516323b872dd60e01b81526001600160a01b03841660048201526001600160a01b03831660248201528160448201526020816064835f6001600160a01b038a165af13d600183511460208210151681151782169150816121b557805f843e8083fd5b60607fc0972f3cc4234ca2091de7e7bc7081494bd29ac280167d66f0d44168973b163484848460405160240161291e939291906146ab565b6040516001600160a01b0383166024820152604481018290526060907fbde95cc2119e0200d80642397198abfcf98e6e4dddd0de9c6320d86252ad40ab90606401612c04565b606063c996af7b60e01b8383604051602401612c04929190614794565b5f6133573a63ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166146ca565b905090565b604080516001600160f81b03196020808301919091527f000000000000000000000000000000000000000000000000000000000000000060601b6bffffffffffffffffffffffff19166021830152603582018490527f000000000000000000000000000000000000000000000000000000000000000060558084019190915283518084039091018152607590920190925280519101205f906108a4565b5f816001600160801b0316836001600160801b031610612d845781611da6565b306001600160a01b038416036134415760405162461bcd60e51b81526004016108d890614750565b60405163a9059cbb60e01b81526001600160a01b03831660048201528160248201526020816044835f6001600160a01b0389165af13d6001835114602082101516811517821691508161349657805f843e8083fd5b505050505050565b634e487b7160e01b5f52604160045260245ffd5b60405161014081016001600160401b03811182821017156134d5576134d561349e565b60405290565b60405161018081016001600160401b03811182821017156134d5576134d561349e565b604051601f8201601f191681016001600160401b03811182821017156135265761352661349e565b604052919050565b6001600160a01b0381168114612bbe575f5ffd5b803561354d8161352e565b919050565b6001600160801b0381168114612bbe575f5ffd5b803561354d81613552565b80356001600160401b038116811461354d575f5ffd5b5f6101408284031215613598575f5ffd5b6135a06134b2565b90506135ab82613542565b81526135b960208301613542565b60208201526135ca60408301613566565b60408201526135db60608301613566565b60608201526135ec60808301613542565b60808201526135fd60a08301613542565b60a082015261360e60c08301613542565b60c082015260e0828101359082015261362a6101008301613571565b6101008201526101209182013591810191909152919050565b5f6101408284031215613654575f5ffd5b611da68383613587565b5f6001600160401b038211156136765761367661349e565b5060051b60200190565b5f82601f83011261368f575f5ffd5b81356136a261369d8261365e565b6134fe565b8082825260208201915060208360051b8601019250858311156136c3575f5ffd5b602085015b838110156136e95780356136db8161352e565b8352602092830192016136c8565b5095945050505050565b5f82601f830112613702575f5ffd5b813561371061369d8261365e565b8082825260208201915060208360051b860101925085831115613731575f5ffd5b602085015b838110156136e9578035835260209283019201613736565b5f5f5f60608486031215613760575f5ffd5b83356001600160401b03811115613775575f5ffd5b61378186828701613680565b93505060208401356001600160401b0381111561379c575f5ffd5b6137a886828701613680565b92505060408401356001600160401b038111156137c3575f5ffd5b610a29868287016136f3565b5f61018082840312156137e0575f5ffd5b6137e86134db565b90506137f382613542565b815261380160208301613542565b602082015261381260408301613566565b604082015261382360608301613566565b606082015261383460808301613566565b608082015261384560a08301613542565b60a082015261385660c08301613542565b60c082015261386760e08301613542565b60e08201526138796101008301613542565b61010082015261012082810135908201526138976101408301613571565b6101408201526101609182013591810191909152919050565b5f5f8284036102008112156138c3575f5ffd5b6138cd85856137cf565b9250608061017f19820112156138e1575f5ffd5b50610180830190509250929050565b634e487b7160e01b5f52602160045260245ffd5b60058110612bbe57612bbe6138f0565b80518252602081015161392681613904565b60208301526040908101516001600160801b0316910152565b60a0810161394d8286613914565b6001600160801b03841660608301528215156080830152949350505050565b606081016108a48284613914565b60058110612bbe575f5ffd5b803560ff8116811461354d575f5ffd5b5f608082840312156139a6575f5ffd5b604051608081016001600160401b03811182821017156139c8576139c861349e565b60405290508082356139d98161397a565b81526139e760208401613986565b602082015260408381013590820152606092830135920191909152919050565b5f5f6101c08385031215613a19575f5ffd5b613a238484613587565b9150613a33846101408501613996565b90509250929050565b5f5f60208385031215613a4d575f5ffd5b82356001600160401b03811115613a62575f5ffd5b8301601f81018513613a72575f5ffd5b80356001600160401b03811115613a87575f5ffd5b8560208260051b8401011115613a9b575f5ffd5b6020919091019590945092505050565b5f5f5f5f5f6102608688031215613ac0575f5ffd5b613aca87876137cf565b9450613ada876101808801613996565b9350610200860135613aeb81613552565b9250610220860135613afc8161352e565b9150610240860135613b0d8161352e565b809150509295509295909350565b5f5f5f6101e08486031215613b2e575f5ffd5b613b388585613587565b9250613b48856101408601613996565b91506101c0840135613b5981613552565b809150509250925092565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f5f60408385031215613baa575f5ffd5b8235613bb58161352e565b91506020830135613bc58161352e565b809150509250929050565b5f6101808284031215613be1575f5ffd5b611da683836137cf565b5f5f5f6102208486031215613bfe575f5ffd5b613c0885856137cf565b9250613c18856101808601613996565b9150610200840135613b5981613552565b5f5f5f5f60808587031215613c3c575f5ffd5b8435613c478161352e565b93506020850135613c578161352e565b92506040850135613c678161352e565b9396929550929360600135925050565b5f5f5f60608486031215613c89575f5ffd5b8335613c948161352e565b92506020840135613ca48161352e565b929592945050506040919091013590565b5f60208284031215613cc5575f5ffd5b81356001600160401b03811115613cda575f5ffd5b8201601f81018413613cea575f5ffd5b8035613cf861369d8261365e565b8082825260208201915060206101808402850101925086831115613d1a575f5ffd5b6020840193505b82841015613d4757613d3387856137cf565b825260208201915061018084019350613d21565b9695505050505050565b5f5f5f5f60808587031215613d64575f5ffd5b8435613d6f8161352e565b935060208501356001600160401b03811115613d89575f5ffd5b613d9587828801613680565b93505060408501356001600160401b03811115613db0575f5ffd5b613dbc87828801613680565b92505060608501356001600160401b03811115613dd7575f5ffd5b613de3878288016136f3565b91505092959194509250565b8015158114612bbe575f5ffd5b803561354d81613def565b5f5f5f5f5f5f6102408789031215613e1d575f5ffd5b613e278888613587565b9550613e37886101408901613996565b94506101c0870135613e4881613552565b93506101e0870135613e598161352e565b9250610200870135613e6a81613def565b9150610220870135613e7b8161352e565b809150509295509295509295565b5f5f83601f840112613e99575f5ffd5b5081356001600160401b03811115613eaf575f5ffd5b6020830191508360208260071b8501011115613ec9575f5ffd5b9250929050565b5f5f5f5f60408587031215613ee3575f5ffd5b84356001600160401b03811115613ef8575f5ffd5b8501601f81018713613f08575f5ffd5b80356001600160401b03811115613f1d575f5ffd5b87602061014083028401011115613f32575f5ffd5b6020918201955093508501356001600160401b03811115613f51575f5ffd5b613f5d87828801613e89565b95989497509550505050565b5f8151808452602084019350602083015f5b82811015613f9b5781511515865260209586019590910190600101613f7b565b5093949350505050565b606080825284519082018190525f9060208601906080840190835b81811015613fe957613fd3838551613914565b6020939093019260609290920191600101613fc0565b5050838103602080860191909152865180835291810192508601905f5b8181101561402d5782516001600160801b0316845260209384019390920191600101614006565b5050508281036040840152613d478185613f69565b5f5f60408385031215614053575f5ffd5b82356001600160401b03811115614068575f5ffd5b8301601f81018513614078575f5ffd5b803561408661369d8261365e565b8082825260208201915060208360051b8501019250878311156140a7575f5ffd5b6020840193505b828410156140d25783356140c18161352e565b8252602093840193909101906140ae565b9450613a339250505060208401613dfc565b5f5f5f5f604085870312156140f7575f5ffd5b84356001600160401b0381111561410c575f5ffd5b8501601f8101871361411c575f5ffd5b80356001600160401b03811115614131575f5ffd5b87602061018083028401011115613f32575f5ffd5b5f5f60408385031215614157575f5ffd5b82356141628161352e565b91506020830135613bc581613def565b5f60208284031215614182575f5ffd5b81356001600160401b03811115614197575f5ffd5b8201601f810184136141a7575f5ffd5b80356141b561369d8261365e565b80828252602082019150602061014084028501019250868311156141d7575f5ffd5b6020840193505b82841015613d47576141f08785613587565b8252602082019150610140840193506141de565b60208082526038908201527f4e61746976654f7264657273466561747572652f4d49534d4154434845445f5060408201527f4149525f4f52444552535f41525241595f4c454e475448530000000000000000606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b5f60808284031215614285575f5ffd5b611da68383613996565b6020808252602c908201527f4e61746976654f7264657273466561747572652f4d49534d4154434845445f4160408201526b525241595f4c454e4754485360a01b606082015260800190565b80356142e68161397a565b6142ef81613904565b825260ff6142ff60208301613986565b16602083015260408181013590830152606090810135910152565b6101c081016143398261432c86613542565b6001600160a01b03169052565b61434560208501613542565b6001600160a01b0316602083015261435f60408501613566565b6001600160801b0316604083015261437960608501613566565b6001600160801b0316606083015261439360808501613542565b6001600160a01b031660808301526143ad60a08501613542565b6001600160a01b031660a08301526143c760c08501613542565b6001600160a01b031660c083015260e084810135908301526143ec6101008501613571565b6001600160401b03166101008301526101208481013590830152611da66101408301846142db565b5f5f5f83850360a0811215614427575f5ffd5b6060811215614434575f5ffd5b50604051606081016001600160401b03811182821017156144575761445761349e565b60405284518152602085015161446c8161397a565b6020820152604085015161447f81613552565b6040820152606085015190935061449581613552565b6080850151909250613b5981613def565b6001600160a01b03841681526060602080830182905284519183018290525f91908501906080840190835b818110156144f85783516001600160a01b03168352602093840193909201916001016144d1565b505080925050508215156040830152949350505050565b61020081016145218261432c86613542565b61452d60208501613542565b6001600160a01b0316602083015261454760408501613566565b6001600160801b0316604083015261456160608501613566565b6001600160801b0316606083015261457b60808501613566565b6001600160801b0316608083015261459560a08501613542565b6001600160a01b031660a08301526145af60c08501613542565b6001600160a01b031660c08301526145c960e08501613542565b6001600160a01b031660e08301526145e46101008501613542565b6001600160a01b0316610100830152610120848101359083015261460b6101408501613571565b6001600160401b03166101408301526101608481013590830152611da66101808301846142db565b634e487b7160e01b5f52601160045260245ffd5b6001600160801b0382811682821603908111156108a4576108a4614633565b5f60208284031215614676575f5ffd5b8151611da68161352e565b5f60208284031215614691575f5ffd5b5051919050565b818103818111156108a4576108a4614633565b9283526001600160a01b03918216602084015216604082015260600190565b80820281158282048414176108a4576108a4614633565b5f826146fb57634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156108a4576108a4614633565b6040810160068410614727576147276138f0565b9281526020015290565b6001600160801b0381811683821601908111156108a4576108a4614633565b60208082526024908201527f466978696e546f6b656e5370656e6465722f43414e4e4f545f494e564f4b455f60408201526329a2a62360e11b606082015260800190565b6040810160048410614727576147276138f056fea264697066735822122036e6c845c892f72ad39764bd3e07cc8d8941154b7ebe1c30f332c483bb4abf7964736f6c634300081c0033",
  "deployedBytecode": "0x608060405260043610610207575f3560e01c80639a4f809c11610113578063b4658bfb1161009d578063ea7faa611161006d578063ea7faa61146106ce578063f6274f66146106ed578063f6e0f6a514610700578063fd5f995b1461071f578063fe55a3ef1461073e575f5ffd5b8063b4658bfb1461063e578063d0a55fb01461065d578063dab400f31461067c578063dd11d225146106af575f5ffd5b8063aa6b21cd116100e3578063aa6b21cd14610594578063aa77476c146105b3578063ad354eeb146105d2578063b09f1fb114610600578063b10a33f41461061f575f5ffd5b80639a4f809c146105045780639baa45a8146105235780639f0434f514610542578063a0edcef514610561575f5ffd5b8063487b5c201161019457806386a0c8d71161016457806386a0c8d7146104675780638fd3ab80146104865780639240529c146104b3578063935c82a4146104c657806395480889146104e5575f5ffd5b8063487b5c20146103935780636ae4b4f7146103d65780636b52a4a8146104195780637d49ec1a14610448575f5ffd5b8063346693c5116101da578063346693c5146102bf57806337f381d8146102eb5780633cd2f0261461030a578063414e4ccf14610329578063438cdfc51461035c575f5ffd5b8063016a6d651461020b578063031b905c1461023d5780630f0e8cf7146102705780631fb0979514610291575b5f5ffd5b348015610216575f5ffd5b5061022a610225366004613643565b61075d565b6040519081526020015b60405180910390f35b348015610248575f5ffd5b5061022a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561027b575f5ffd5b5061028f61028a36600461374e565b6108aa565b005b34801561029c575f5ffd5b506102b06102ab3660046138b0565b610951565b6040516102349392919061393f565b3480156102ca575f5ffd5b506102de6102d9366004613643565b610a33565b604051610234919061396c565b3480156102f6575f5ffd5b506102b0610305366004613a07565b610ae2565b348015610315575f5ffd5b5061028f610324366004613a3c565b610bab565b61033c610337366004613aab565b610be3565b604080516001600160801b03938416815292909116602083015201610234565b348015610367575f5ffd5b5061037b610376366004613b1b565b610c62565b6040516001600160801b039091168152602001610234565b34801561039e575f5ffd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405163ffffffff9091168152602001610234565b3480156103e1575f5ffd5b5061040c6040518060400160405280600b81526020016a4c696d69744f726465727360a81b81525081565b6040516102349190613b64565b348015610424575f5ffd5b50610438610433366004613b99565b610d0e565b6040519015158152602001610234565b348015610453575f5ffd5b5061028f610462366004613bd0565b610d49565b348015610472575f5ffd5b5061028f61048136600461374e565b610daf565b348015610491575f5ffd5b5061049a610e47565b6040516001600160e01b03199091168152602001610234565b61037b6104c1366004613beb565b611044565b3480156104d1575f5ffd5b5061028f6104e0366004613c29565b6110ca565b3480156104f0575f5ffd5b506102de6104ff366004613bd0565b6110f1565b34801561050f575f5ffd5b5061028f61051e366004613c77565b611181565b34801561052e575f5ffd5b5061028f61053d366004613cb5565b61118d565b34801561054d575f5ffd5b5061028f61055c366004613d51565b6111c2565b34801561056c575f5ffd5b506103c17f000000000000000000000000000000000000000000000000000000000000000081565b34801561059f575f5ffd5b5061033c6105ae366004613e07565b61123b565b3480156105be575f5ffd5b5061033c6105cd366004613b1b565b6112be565b3480156105dd575f5ffd5b506105f16105ec366004613ed0565b61132b565b60405161023493929190613fa5565b34801561060b575f5ffd5b5061028f61061a366004614042565b611561565b34801561062a575f5ffd5b5061028f610639366004613c29565b611677565b348015610649575f5ffd5b506105f16106583660046140e4565b61169e565b348015610668575f5ffd5b5061028f610677366004613c77565b6118c9565b348015610687575f5ffd5b5061022a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156106ba575f5ffd5b5061022a6106c9366004613bd0565b6118d5565b3480156106d9575f5ffd5b5061028f6106e8366004614146565b6119e9565b61033c6106fb366004613beb565b611a65565b34801561070b575f5ffd5b5061028f61071a366004614172565b611ad7565b34801561072a575f5ffd5b5061028f610739366004613d51565b611b0c565b348015610749575f5ffd5b5061028f610758366004613643565b611b7e565b5f6108a4610847835f6040517fe593d3fdfa8b60e5e17a1b2204662ecbe15c23f2084b9ad5bae40359540a7da9815282516001600160a01b0316602082015260208301516001600160a01b0316604082015260408301516001600160801b0316606082015260608301516001600160801b0316608082015260808301516001600160a01b031660a082015260a08301516001600160a01b031660c082015260c08301516001600160a01b031660e082015260e08301516101008201526101008301516001600160401b03166101208201526101208301516101408201526101608120915050919050565b60405161190160f01b60208201527f00000000000000000000000000000000000000000000000000000000000000006022820152604281018290525f90606201604051602081830303815290604052805190602001209050919050565b92915050565b815183511480156108bc575080518351145b6108e15760405162461bcd60e51b81526004016108d890614204565b60405180910390fd5b5f5b835181101561094b576109433385838151811061090257610902614261565b602002602001015185848151811061091c5761091c614261565b602002602001015185858151811061093657610936614261565b6020026020010151611be0565b6001016108e3565b50505050565b604080516060810182525f808252602082018190529181018290529080610977856110f1565b92506109db6040518060a001604052808760a001516001600160a01b03168152602001875f01516001600160a01b0316815260200187604001516001600160801b0316815260200187606001516001600160801b0316815260200185815250611cba565b83519092505f906109fa906109f536889003880188614275565b611dad565b9050806001600160a01b03168660a001516001600160a01b03161480610a295750610a298660a0015182610d0e565b9150509250925092565b604080516060810182525f8082526020820181905291810191909152610a588261075d565b81525f610a63611f17565b60808401516001600160a01b039081165f9081526002929092016020908152604080842087518416855282528084208288015190931684529190529020546060840151610100850151610120860151929350610ac3928592919085611f23565b60c08301516001600160a01b0316610adc575f60208301525b50919050565b604080516060810182525f808252602082018190529181018290529080610b0885610a33565b9250610b6c6040518060a0016040528087608001516001600160a01b03168152602001875f01516001600160a01b0316815260200187604001516001600160801b0316815260200187606001516001600160801b0316815260200185815250611cba565b91505f610b7c845f015186611dad565b9050806001600160a01b031686608001516001600160a01b03161480610a295750610a29866080015182610d0e565b5f5b81811015610bde57610bd6838383818110610bca57610bca614261565b90506020020135611ff9565b600101610bad565b505050565b5f80333014610bfd57610bfd610bf8336121be565b612205565b5f610c486040518060a001604052808a8152602001898152602001886001600160801b03168152602001876001600160a01b03168152602001866001600160a01b031681525061220d565b602081015160409091015190999098509650505050505050565b5f5f610cb66040518060c00160405280878152602001868152602001856001600160801b03168152602001336001600160a01b031681526020015f15158152602001336001600160a01b03168152506125af565b9050826001600160801b031681602001516001600160801b03161015610d0257610d02610bf8610ce58761075d565b83602001516001600160801b0316866001600160801b03166128dd565b60400151949350505050565b5f610d17611f17565b6001600160a01b039384165f908152600491909101602090815260408083209490951682529290925250205460ff1690565b5f610d53826118d5565b90508160a001516001600160a01b0316336001600160a01b031614158015610d865750610d848260a0015133610d0e565b155b15610d9d57610d9d610bf882338560a00151612959565b610dab818360a00151612991565b5050565b81518351148015610dc1575080518351145b610ddd5760405162461bcd60e51b81526004016108d890614204565b5f5b835181101561094b57610e3f33858381518110610dfe57610dfe614261565b6020026020010151858481518110610e1857610e18614261565b6020026020010151858581518110610e3257610e32614261565b60200260200101516129f4565b600101610ddf565b5f610e58631e69781360e11b612ac2565b610e68637b13a7b360e11b612ac2565b610e78632a9dd1db60e21b612ac2565b610e8863249014a760e21b612ac2565b610e9863438cdfc560e01b612ac2565b610ea863414e4ccf60e01b612ac2565b610eb863aa6b21cd60e01b612ac2565b610ec8633ea4f60d60e11b612ac2565b610ed863fe55a3ef60e01b612ac2565b610ee863137548b560e31b612ac2565b610ef863f6e0f6a560e01b612ac2565b610f08630d0a55fb60e41b612ac2565b610f18632c428cfd60e21b612ac2565b610f286386a0c8d760e01b612ac2565b610f38639f0434f560e01b612ac2565b610f48632693e02760e21b612ac2565b610f586324d720a960e21b612ac2565b610f68630f0e8cf760e01b612ac2565b610f7863fd5f995b60e01b612ac2565b610f88639548088960e01b612ac2565b610f9863346693c560e01b612ac2565b610fa863dd11d22560e01b612ac2565b610fb863016a6d6560e01b612ac2565b610fc8630243dae160e51b612ac2565b610fd863b09f1fb160e01b612ac2565b610fe8631fb0979560e01b612ac2565b610ff86306fe703b60e31b612ac2565b61100863b4658bfb60e01b612ac2565b61101863ad354eeb60e01b612ac2565b61102863ea7faa6160e01b612ac2565b611038630d6a549560e31b612ac2565b50632c64c5ef60e01b90565b5f5f6110906040518060a00160405280878152602001868152602001856001600160801b03168152602001336001600160a01b03168152602001336001600160a01b031681525061220d565b9050826001600160801b031681602001516001600160801b031610156110bf576110bf610bf8610ce5876118d5565b8051610d0290612b42565b6110d48433610d0e565b6110e5576110e5610bf88533612bc1565b61094b84848484611be0565b604080516060810182525f8082526020820181905291810191909152611116826118d5565b81525f611121611f17565b60a08401516001600160a01b039081165f9081526001929092016020908152604080842087518416855282528084208288015190931684529190529020546060840151610140850151610160860151929350610adc928592919085611f23565b610bde33848484611be0565b5f5b8151811015610dab576111ba8282815181106111ad576111ad614261565b6020026020010151610d49565b60010161118f565b815183511480156111d4575080518351145b6111f05760405162461bcd60e51b81526004016108d890614204565b6111fa8433610d0e565b61120b5761120b610bf88533612bc1565b5f5b83518110156112345761122c85858381518110610dfe57610dfe614261565b60010161120d565b5050505050565b5f8033301461125057611250610bf8336121be565b5f6112a36040518060c001604052808b81526020018a8152602001896001600160801b03168152602001886001600160a01b031681526020018715158152602001866001600160a01b03168152506125af565b6020810151604090910151909a909950975050505050505050565b5f5f5f6113136040518060c00160405280888152602001878152602001866001600160801b03168152602001336001600160a01b031681526020015f15158152602001336001600160a01b03168152506125af565b60208101516040909101519097909650945050505050565b6060808085841461134e5760405162461bcd60e51b81526004016108d89061428f565b856001600160401b038111156113665761136661349e565b6040519080825280602002602001820160405280156113af57816020015b604080516060810182525f80825260208083018290529282015282525f199092019101816113845790505b509250856001600160401b038111156113ca576113ca61349e565b6040519080825280602002602001820160405280156113f3578160200160208202803683370190505b509150856001600160401b0381111561140e5761140e61349e565b604051908082528060200260200182016040528015611437578160200160208202803683370190505b5090505f5b8681101561155657306337f381d889898481811061145c5761145c614261565b9050610140020188888581811061147557611475614261565b9050608002016040518363ffffffff1660e01b815260040161149892919061431a565b60a060405180830381865afa9250505080156114d1575060408051601f3d908101601f191682019092526114ce91810190614414565b60015b1561154e57828785815181106114e9576114e9614261565b60200260200101819052508186858151811061150757611507614261565b60200260200101906001600160801b031690816001600160801b0316815250508085858151811061153a5761153a614261565b911515602092830291909101909101525050505b60010161143c565b509450945094915050565b3332146115c05760405162461bcd60e51b815260206004820152602760248201527f4e61746976654f7264657273466561747572652f4e4f5f434f4e54524143545f6044820152664f524947494e5360c81b60648201526084016108d8565b5f6115c9611f17565b90505f5b835181101561163657335f908152600383016020526040812085518592908790859081106115fd576115fd614261565b6020908102919091018101516001600160a01b031682528101919091526040015f20805460ff19169115159190911790556001016115cd565b507f02dfead5eb769b298e82dd9650b31c40559a3d42701dbf53c931bc2682847c3133848460405161166a939291906144a6565b60405180910390a1505050565b6116818433610d0e565b61169257611692610bf88533612bc1565b61094b848484846129f4565b606080808584146116c15760405162461bcd60e51b81526004016108d89061428f565b856001600160401b038111156116d9576116d961349e565b60405190808252806020026020018201604052801561172257816020015b604080516060810182525f80825260208083018290529282015282525f199092019101816116f75790505b509250856001600160401b0381111561173d5761173d61349e565b604051908082528060200260200182016040528015611766578160200160208202803683370190505b509150856001600160401b038111156117815761178161349e565b6040519080825280602002602001820160405280156117aa578160200160208202803683370190505b5090505f5b868110156115565730631fb097958989848181106117cf576117cf614261565b905061018002018888858181106117e8576117e8614261565b9050608002016040518363ffffffff1660e01b815260040161180b92919061450f565b60a060405180830381865afa925050508015611844575060408051601f3d908101601f1916820190925261184191810190614414565b60015b156118c1578287858151811061185c5761185c614261565b60200260200101819052508186858151811061187a5761187a614261565b60200260200101906001600160801b031690816001600160801b031681525050808585815181106118ad576118ad614261565b911515602092830291909101909101525050505b6001016117af565b610bde338484846129f4565b5f6108a4610847835f6040517fce918627cb55462ddbb85e73de69a8b322f2bc88f4507c52fcad6d4c33c29d49815282516001600160a01b0316602082015260208301516001600160a01b0316604082015260408301516001600160801b0316606082015260608301516001600160801b0316608082015260808301516001600160801b031660a082015260a08301516001600160a01b031660c082015260c08301516001600160a01b031660e082015260e08301516001600160a01b03166101008201526101008301516001600160a01b03166101208201526101208301516101408201526101408301516001600160401b03166101608201526101608301516101808201526101a08120915050919050565b5f6119f2611f17565b335f81815260048301602090815260408083206001600160a01b03891680855290835292819020805460ff1916881515908117909155815194855291840192909252908201529091507f6ea9dbe8b2cc119348716a9220a0742ad62b7884ecb0ff4b32cd508121fd93799060600161166a565b5f5f5f611ab26040518060a00160405280888152602001878152602001866001600160801b03168152602001336001600160a01b03168152602001336001600160a01b031681525061220d565b9050611ac0815f0151612b42565b602081015160409091015190969095509350505050565b5f5b8151811015610dab57611b04828281518110611af757611af7614261565b6020026020010151611b7e565b600101611ad9565b81518351148015611b1e575080518351145b611b3a5760405162461bcd60e51b81526004016108d890614204565b611b448433610d0e565b611b5557611b55610bf88533612bc1565b5f5b835181101561123457611b768585838151811061090257610902614261565b600101611b57565b5f611b888261075d565b905081608001516001600160a01b0316336001600160a01b031614158015611bbb5750611bb9826080015133610d0e565b155b15611bd257611bd2610bf882338560800151612959565b610dab818360800151612991565b5f611be9611f17565b6001600160a01b038087165f9081526002830160209081526040808320898516845282528083209388168352929052205490915082811115611c3257611c32610bf88483612c3e565b6001600160a01b038681165f81815260028501602090815260408083208a8616808552908352818420958a1680855295835292819020889055805193845290830191909152810191909152606081018490527ffe7ffb1edfe79f4df716cb2dcad21cf2f31b104d816a7976ba1e6e4653c1efb1906080015b60405180910390a1505050505050565b5f81604001516001600160801b03165f1480611ce1575060608201516001600160801b0316155b15611ced57505f919050565b60018260800151602001516004811115611d0957611d096138f0565b14611d1557505f919050565b5f611d5b8360800151604001518460600151611d319190614647565b6001600160801b031684606001516001600160801b031685604001516001600160801b0316612c7c565b9050611d7781611d728560200151865f0151612c9a565b612d76565b9050611da6611da18285604001516001600160801b031686606001516001600160801b0316612d8b565b612dac565b9392505050565b5f611db88383612dce565b600282516004811115611dcd57611dcd6138f0565b03611e3e5760208083015160408085015160608087015183515f815295860180855289905260ff9094169285019290925290830152608082015260019060a0016020604051602081039080840390855afa158015611e2d573d5f5f3e3d5ffd5b505050602060405103519050611efb565b600382516004811115611e5357611e536138f0565b03611efb575f7f19457468657265756d205369676e6564204d6573736167653a0a3332000000005f5283601c52603c5f2090506001818460200151856040015186606001516040515f8152602001604052604051611ecd949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015611eed573d5f5f3e3d5ffd5b505050602060405103519150505b6001600160a01b0381166108a4576108a4610bf8600585612ea3565b5f5f6108a46007612ed9565b5f611f2c611f17565b86515f9081526020829052604090819020546001600160801b03808216928a0183905292935091871611611f7f576020870160025b90816004811115611f7457611f746138f0565b815250505050611234565b600160ff1b811615611f9657602087016003611f61565b50426001600160401b0316846001600160401b031611611fd4576020860160045b90816004811115611fca57611fca6138f0565b8152505050611234565b82821115611fe757602086016003611fb7565b60016020870181905250505050505050565b6040516318cdf6cd60e11b8152600481018290525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063319bed9a906024016020604051808303815f875af115801561205f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120839190614666565b6040516370a0823160e01b81526001600160a01b0380831660048301529192505f917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156120ec573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121109190614681565b90506001811115610bde576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a3b4a3278380612157600186614698565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064015f604051808303815f87803b1580156121a3575f5ffd5b505af11580156121b5573d5f5f3e3d5ffd5b50505050505050565b604080516001600160a01b039290921660248084019190915281518084039091018152604490920190526020810180516001600160e01b031663f0ec779b60e01b17905290565b805160208201fd5b604080516080810182525f8082526020820181905291810182905260608101919091525f61223d835f01516110f1565b9050600181602001516004811115612257576122576138f0565b1461228157612281610bf8825f01518360200151600481111561227c5761227c6138f0565b612f01565b825160c001516001600160a01b0316158015906122bb575082606001516001600160a01b0316835f015160c001516001600160a01b031614155b156122dc576122dc610bf8825f01518560600151865f015160c00151612f41565b825160e001516001600160a01b031615801590612316575082608001516001600160a01b0316835f015160e001516001600160a01b031614155b1561233757612337610bf8825f01518560800151865f015160e00151612f79565b5f612349825f01518560200151611dad565b9050835f015160a001516001600160a01b0316816001600160a01b0316141580156123815750835160a0015161237f9082610d0e565b155b1561239d578151845160a0015161239d91610bf8918490612fb1565b50825161012001516123ae90612fe9565b8252604080516101408101825282518152845160a0908101516001600160a01b039081166020808501919091526060808901805184168688015251831681860152885151831660808601528851909101519091169183019190915285518301516001600160801b0390811660c0840152865190910151811660e08301528583015181166101008301529183015190911661012082015261244d906130c8565b6001600160801b039081166040850152908116602084015283516080015116156124d5576124a982602001516001600160801b0316845f0151606001516001600160801b0316855f0151608001516001600160801b0316612c7c565b6001600160801b031660608084018290528451602081015191860151610100909101516124d5936131ff565b8051835160a08101516060808701516101008401518451602080870151908a01516040808c0151968c01518c51610120909a015191517fab614d2b738543c0ea21f56347cf696a3a0c42a7cbec3212a5ca22a4dcff21249b6125a19b909a999390919a8b526001600160a01b03998a1660208c015297891660408b015295881660608a015293871660808901529190951660a08701526001600160801b0394851660c0870152841660e08601529092166101008401526101208301919091526101408201526101600190565b60405180910390a150919050565b604080516080810182525f8082526020820181905291810182905260608101919091525f6125df835f0151610a33565b90506001816020015160048111156125f9576125f96138f0565b1461261e5761261e610bf8825f01518360200151600481111561227c5761227c6138f0565b5f612627611f17565b845160c001519091506001600160a01b031632148015906126725750835160c001516001600160a01b03165f908152600382016020908152604080832032845290915290205460ff16155b1561268e578151845160c0015161268e91610bf891329061328b565b50825160a001516001600160a01b0316158015906126c9575082606001516001600160a01b0316835f015160a001516001600160a01b031614155b156126ea576126ea610bf8825f01518560600151865f015160a00151612f41565b5f6126fc825f01518560200151611dad565b9050835f0151608001516001600160a01b0316816001600160a01b03161415801561273457508351608001516127329082610d0e565b155b1561275057815184516080015161275091610bf8918490612fb1565b5060408051610140810182528251815284516080908101516001600160a01b031660208301528501516128319282019061278e578560600151612790565b305b6001600160a01b031681526020018560a001516001600160a01b03168152602001855f01515f01516001600160a01b03168152602001855f0151602001516001600160a01b03168152602001855f0151604001516001600160801b03168152602001855f0151606001516001600160801b0316815260200185604001516001600160801b0316815260200183604001516001600160801b03168152506130c8565b6001600160801b039081166040858101829052929091166020808601829052845187516080808201516060808c015184518588015160e0968701518c519889526001600160a01b03958616998901999099529184169a87019a909a52988216908501529096169582019590955260a081019290925260c0820192909252918201527f829fa99d94dc4636925b38632e625736a614c154d55006b7ab6bea979c210c3290610100016125a1565b6040516024810184905260448101839052606481018290526060907f21948612b5ef214ec0508df4901600e07a810a371be76b25d59ade73826e3d97906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290509392505050565b60607f88b2c08e4a5f57d416ad23dad18c20497ccfe684b1379b28fd564adaf582b80f84848460405160240161291e939291906146ab565b5f61299a611f17565b5f84815260208281526040918290208054600160ff1b17905581518681526001600160a01b038616918101919091529192507fa6eb7cdc219e1518ced964e9a34e61d68a94e4f1569db3e84256ba981ba52753910161166a565b5f6129fd611f17565b6001600160a01b038087165f9081526001830160209081526040808320898516845282528083209388168352929052205490915082811115612a4657612a46610bf88483612c3e565b6001600160a01b038681165f81815260018501602090815260408083208a8616808552908352818420958a1680855295835292819020889055805193845290830191909152810191909152606081018490527fa91fe7ae62fce669df2c7f880f8c14d178531aae72515558e5c948e37c32a57290608001611caa565b604051636eb224cb60e01b81526001600160e01b0319821660048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201523090636eb224cb906044015f604051808303815f87803b158015612b30575f5ffd5b505af1158015611234573d5f5f3e3d5ffd5b8034118015612b515750333014155b15612bbe575f612b618234614698565b6040519091505f90339083908381818185875af1925050503d805f8114612ba3576040519150601f19603f3d011682016040523d82523d5f602084013e612ba8565b606091505b5050905080610bde57610bde610bf833846132c3565b50565b6040516001600160a01b038084166024830152821660448201526060907f84356db366796dc6e2aeb1ad74b631fe4e5ec6a650464da6059e9f95c8810a10906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905092915050565b60405160248101839052604481018290526060907fb12bc7e7d341f4431d6faf05f991ee3b779183e341b24243064e10c886cd187390606401612c04565b5f82612c8883866146ca565b612c9291906146e1565b949350505050565b604051636eb1769f60e11b81526001600160a01b0382811660048301523060248301525f91611da69185169063dd62ed3e90604401602060405180830381865afa158015612cea573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612d0e9190614681565b6040516370a0823160e01b81526001600160a01b0385811660048301528616906370a0823190602401602060405180830381865afa158015612d52573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d729190614681565b5f818310612d845781611da6565b5090919050565b5f82612d98600182614698565b612da284876146ca565b612c889190614700565b5f6001600160801b03821115612dca57612dca610bf8600384613309565b5090565b604081015170014551231950b75fc4402da1732fc9bebe19111580612e1e5750612e0b600270014551231950b75fc4402da1732fc9bebe196146e1565b612e16906001614700565b606082015110155b15612e3157612e31610bf8600584612ea3565b5f81516004811115612e4557612e456138f0565b03612e5857612e58610bf8600384612ea3565b600181516004811115612e6d57612e6d6138f0565b03612e7f57612e7f610bf85f84612ea3565b600481516004811115612e9457612e946138f0565b03610dab57610dab610bf86002845b60607ff18f11f3027e735c758137924b262d4d3aff0037dcd785aca3c699fa05d960bd8383604051602401612c04929190614713565b5f608082600b811115612eee57612eee6138f0565b612ef9906001614700565b901b92915050565b6040516024810183905260ff821660448201526060907f47ab394e41470191eaf9fa542e84ac483a12665fbd616eb8d1c022ced6c9400090606401612c04565b60607f5d3300180a4547b3e27137be832d3ebf56f1ba5ebb30dd580999c61f77fa639684848460405160240161291e939291906146ab565b60607f15e6a383bb02d79ee933b927fbecba78cdde16cba84b94a99661f44bcce3b73684848460405160240161291e939291906146ab565b60607ff13e65d925201525f3d71a731833b19bb26e44cfbd97caf72a366b73866f712484848460405160240161291e939291906146ab565b5f5f612ff3613326565b9050805f0361300457505f92915050565b5f61300e8461335c565b90505f816001600160a01b0316836040515f6040518083038185875af1925050503d805f8114613059576040519150601f19603f3d011682016040523d82523d5f602084013e61305e565b606091505b50509050806130bf5760405162461bcd60e51b815260206004820152602760248201527f466978696e50726f746f636f6c466565732f45544845525f5452414e5346455260448201526617d1905312515160ca1b60648201526084016108d8565b50909392505050565b5f5f6130ed8361010001518461012001518560e001516130e89190614647565b6133f9565b915061311d826001600160801b03168460e001516001600160801b03168560c001516001600160801b0316612c7c565b90506001600160801b038216158061313c57506001600160801b038116155b1561314b57505f928392509050565b8183610120015161315c9190614731565b6001600160801b031661316d611f17565b84515f90815260209190915260409081902091909155830151306001600160a01b03909116036131b8576131b38360a001518460200151846001600160801b0316613419565b6131d9565b6131d98360a0015184604001518560200151856001600160801b03166131ff565b6131fa836080015184602001518560600151846001600160801b03166131ff565b915091565b306001600160a01b038516036132275760405162461bcd60e51b81526004016108d890614750565b6040516323b872dd60e01b81526001600160a01b03841660048201526001600160a01b03831660248201528160448201526020816064835f6001600160a01b038a165af13d600183511460208210151681151782169150816121b557805f843e8083fd5b60607fc0972f3cc4234ca2091de7e7bc7081494bd29ac280167d66f0d44168973b163484848460405160240161291e939291906146ab565b6040516001600160a01b0383166024820152604481018290526060907fbde95cc2119e0200d80642397198abfcf98e6e4dddd0de9c6320d86252ad40ab90606401612c04565b606063c996af7b60e01b8383604051602401612c04929190614794565b5f6133573a63ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166146ca565b905090565b604080516001600160f81b03196020808301919091527f000000000000000000000000000000000000000000000000000000000000000060601b6bffffffffffffffffffffffff19166021830152603582018490527f000000000000000000000000000000000000000000000000000000000000000060558084019190915283518084039091018152607590920190925280519101205f906108a4565b5f816001600160801b0316836001600160801b031610612d845781611da6565b306001600160a01b038416036134415760405162461bcd60e51b81526004016108d890614750565b60405163a9059cbb60e01b81526001600160a01b03831660048201528160248201526020816044835f6001600160a01b0389165af13d6001835114602082101516811517821691508161349657805f843e8083fd5b505050505050565b634e487b7160e01b5f52604160045260245ffd5b60405161014081016001600160401b03811182821017156134d5576134d561349e565b60405290565b60405161018081016001600160401b03811182821017156134d5576134d561349e565b604051601f8201601f191681016001600160401b03811182821017156135265761352661349e565b604052919050565b6001600160a01b0381168114612bbe575f5ffd5b803561354d8161352e565b919050565b6001600160801b0381168114612bbe575f5ffd5b803561354d81613552565b80356001600160401b038116811461354d575f5ffd5b5f6101408284031215613598575f5ffd5b6135a06134b2565b90506135ab82613542565b81526135b960208301613542565b60208201526135ca60408301613566565b60408201526135db60608301613566565b60608201526135ec60808301613542565b60808201526135fd60a08301613542565b60a082015261360e60c08301613542565b60c082015260e0828101359082015261362a6101008301613571565b6101008201526101209182013591810191909152919050565b5f6101408284031215613654575f5ffd5b611da68383613587565b5f6001600160401b038211156136765761367661349e565b5060051b60200190565b5f82601f83011261368f575f5ffd5b81356136a261369d8261365e565b6134fe565b8082825260208201915060208360051b8601019250858311156136c3575f5ffd5b602085015b838110156136e95780356136db8161352e565b8352602092830192016136c8565b5095945050505050565b5f82601f830112613702575f5ffd5b813561371061369d8261365e565b8082825260208201915060208360051b860101925085831115613731575f5ffd5b602085015b838110156136e9578035835260209283019201613736565b5f5f5f60608486031215613760575f5ffd5b83356001600160401b03811115613775575f5ffd5b61378186828701613680565b93505060208401356001600160401b0381111561379c575f5ffd5b6137a886828701613680565b92505060408401356001600160401b038111156137c3575f5ffd5b610a29868287016136f3565b5f61018082840312156137e0575f5ffd5b6137e86134db565b90506137f382613542565b815261380160208301613542565b602082015261381260408301613566565b604082015261382360608301613566565b606082015261383460808301613566565b608082015261384560a08301613542565b60a082015261385660c08301613542565b60c082015261386760e08301613542565b60e08201526138796101008301613542565b61010082015261012082810135908201526138976101408301613571565b6101408201526101609182013591810191909152919050565b5f5f8284036102008112156138c3575f5ffd5b6138cd85856137cf565b9250608061017f19820112156138e1575f5ffd5b50610180830190509250929050565b634e487b7160e01b5f52602160045260245ffd5b60058110612bbe57612bbe6138f0565b80518252602081015161392681613904565b60208301526040908101516001600160801b0316910152565b60a0810161394d8286613914565b6001600160801b03841660608301528215156080830152949350505050565b606081016108a48284613914565b60058110612bbe575f5ffd5b803560ff8116811461354d575f5ffd5b5f608082840312156139a6575f5ffd5b604051608081016001600160401b03811182821017156139c8576139c861349e565b60405290508082356139d98161397a565b81526139e760208401613986565b602082015260408381013590820152606092830135920191909152919050565b5f5f6101c08385031215613a19575f5ffd5b613a238484613587565b9150613a33846101408501613996565b90509250929050565b5f5f60208385031215613a4d575f5ffd5b82356001600160401b03811115613a62575f5ffd5b8301601f81018513613a72575f5ffd5b80356001600160401b03811115613a87575f5ffd5b8560208260051b8401011115613a9b575f5ffd5b6020919091019590945092505050565b5f5f5f5f5f6102608688031215613ac0575f5ffd5b613aca87876137cf565b9450613ada876101808801613996565b9350610200860135613aeb81613552565b9250610220860135613afc8161352e565b9150610240860135613b0d8161352e565b809150509295509295909350565b5f5f5f6101e08486031215613b2e575f5ffd5b613b388585613587565b9250613b48856101408601613996565b91506101c0840135613b5981613552565b809150509250925092565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f5f60408385031215613baa575f5ffd5b8235613bb58161352e565b91506020830135613bc58161352e565b809150509250929050565b5f6101808284031215613be1575f5ffd5b611da683836137cf565b5f5f5f6102208486031215613bfe575f5ffd5b613c0885856137cf565b9250613c18856101808601613996565b9150610200840135613b5981613552565b5f5f5f5f60808587031215613c3c575f5ffd5b8435613c478161352e565b93506020850135613c578161352e565b92506040850135613c678161352e565b9396929550929360600135925050565b5f5f5f60608486031215613c89575f5ffd5b8335613c948161352e565b92506020840135613ca48161352e565b929592945050506040919091013590565b5f60208284031215613cc5575f5ffd5b81356001600160401b03811115613cda575f5ffd5b8201601f81018413613cea575f5ffd5b8035613cf861369d8261365e565b8082825260208201915060206101808402850101925086831115613d1a575f5ffd5b6020840193505b82841015613d4757613d3387856137cf565b825260208201915061018084019350613d21565b9695505050505050565b5f5f5f5f60808587031215613d64575f5ffd5b8435613d6f8161352e565b935060208501356001600160401b03811115613d89575f5ffd5b613d9587828801613680565b93505060408501356001600160401b03811115613db0575f5ffd5b613dbc87828801613680565b92505060608501356001600160401b03811115613dd7575f5ffd5b613de3878288016136f3565b91505092959194509250565b8015158114612bbe575f5ffd5b803561354d81613def565b5f5f5f5f5f5f6102408789031215613e1d575f5ffd5b613e278888613587565b9550613e37886101408901613996565b94506101c0870135613e4881613552565b93506101e0870135613e598161352e565b9250610200870135613e6a81613def565b9150610220870135613e7b8161352e565b809150509295509295509295565b5f5f83601f840112613e99575f5ffd5b5081356001600160401b03811115613eaf575f5ffd5b6020830191508360208260071b8501011115613ec9575f5ffd5b9250929050565b5f5f5f5f60408587031215613ee3575f5ffd5b84356001600160401b03811115613ef8575f5ffd5b8501601f81018713613f08575f5ffd5b80356001600160401b03811115613f1d575f5ffd5b87602061014083028401011115613f32575f5ffd5b6020918201955093508501356001600160401b03811115613f51575f5ffd5b613f5d87828801613e89565b95989497509550505050565b5f8151808452602084019350602083015f5b82811015613f9b5781511515865260209586019590910190600101613f7b565b5093949350505050565b606080825284519082018190525f9060208601906080840190835b81811015613fe957613fd3838551613914565b6020939093019260609290920191600101613fc0565b5050838103602080860191909152865180835291810192508601905f5b8181101561402d5782516001600160801b0316845260209384019390920191600101614006565b5050508281036040840152613d478185613f69565b5f5f60408385031215614053575f5ffd5b82356001600160401b03811115614068575f5ffd5b8301601f81018513614078575f5ffd5b803561408661369d8261365e565b8082825260208201915060208360051b8501019250878311156140a7575f5ffd5b6020840193505b828410156140d25783356140c18161352e565b8252602093840193909101906140ae565b9450613a339250505060208401613dfc565b5f5f5f5f604085870312156140f7575f5ffd5b84356001600160401b0381111561410c575f5ffd5b8501601f8101871361411c575f5ffd5b80356001600160401b03811115614131575f5ffd5b87602061018083028401011115613f32575f5ffd5b5f5f60408385031215614157575f5ffd5b82356141628161352e565b91506020830135613bc581613def565b5f60208284031215614182575f5ffd5b81356001600160401b03811115614197575f5ffd5b8201601f810184136141a7575f5ffd5b80356141b561369d8261365e565b80828252602082019150602061014084028501019250868311156141d7575f5ffd5b6020840193505b82841015613d47576141f08785613587565b8252602082019150610140840193506141de565b60208082526038908201527f4e61746976654f7264657273466561747572652f4d49534d4154434845445f5060408201527f4149525f4f52444552535f41525241595f4c454e475448530000000000000000606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b5f60808284031215614285575f5ffd5b611da68383613996565b6020808252602c908201527f4e61746976654f7264657273466561747572652f4d49534d4154434845445f4160408201526b525241595f4c454e4754485360a01b606082015260800190565b80356142e68161397a565b6142ef81613904565b825260ff6142ff60208301613986565b16602083015260408181013590830152606090810135910152565b6101c081016143398261432c86613542565b6001600160a01b03169052565b61434560208501613542565b6001600160a01b0316602083015261435f60408501613566565b6001600160801b0316604083015261437960608501613566565b6001600160801b0316606083015261439360808501613542565b6001600160a01b031660808301526143ad60a08501613542565b6001600160a01b031660a08301526143c760c08501613542565b6001600160a01b031660c083015260e084810135908301526143ec6101008501613571565b6001600160401b03166101008301526101208481013590830152611da66101408301846142db565b5f5f5f83850360a0811215614427575f5ffd5b6060811215614434575f5ffd5b50604051606081016001600160401b03811182821017156144575761445761349e565b60405284518152602085015161446c8161397a565b6020820152604085015161447f81613552565b6040820152606085015190935061449581613552565b6080850151909250613b5981613def565b6001600160a01b03841681526060602080830182905284519183018290525f91908501906080840190835b818110156144f85783516001600160a01b03168352602093840193909201916001016144d1565b505080925050508215156040830152949350505050565b61020081016145218261432c86613542565b61452d60208501613542565b6001600160a01b0316602083015261454760408501613566565b6001600160801b0316604083015261456160608501613566565b6001600160801b0316606083015261457b60808501613566565b6001600160801b0316608083015261459560a08501613542565b6001600160a01b031660a08301526145af60c08501613542565b6001600160a01b031660c08301526145c960e08501613542565b6001600160a01b031660e08301526145e46101008501613542565b6001600160a01b0316610100830152610120848101359083015261460b6101408501613571565b6001600160401b03166101408301526101608481013590830152611da66101808301846142db565b634e487b7160e01b5f52601160045260245ffd5b6001600160801b0382811682821603908111156108a4576108a4614633565b5f60208284031215614676575f5ffd5b8151611da68161352e565b5f60208284031215614691575f5ffd5b5051919050565b818103818111156108a4576108a4614633565b9283526001600160a01b03918216602084015216604082015260600190565b80820281158282048414176108a4576108a4614633565b5f826146fb57634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156108a4576108a4614633565b6040810160068410614727576147276138f0565b9281526020015290565b6001600160801b0381811683821601908111156108a4576108a4614633565b60208082526024908201527f466978696e546f6b656e5370656e6465722f43414e4e4f545f494e564f4b455f60408201526329a2a62360e11b606082015260800190565b6040810160048410614727576147276138f056fea264697066735822122036e6c845c892f72ad39764bd3e07cc8d8941154b7ebe1c30f332c483bb4abf7964736f6c634300081c0033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
