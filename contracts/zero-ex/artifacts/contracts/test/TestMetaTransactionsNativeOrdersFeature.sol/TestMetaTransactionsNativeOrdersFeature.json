{
  "_format": "hh-sol-artifact-1",
  "contractName": "TestMetaTransactionsNativeOrdersFeature",
  "sourceName": "contracts/test/TestMetaTransactionsNativeOrdersFeature.sol",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "enum LibSignature.SignatureType",
          "name": "signatureType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "FillLimitOrderCalled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "enum LibSignature.SignatureType",
          "name": "signatureType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        }
      ],
      "name": "FillRfqOrderCalled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "makerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "takerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "takerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "takerTokenFeeFilledAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "protocolFeePaid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "pool",
          "type": "bytes32"
        }
      ],
      "name": "LimitOrderFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "OrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "OrderSignerRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "makerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "takerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minValidSalt",
          "type": "uint256"
        }
      ],
      "name": "PairCancelledLimitOrders",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "makerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "takerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minValidSalt",
          "type": "uint256"
        }
      ],
      "name": "PairCancelledRfqOrders",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "makerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "takerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "takerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "pool",
          "type": "bytes32"
        }
      ],
      "name": "RfqOrderFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "RfqOrderOriginsAllowed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "EIP712_DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEATURE_NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEATURE_VERSION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROTOCOL_FEE_MULTIPLIER",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "_fillLimitOrder",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "takerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_fillRfqOrder",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "takerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "batchCancelLimitOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Token[]",
          "name": "makerTokens",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20Token[]",
          "name": "takerTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minValidSalts",
          "type": "uint256[]"
        }
      ],
      "name": "batchCancelPairLimitOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token[]",
          "name": "makerTokens",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20Token[]",
          "name": "takerTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minValidSalts",
          "type": "uint256[]"
        }
      ],
      "name": "batchCancelPairLimitOrdersWithSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Token[]",
          "name": "makerTokens",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20Token[]",
          "name": "takerTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minValidSalts",
          "type": "uint256[]"
        }
      ],
      "name": "batchCancelPairRfqOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token[]",
          "name": "makerTokens",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20Token[]",
          "name": "takerTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minValidSalts",
          "type": "uint256[]"
        }
      ],
      "name": "batchCancelPairRfqOrdersWithSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "batchCancelRfqOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature[]",
          "name": "signatures",
          "type": "tuple[]"
        }
      ],
      "name": "batchGetLimitOrderRelevantStates",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum LibNativeOrder.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFilledAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct LibNativeOrder.OrderInfo[]",
          "name": "orderInfos",
          "type": "tuple[]"
        },
        {
          "internalType": "uint128[]",
          "name": "actualFillableTakerTokenAmounts",
          "type": "uint128[]"
        },
        {
          "internalType": "bool[]",
          "name": "isSignatureValids",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature[]",
          "name": "signatures",
          "type": "tuple[]"
        }
      ],
      "name": "batchGetRfqOrderRelevantStates",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum LibNativeOrder.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFilledAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct LibNativeOrder.OrderInfo[]",
          "name": "orderInfos",
          "type": "tuple[]"
        },
        {
          "internalType": "uint128[]",
          "name": "actualFillableTakerTokenAmounts",
          "type": "uint128[]"
        },
        {
          "internalType": "bool[]",
          "name": "isSignatureValids",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "cancelLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Token",
          "name": "makerToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token",
          "name": "takerToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minValidSalt",
          "type": "uint256"
        }
      ],
      "name": "cancelPairLimitOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token",
          "name": "makerToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token",
          "name": "takerToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minValidSalt",
          "type": "uint256"
        }
      ],
      "name": "cancelPairLimitOrdersWithSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Token",
          "name": "makerToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token",
          "name": "takerToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minValidSalt",
          "type": "uint256"
        }
      ],
      "name": "cancelPairRfqOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token",
          "name": "makerToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token",
          "name": "takerToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minValidSalt",
          "type": "uint256"
        }
      ],
      "name": "cancelPairRfqOrdersWithSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "cancelRfqOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        }
      ],
      "name": "fillLimitOrder",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "takerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        }
      ],
      "name": "fillOrKillLimitOrder",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        }
      ],
      "name": "fillOrKillRfqOrder",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        }
      ],
      "name": "fillRfqOrder",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "takerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getLimitOrderHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getLimitOrderInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum LibNativeOrder.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFilledAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct LibNativeOrder.OrderInfo",
          "name": "orderInfo",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        }
      ],
      "name": "getLimitOrderRelevantState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum LibNativeOrder.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFilledAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct LibNativeOrder.OrderInfo",
          "name": "orderInfo",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "actualFillableTakerTokenAmount",
          "type": "uint128"
        },
        {
          "internalType": "bool",
          "name": "isSignatureValid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProtocolFeeMultiplier",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "multiplier",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getRfqOrderHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getRfqOrderInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum LibNativeOrder.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFilledAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct LibNativeOrder.OrderInfo",
          "name": "orderInfo",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        }
      ],
      "name": "getRfqOrderRelevantState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum LibNativeOrder.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFilledAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct LibNativeOrder.OrderInfo",
          "name": "orderInfo",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "actualFillableTakerTokenAmount",
          "type": "uint128"
        },
        {
          "internalType": "bool",
          "name": "isSignatureValid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "isValidOrderSigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migrate",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "success",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "registerAllowedOrderSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "origins",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "registerAllowedRfqOrigins",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "poolIds",
          "type": "bytes32[]"
        }
      ],
      "name": "transferProtocolFeesForPools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x610180604052680100000003000000006101605234801561001e575f5ffd5b505f5f5f60405161002e906101c1565b604051809103905ff080158015610047573d5f5f3e3d5ffd5b505f848484848483838383838383838c80805f4690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f9e5dae0addaf20578aeb5d70341d092b53b4e14480ac5726438fd436df7ba4277f06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c83856040516020016100fd9594939291909485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60408051601f1981840301815282825280516020918201206080526001600160a01b03891660c0819052633c9506a360e21b8452915191965063f2541a8c95506004808401955090935090918290030181865afa158015610160573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061018491906101cd565b60e0526001600160a01b0393841661010052919092166101205263ffffffff1660a05250503061014052506101e49b505050505050505050505050565b609680615f9883390190565b5f602082840312156101dd575f5ffd5b5051919050565b60805160a05160c05160e05161010051610120516101405161016051615d3d61025b5f395f61028a01525f61339a01525f612bc601525f612b3b01525f6140ae01525f8181612a72015261405c01525f81816103ef015281816105ea015261451501525f8181610705015261093e0152615d3d5ff3fe608060405260043610610243575f3560e01c80639a4f809c11610131578063b4658bfb116100ac578063ea7faa611161007c578063f6e0f6a511610062578063f6e0f6a514610778578063fd5f995b14610797578063fe55a3ef146107b6575f5ffd5b8063ea7faa6114610746578063f6274f6614610765575f5ffd5b8063b4658bfb146106b6578063d0a55fb0146106d5578063dab400f3146106f4578063dd11d22514610727575f5ffd5b8063aa6b21cd11610101578063ad354eeb116100e7578063ad354eeb1461064a578063b09f1fb114610678578063b10a33f414610697575f5ffd5b8063aa6b21cd1461060c578063aa77476c1461062b575f5ffd5b80639a4f809c1461057c5780639baa45a81461059b5780639f0434f5146105ba578063a0edcef5146105d9575f5ffd5b8063487b5c20116101c157806386a0c8d7116101915780639240529c116101775780639240529c1461052b578063935c82a41461053e578063954808891461055d575f5ffd5b806386a0c8d7146104c75780638fd3ab80146104e6575f5ffd5b8063487b5c20146103e15780636ae4b4f7146104245780636b52a4a8146104795780637d49ec1a146104a8575f5ffd5b8063346693c5116102165780633cd2f026116101fc5780633cd2f02614610346578063414e4ccf14610365578063438cdfc5146103a1575f5ffd5b8063346693c5146102fb57806337f381d814610327575f5ffd5b8063016a6d6514610247578063031b905c146102795780630f0e8cf7146102ac5780631fb09795146102cd575b5f5ffd5b348015610252575f5ffd5b50610266610261366004614735565b6107d5565b6040519081526020015b60405180910390f35b348015610284575f5ffd5b506102667f000000000000000000000000000000000000000000000000000000000000000081565b3480156102b7575f5ffd5b506102cb6102c6366004614841565b610991565b005b3480156102d8575f5ffd5b506102ec6102e73660046149a6565b610aa4565b60405161027093929190614a74565b348015610306575f5ffd5b5061031a610315366004614735565b610bcc565b6040516102709190614aaa565b348015610332575f5ffd5b506102ec610341366004614b46565b610c95565b348015610351575f5ffd5b506102cb610360366004614b7b565b610da4565b610378610373366004614bec565b610ddc565b604080516fffffffffffffffffffffffffffffffff938416815292909116602083015201610270565b3480156103ac575f5ffd5b506103c06103bb366004614c5c565b610e42565b6040516fffffffffffffffffffffffffffffffff9091168152602001610270565b3480156103ec575f5ffd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405163ffffffff9091168152602001610270565b34801561042f575f5ffd5b5061046c6040518060400160405280600b81526020017f4c696d69744f726465727300000000000000000000000000000000000000000081525081565b6040516102709190614ca5565b348015610484575f5ffd5b50610498610493366004614cf8565b610f3a565b6040519015158152602001610270565b3480156104b3575f5ffd5b506102cb6104c2366004614d2f565b610f82565b3480156104d2575f5ffd5b506102cb6104e1366004614841565b611002565b3480156104f1575f5ffd5b506104fa61110a565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610270565b6103c0610539366004614d4a565b611627565b348015610549575f5ffd5b506102cb610558366004614d88565b6116e2565b348015610568575f5ffd5b5061031a610577366004614d2f565b611709565b348015610587575f5ffd5b506102cb610596366004614dd6565b6117a6565b3480156105a6575f5ffd5b506102cb6105b5366004614e14565b6117b2565b3480156105c5575f5ffd5b506102cb6105d4366004614eb1565b6117e7565b3480156105e4575f5ffd5b5061040f7f000000000000000000000000000000000000000000000000000000000000000081565b348015610617575f5ffd5b50610378610626366004614f6a565b6118d0565b348015610636575f5ffd5b50610378610645366004614c5c565b611935565b348015610655575f5ffd5b50610669610664366004615034565b6119c5565b6040516102709392919061510c565b348015610683575f5ffd5b506102cb6106923660046151b2565b611cbd565b3480156106a2575f5ffd5b506102cb6106b1366004614d88565b611e2e565b3480156106c1575f5ffd5b506106696106d0366004615255565b611e55565b3480156106e0575f5ffd5b506102cb6106ef366004614dd6565b612142565b3480156106ff575f5ffd5b506102667f000000000000000000000000000000000000000000000000000000000000000081565b348015610732575f5ffd5b50610266610741366004614d2f565b61214e565b348015610751575f5ffd5b506102cb6107603660046152b9565b6122cc565b610378610773366004614d4a565b612373565b348015610783575f5ffd5b506102cb6107923660046152e5565b612408565b3480156107a2575f5ffd5b506102cb6107b1366004614eb1565b61243d565b3480156107c1575f5ffd5b506102cb6107d0366004614735565b61251f565b5f61098b610913835f6040517fe593d3fdfa8b60e5e17a1b2204662ecbe15c23f2084b9ad5bae40359540a7da98152825173ffffffffffffffffffffffffffffffffffffffff166020820152602083015173ffffffffffffffffffffffffffffffffffffffff16604082015260408301516fffffffffffffffffffffffffffffffff16606082015260608301516fffffffffffffffffffffffffffffffff166080820152608083015173ffffffffffffffffffffffffffffffffffffffff1660a082015260a083015173ffffffffffffffffffffffffffffffffffffffff1660c082015260c083015173ffffffffffffffffffffffffffffffffffffffff1660e082015260e083015161010082015261010083015167ffffffffffffffff166101208201526101208301516101408201526101608120915050919050565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201527f00000000000000000000000000000000000000000000000000000000000000006022820152604281018290525f90606201604051602081830303815290604052805190602001209050919050565b92915050565b815183511480156109a3575080518351145b610a34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f4e61746976654f7264657273466561747572652f4d49534d4154434845445f5060448201527f4149525f4f52444552535f41525241595f4c454e47544853000000000000000060648201526084015b60405180910390fd5b5f5b8351811015610a9e57610a9633858381518110610a5557610a55615378565b6020026020010151858481518110610a6f57610a6f615378565b6020026020010151858581518110610a8957610a89615378565b602002602001015161259b565b600101610a36565b50505050565b604080516060810182525f808252602082018190529181018290529080610aca85611709565b9250610b5a6040518060a001604052808760a0015173ffffffffffffffffffffffffffffffffffffffff168152602001875f015173ffffffffffffffffffffffffffffffffffffffff16815260200187604001516fffffffffffffffffffffffffffffffff16815260200187606001516fffffffffffffffffffffffffffffffff1681526020018581525061268f565b83519092505f90610b7990610b74368890038801886153a5565b6127c1565b90508073ffffffffffffffffffffffffffffffffffffffff168660a0015173ffffffffffffffffffffffffffffffffffffffff161480610bc25750610bc28660a0015182610f3a565b9150509250925092565b604080516060810182525f8082526020820181905291810191909152610bf1826107d5565b81525f610bfc612938565b608084015173ffffffffffffffffffffffffffffffffffffffff9081165f9081526002929092016020908152604080842087518416855282528084208288015190931684529190529020546060840151610100850151610120860151929350610c69928592919085612944565b60c083015173ffffffffffffffffffffffffffffffffffffffff16610c8f575f60208301525b50919050565b604080516060810182525f808252602082018190529181018290529080610cbb85610bcc565b9250610d4b6040518060a00160405280876080015173ffffffffffffffffffffffffffffffffffffffff168152602001875f015173ffffffffffffffffffffffffffffffffffffffff16815260200187604001516fffffffffffffffffffffffffffffffff16815260200187606001516fffffffffffffffffffffffffffffffff1681526020018581525061268f565b91505f610d5b845f0151866127c1565b90508073ffffffffffffffffffffffffffffffffffffffff16866080015173ffffffffffffffffffffffffffffffffffffffff161480610bc25750610bc2866080015182610f3a565b5f5b81811015610dd757610dcf838383818110610dc357610dc3615378565b90506020020135612a41565b600101610da6565b505050565b5f5f7f74fece103e7470a8798099e7fd4af1eea16d523b4dbe60d7dc30ecf3519dba6587875f0151886020015189604001518a606001518a8a8a604051610e2a9897969594939291906153cc565b60405180910390a1505f966105399650945050505050565b5f5f610eb96040518060c00160405280878152602001868152602001856fffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020015f151581526020013373ffffffffffffffffffffffffffffffffffffffff16815250612c84565b9050826fffffffffffffffffffffffffffffffff1681602001516fffffffffffffffffffffffffffffffff161015610f2e57610f2e610f29610efa876107d5565b83602001516fffffffffffffffffffffffffffffffff16866fffffffffffffffffffffffffffffffff16613097565b61315e565b60400151949350505050565b5f610f43612938565b73ffffffffffffffffffffffffffffffffffffffff9384165f908152600491909101602090815260408083209490951682529290925250205460ff1690565b5f610f8c8261214e565b90508160a0015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610fd95750610fd78260a0015133610f3a565b155b15610ff057610ff0610f2982338560a00151613166565b610ffe818360a001516131c1565b5050565b81518351148015611014575080518351145b6110a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f4e61746976654f7264657273466561747572652f4d49534d4154434845445f5060448201527f4149525f4f52444552535f41525241595f4c454e4754485300000000000000006064820152608401610a2b565b5f5b8351811015610a9e57611102338583815181106110c1576110c1615378565b60200260200101518584815181106110db576110db615378565b60200260200101518585815181106110f5576110f5615378565b602002602001015161324d565b6001016110a2565b5f6111347f3cd2f02600000000000000000000000000000000000000000000000000000000613335565b61115d7ff6274f6600000000000000000000000000000000000000000000000000000000613335565b6111867faa77476c00000000000000000000000000000000000000000000000000000000613335565b6111af7f9240529c00000000000000000000000000000000000000000000000000000000613335565b6111d87f438cdfc500000000000000000000000000000000000000000000000000000000613335565b6112017f414e4ccf00000000000000000000000000000000000000000000000000000000613335565b61122a7faa6b21cd00000000000000000000000000000000000000000000000000000000613335565b6112537f7d49ec1a00000000000000000000000000000000000000000000000000000000613335565b61127c7ffe55a3ef00000000000000000000000000000000000000000000000000000000613335565b6112a57f9baa45a800000000000000000000000000000000000000000000000000000000613335565b6112ce7ff6e0f6a500000000000000000000000000000000000000000000000000000000613335565b6112f77fd0a55fb000000000000000000000000000000000000000000000000000000000613335565b6113207fb10a33f400000000000000000000000000000000000000000000000000000000613335565b6113497f86a0c8d700000000000000000000000000000000000000000000000000000000613335565b6113727f9f0434f500000000000000000000000000000000000000000000000000000000613335565b61139b7f9a4f809c00000000000000000000000000000000000000000000000000000000613335565b6113c47f935c82a400000000000000000000000000000000000000000000000000000000613335565b6113ed7f0f0e8cf700000000000000000000000000000000000000000000000000000000613335565b6114167ffd5f995b00000000000000000000000000000000000000000000000000000000613335565b61143f7f9548088900000000000000000000000000000000000000000000000000000000613335565b6114687f346693c500000000000000000000000000000000000000000000000000000000613335565b6114917fdd11d22500000000000000000000000000000000000000000000000000000000613335565b6114ba7f016a6d6500000000000000000000000000000000000000000000000000000000613335565b6114e37f487b5c2000000000000000000000000000000000000000000000000000000000613335565b61150c7fb09f1fb100000000000000000000000000000000000000000000000000000000613335565b6115357f1fb0979500000000000000000000000000000000000000000000000000000000613335565b61155e7f37f381d800000000000000000000000000000000000000000000000000000000613335565b6115877fb4658bfb00000000000000000000000000000000000000000000000000000000613335565b6115b07fad354eeb00000000000000000000000000000000000000000000000000000000613335565b6115d97fea7faa6100000000000000000000000000000000000000000000000000000000613335565b6116027f6b52a4a800000000000000000000000000000000000000000000000000000000613335565b507f2c64c5ef0000000000000000000000000000000000000000000000000000000090565b5f5f6116966040518060a00160405280878152602001868152602001856fffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152506133f3565b9050826fffffffffffffffffffffffffffffffff1681602001516fffffffffffffffffffffffffffffffff1610156116d7576116d7610f29610efa8761214e565b8051610f2e90613843565b6116ec8433610f3a565b6116fd576116fd610f2985336138c2565b610a9e8484848461259b565b604080516060810182525f808252602082018190529181019190915261172e8261214e565b81525f611739612938565b60a084015173ffffffffffffffffffffffffffffffffffffffff9081165f9081526001929092016020908152604080842087518416855282528084208288015190931684529190529020546060840151610140850151610160860151929350610c8f928592919085612944565b610dd73384848461259b565b5f5b8151811015610ffe576117df8282815181106117d2576117d2615378565b6020026020010151610f82565b6001016117b4565b815183511480156117f9575080518351145b611885576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f4e61746976654f7264657273466561747572652f4d49534d4154434845445f5060448201527f4149525f4f52444552535f41525241595f4c454e4754485300000000000000006064820152608401610a2b565b61188f8433610f3a565b6118a0576118a0610f2985336138c2565b5f5b83518110156118c9576118c1858583815181106110c1576110c1615378565b6001016118a2565b5050505050565b5f5f7fc03fa343c060fc606d5055416dcc7b6a43c24a30ee1f6f3e3ffd0c617aca241b88885f015189602001518a604001518b606001518b8b60405161191c97969594939291906155e3565b60405180910390a1505f97610539975095505050505050565b5f5f5f6119ad6040518060c00160405280888152602001878152602001866fffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020015f151581526020013373ffffffffffffffffffffffffffffffffffffffff16815250612c84565b60208101516040909101519097909650945050505050565b60608080858414611a58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4e61746976654f7264657273466561747572652f4d49534d4154434845445f4160448201527f525241595f4c454e4754485300000000000000000000000000000000000000006064820152608401610a2b565b8567ffffffffffffffff811115611a7157611a7161453f565b604051908082528060200260200182016040528015611ad957816020015b604080516060810182525f80825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181611a8f5790505b5092508567ffffffffffffffff811115611af557611af561453f565b604051908082528060200260200182016040528015611b1e578160200160208202803683370190505b5091508567ffffffffffffffff811115611b3a57611b3a61453f565b604051908082528060200260200182016040528015611b63578160200160208202803683370190505b5090505f5b86811015611cb257306337f381d8898984818110611b8857611b88615378565b90506101400201888885818110611ba157611ba1615378565b9050608002016040518363ffffffff1660e01b8152600401611bc49291906157cb565b60a060405180830381865afa925050508015611c1b575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611c1891810190615919565b60015b15611caa5782878581518110611c3357611c33615378565b602002602001018190525081868581518110611c5157611c51615378565b60200260200101906fffffffffffffffffffffffffffffffff1690816fffffffffffffffffffffffffffffffff168152505080858581518110611c9657611c96615378565b911515602092830291909101909101525050505b600101611b68565b509450945094915050565b333214611d4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4e61746976654f7264657273466561747572652f4e4f5f434f4e54524143545f60448201527f4f524947494e53000000000000000000000000000000000000000000000000006064820152608401610a2b565b5f611d55612938565b90505f5b8351811015611ded57335f90815260038301602052604081208551859290879085908110611d8957611d89615378565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff1682528101919091526040015f2080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055600101611d59565b507f02dfead5eb769b298e82dd9650b31c40559a3d42701dbf53c931bc2682847c31338484604051611e21939291906159ac565b60405180910390a1505050565b611e388433610f3a565b611e4957611e49610f2985336138c2565b610a9e8484848461324d565b60608080858414611ee8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4e61746976654f7264657273466561747572652f4d49534d4154434845445f4160448201527f525241595f4c454e4754485300000000000000000000000000000000000000006064820152608401610a2b565b8567ffffffffffffffff811115611f0157611f0161453f565b604051908082528060200260200182016040528015611f6957816020015b604080516060810182525f80825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181611f1f5790505b5092508567ffffffffffffffff811115611f8557611f8561453f565b604051908082528060200260200182016040528015611fae578160200160208202803683370190505b5091508567ffffffffffffffff811115611fca57611fca61453f565b604051908082528060200260200182016040528015611ff3578160200160208202803683370190505b5090505f5b86811015611cb25730631fb0979589898481811061201857612018615378565b9050610180020188888581811061203157612031615378565b9050608002016040518363ffffffff1660e01b8152600401612054929190615a30565b60a060405180830381865afa9250505080156120ab575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526120a891810190615919565b60015b1561213a57828785815181106120c3576120c3615378565b6020026020010181905250818685815181106120e1576120e1615378565b60200260200101906fffffffffffffffffffffffffffffffff1690816fffffffffffffffffffffffffffffffff16815250508085858151811061212657612126615378565b911515602092830291909101909101525050505b600101611ff8565b610dd73384848461324d565b5f61098b610913835f6040517fce918627cb55462ddbb85e73de69a8b322f2bc88f4507c52fcad6d4c33c29d498152825173ffffffffffffffffffffffffffffffffffffffff166020820152602083015173ffffffffffffffffffffffffffffffffffffffff16604082015260408301516fffffffffffffffffffffffffffffffff16606082015260608301516fffffffffffffffffffffffffffffffff16608082015260808301516fffffffffffffffffffffffffffffffff1660a082015260a083015173ffffffffffffffffffffffffffffffffffffffff1660c082015260c083015173ffffffffffffffffffffffffffffffffffffffff1660e082015260e083015173ffffffffffffffffffffffffffffffffffffffff1661010082015261010083015173ffffffffffffffffffffffffffffffffffffffff1661012082015261012083015161014082015261014083015167ffffffffffffffff166101608201526101608301516101808201526101a08120915050919050565b5f6122d5612938565b335f818152600483016020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016881515908117909155815194855291840192909252908201529091507f6ea9dbe8b2cc119348716a9220a0742ad62b7884ecb0ff4b32cd508121fd937990606001611e21565b5f5f5f6123e36040518060a00160405280888152602001878152602001866fffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152506133f3565b90506123f1815f0151613843565b602081015160409091015190969095509350505050565b5f5b8151811015610ffe5761243582828151811061242857612428615378565b602002602001015161251f565b60010161240a565b8151835114801561244f575080518351145b6124db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f4e61746976654f7264657273466561747572652f4d49534d4154434845445f5060448201527f4149525f4f52444552535f41525241595f4c454e4754485300000000000000006064820152608401610a2b565b6124e58433610f3a565b6124f6576124f6610f2985336138c2565b5f5b83518110156118c95761251785858381518110610a5557610a55615378565b6001016124f8565b5f612529826107d5565b9050816080015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156125765750612574826080015133610f3a565b155b1561258d5761258d610f2982338560800151613166565b610ffe8183608001516131c1565b5f6125a4612938565b73ffffffffffffffffffffffffffffffffffffffff8087165f90815260028301602090815260408083208985168452825280832093881683529290522054909150828111156125fa576125fa610f298483613997565b73ffffffffffffffffffffffffffffffffffffffff8681165f81815260028501602090815260408083208a8616808552908352818420958a1680855295835292819020889055805193845290830191909152810191909152606081018490527ffe7ffb1edfe79f4df716cb2dcad21cf2f31b104d816a7976ba1e6e4653c1efb1906080015b60405180910390a1505050505050565b5f81604001516fffffffffffffffffffffffffffffffff165f14806126c8575060608201516fffffffffffffffffffffffffffffffff16155b156126d457505f919050565b600182608001516020015160048111156126f0576126f0614a03565b146126fc57505f919050565b5f61275d83608001516040015184606001516127189190615bde565b6fffffffffffffffffffffffffffffffff1684606001516fffffffffffffffffffffffffffffffff1685604001516fffffffffffffffffffffffffffffffff166139d5565b9050612779816127748560200151865f01516139f3565b613b1b565b90506127ba6127b58285604001516fffffffffffffffffffffffffffffffff1686606001516fffffffffffffffffffffffffffffffff16613b30565b613b51565b9392505050565b5f6127cc8383613b7c565b6002825160048111156127e1576127e1614a03565b036128525760208083015160408085015160608087015183515f815295860180855289905260ff9094169285019290925290830152608082015260019060a0016020604051602081039080840390855afa158015612841573d5f5f3e3d5ffd5b50505060206040510351905061290f565b60038251600481111561286757612867614a03565b0361290f575f7f19457468657265756d205369676e6564204d6573736167653a0a3332000000005f5283601c52603c5f2090506001818460200151856040015186606001516040515f81526020016040526040516128e1949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015612901573d5f5f3e3d5ffd5b505050602060405103519150505b73ffffffffffffffffffffffffffffffffffffffff811661098b5761098b610f29600585613c6d565b5f5f61098b6007613ca3565b5f61294d612938565b86515f9081526020829052604090819020546fffffffffffffffffffffffffffffffff808216928a01839052929350918716116129a9576020870160025b9081600481111561299e5761299e614a03565b8152505050506118c9565b7f80000000000000000000000000000000000000000000000000000000000000008116156129dc5760208701600361298b565b504267ffffffffffffffff168467ffffffffffffffff1611612a1c576020860160045b90816004811115612a1257612a12614a03565b81525050506118c9565b82821115612a2f576020860160036129ff565b60016020870181905250505050505050565b6040517f319bed9a000000000000000000000000000000000000000000000000000000008152600481018290525f907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063319bed9a906024016020604051808303815f875af1158015612acd573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612af19190615c06565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192505f917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015612b80573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ba49190615c21565b90506001811115610dd75773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663a3b4a3278380612bf8600186615c38565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff938416600482015292909116602483015260448201526064015f604051808303815f87803b158015612c69575f5ffd5b505af1158015612c7b573d5f5f3e3d5ffd5b50505050505050565b604080516080810182525f8082526020820181905291810182905260608101919091525f612cb4835f0151610bcc565b9050600181602001516004811115612cce57612cce614a03565b14612cf857612cf8610f29825f015183602001516004811115612cf357612cf3614a03565b613ccb565b5f612d01612938565b845160c0015190915073ffffffffffffffffffffffffffffffffffffffff163214801590612d665750835160c0015173ffffffffffffffffffffffffffffffffffffffff165f908152600382016020908152604080832032845290915290205460ff16155b15612d82578151845160c00151612d8291610f29913290613d0b565b50825160a0015173ffffffffffffffffffffffffffffffffffffffff1615801590612de45750826060015173ffffffffffffffffffffffffffffffffffffffff16835f015160a0015173ffffffffffffffffffffffffffffffffffffffff1614155b15612e0557612e05610f29825f01518560600151865f015160a00151613d66565b5f612e17825f015185602001516127c1565b9050835f01516080015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015612e695750835160800151612e679082610f3a565b155b15612e85578151845160800151612e8591610f29918490613dc1565b50604080516101408101825282518152845160809081015173ffffffffffffffffffffffffffffffffffffffff166020830152850151612fcb92820190612ed0578560600151612ed2565b305b73ffffffffffffffffffffffffffffffffffffffff1681526020018560a0015173ffffffffffffffffffffffffffffffffffffffff168152602001855f01515f015173ffffffffffffffffffffffffffffffffffffffff168152602001855f01516020015173ffffffffffffffffffffffffffffffffffffffff168152602001855f0151604001516fffffffffffffffffffffffffffffffff168152602001855f0151606001516fffffffffffffffffffffffffffffffff16815260200185604001516fffffffffffffffffffffffffffffffff16815260200183604001516fffffffffffffffffffffffffffffffff16815250613e1c565b6fffffffffffffffffffffffffffffffff9081166040858101829052929091166020808601829052845187516080808201516060808c015184518588015160e0968701518c5198895273ffffffffffffffffffffffffffffffffffffffff958616998901999099529184169a87019a909a52988216908501529096169582019590955260a081019290925260c0820192909252918201527f829fa99d94dc4636925b38632e625736a614c154d55006b7ab6bea979c210c3290610100015b60405180910390a150919050565b6040516024810184905260448101839052606481018290526060907f21948612b5ef214ec0508df4901600e07a810a371be76b25d59ade73826e3d97906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915290509392505050565b805160208201fd5b6040516024810184905273ffffffffffffffffffffffffffffffffffffffff8084166044830152821660648201526060907f88b2c08e4a5f57d416ad23dad18c20497ccfe684b1379b28fd564adaf582b80f906084016130d8565b5f6131ca612938565b5f848152602082815260409182902080547f8000000000000000000000000000000000000000000000000000000000000000179055815186815273ffffffffffffffffffffffffffffffffffffffff8616918101919091529192507fa6eb7cdc219e1518ced964e9a34e61d68a94e4f1569db3e84256ba981ba527539101611e21565b5f613256612938565b73ffffffffffffffffffffffffffffffffffffffff8087165f90815260018301602090815260408083208985168452825280832093881683529290522054909150828111156132ac576132ac610f298483613997565b73ffffffffffffffffffffffffffffffffffffffff8681165f81815260018501602090815260408083208a8616808552908352818420958a1680855295835292819020889055805193845290830191909152810191909152606081018490527fa91fe7ae62fce669df2c7f880f8c14d178531aae72515558e5c948e37c32a5729060800161267f565b6040517f6eb224cb0000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008216600482015273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001660248201523090636eb224cb906044015f604051808303815f87803b1580156133e1575f5ffd5b505af11580156118c9573d5f5f3e3d5ffd5b604080516080810182525f8082526020820181905291810182905260608101919091525f613423835f0151611709565b905060018160200151600481111561343d5761343d614a03565b1461346257613462610f29825f015183602001516004811115612cf357612cf3614a03565b825160c0015173ffffffffffffffffffffffffffffffffffffffff16158015906134c35750826060015173ffffffffffffffffffffffffffffffffffffffff16835f015160c0015173ffffffffffffffffffffffffffffffffffffffff1614155b156134e4576134e4610f29825f01518560600151865f015160c00151613d66565b825160e0015173ffffffffffffffffffffffffffffffffffffffff16158015906135455750826080015173ffffffffffffffffffffffffffffffffffffffff16835f015160e0015173ffffffffffffffffffffffffffffffffffffffff1614155b1561356657613566610f29825f01518560800151865f015160e00151613fb1565b5f613578825f015185602001516127c1565b9050835f015160a0015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156135ca5750835160a001516135c89082610f3a565b155b156135e6578151845160a001516135e691610f29918490613dc1565b50825161012001516135f79061400c565b8252604080516101408101825282518152845160a09081015173ffffffffffffffffffffffffffffffffffffffff9081166020808501919091526060808901805184168688015251831681860152885151831660808601528851909101519091169183019190915285518301516fffffffffffffffffffffffffffffffff90811660c0840152865190910151811660e0830152858301518116610100830152918301519091166101208201526136ac90613e1c565b6fffffffffffffffffffffffffffffffff9081166040850152908116602084015283516080015116156137615761372c82602001516fffffffffffffffffffffffffffffffff16845f0151606001516fffffffffffffffffffffffffffffffff16855f0151608001516fffffffffffffffffffffffffffffffff166139d5565b6fffffffffffffffffffffffffffffffff166060808401829052845160208101519186015161010090910151613761936141eb565b8051835160a08101516060808701516101008401518451602080870151908a01516040808c0151968c01518c51610120909a015191517fab614d2b738543c0ea21f56347cf696a3a0c42a7cbec3212a5ca22a4dcff21249b6130899b909a999390919a8b5273ffffffffffffffffffffffffffffffffffffffff998a1660208c015297891660408b015295881660608a015293871660808901529190951660a08701526fffffffffffffffffffffffffffffffff94851660c0870152841660e08601529092166101008401526101208301919091526101408201526101600190565b80341180156138525750333014155b156138bf575f6138628234615c38565b6040519091505f90339083908381818185875af1925050503d805f81146138a4576040519150601f19603f3d011682016040523d82523d5f602084013e6138a9565b606091505b5050905080610dd757610dd7610f293384614333565b50565b60405173ffffffffffffffffffffffffffffffffffffffff8084166024830152821660448201526060907f84356db366796dc6e2aeb1ad74b631fe4e5ec6a650464da6059e9f95c8810a10906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152905092915050565b60405160248101839052604481018290526060907fb12bc7e7d341f4431d6faf05f991ee3b779183e341b24243064e10c886cd187390606401613912565b5f826139e18386615c4b565b6139eb9190615c62565b949350505050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301523060248301525f916127ba9185169063dd62ed3e90604401602060405180830381865afa158015613a69573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613a8d9190615c21565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301528616906370a0823190602401602060405180830381865afa158015613af7573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906127749190615c21565b5f818310613b2957816127ba565b5090919050565b5f82613b3d600182615c38565b613b478487615c4b565b6139e19190615c9a565b5f6fffffffffffffffffffffffffffffffff821115613b7857613b78610f29600384614386565b5090565b60408101517ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141111580613be85750613bd560027ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141615c62565b613be0906001615c9a565b606082015110155b15613bfb57613bfb610f29600584613c6d565b5f81516004811115613c0f57613c0f614a03565b03613c2257613c22610f29600384613c6d565b600181516004811115613c3757613c37614a03565b03613c4957613c49610f295f84613c6d565b600481516004811115613c5e57613c5e614a03565b03610ffe57610ffe610f296002845b60607ff18f11f3027e735c758137924b262d4d3aff0037dcd785aca3c699fa05d960bd8383604051602401613912929190615cad565b5f608082600b811115613cb857613cb8614a03565b613cc3906001615c9a565b901b92915050565b6040516024810183905260ff821660448201526060907f47ab394e41470191eaf9fa542e84ac483a12665fbd616eb8d1c022ced6c9400090606401613912565b6040516024810184905273ffffffffffffffffffffffffffffffffffffffff8084166044830152821660648201526060907fc0972f3cc4234ca2091de7e7bc7081494bd29ac280167d66f0d44168973b1634906084016130d8565b6040516024810184905273ffffffffffffffffffffffffffffffffffffffff8084166044830152821660648201526060907f5d3300180a4547b3e27137be832d3ebf56f1ba5ebb30dd580999c61f77fa6396906084016130d8565b6040516024810184905273ffffffffffffffffffffffffffffffffffffffff8084166044830152821660648201526060907ff13e65d925201525f3d71a731833b19bb26e44cfbd97caf72a366b73866f7124906084016130d8565b5f5f613e418361010001518461012001518560e00151613e3c9190615bde565b6143a3565b9150613e8c826fffffffffffffffffffffffffffffffff168460e001516fffffffffffffffffffffffffffffffff168560c001516fffffffffffffffffffffffffffffffff166139d5565b90506fffffffffffffffffffffffffffffffff82161580613ebd57506fffffffffffffffffffffffffffffffff8116155b15613ecc57505f928392509050565b81836101200151613edd9190615ccb565b6fffffffffffffffffffffffffffffffff16613ef7612938565b84515f908152602091909152604090819020919091558301513073ffffffffffffffffffffffffffffffffffffffff90911603613f5857613f538360a001518460200151846fffffffffffffffffffffffffffffffff166143d5565b613f82565b613f828360a0015184604001518560200151856fffffffffffffffffffffffffffffffff166141eb565b613fac836080015184602001518560600151846fffffffffffffffffffffffffffffffff166141eb565b915091565b6040516024810184905273ffffffffffffffffffffffffffffffffffffffff8084166044830152821660648201526060907f15e6a383bb02d79ee933b927fbecba78cdde16cba84b94a99661f44bcce3b736906084016130d8565b5f5f614016614509565b9050805f0361402757505f92915050565b5f6140f484604080517fff000000000000000000000000000000000000000000000000000000000000006020808301919091527f000000000000000000000000000000000000000000000000000000000000000060601b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166021830152603582018490527f000000000000000000000000000000000000000000000000000000000000000060558084019190915283518084039091018152607590920190925280519101205f9061098b565b90505f8173ffffffffffffffffffffffffffffffffffffffff16836040515f6040518083038185875af1925050503d805f811461414c576040519150601f19603f3d011682016040523d82523d5f602084013e614151565b606091505b50509050806141e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f466978696e50726f746f636f6c466565732f45544845525f5452414e5346455260448201527f5f46414c494544000000000000000000000000000000000000000000000000006064820152608401610a2b565b50909392505050565b3073ffffffffffffffffffffffffffffffffffffffff85160361428f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f466978696e546f6b656e5370656e6465722f43414e4e4f545f494e564f4b455f60448201527f53454c46000000000000000000000000000000000000000000000000000000006064820152608401610a2b565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015273ffffffffffffffffffffffffffffffffffffffff831660248201528160448201526020816064835f73ffffffffffffffffffffffffffffffffffffffff8a165af13d60018351146020821015168115178216915081612c7b57805f843e8083fd5b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526060907fbde95cc2119e0200d80642397198abfcf98e6e4dddd0de9c6320d86252ad40ab90606401613912565b606063c996af7b60e01b8383604051602401613912929190615cf3565b5f816fffffffffffffffffffffffffffffffff16836fffffffffffffffffffffffffffffffff1610613b2957816127ba565b3073ffffffffffffffffffffffffffffffffffffffff841603614479576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f466978696e546f6b656e5370656e6465722f43414e4e4f545f494e564f4b455f60448201527f53454c46000000000000000000000000000000000000000000000000000000006064820152608401610a2b565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201528160248201526020816044835f73ffffffffffffffffffffffffffffffffffffffff89165af13d6001835114602082101516811517821691508161450157805f843e8083fd5b505050505050565b5f61453a3a63ffffffff7f000000000000000000000000000000000000000000000000000000000000000016615c4b565b905090565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051610140810167ffffffffffffffff811182821017156145905761459061453f565b60405290565b604051610180810167ffffffffffffffff811182821017156145905761459061453f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156146015761460161453f565b604052919050565b73ffffffffffffffffffffffffffffffffffffffff811681146138bf575f5ffd5b803561463581614609565b919050565b6fffffffffffffffffffffffffffffffff811681146138bf575f5ffd5b80356146358161463a565b803567ffffffffffffffff81168114614635575f5ffd5b5f610140828403121561468a575f5ffd5b61469261456c565b905061469d8261462a565b81526146ab6020830161462a565b60208201526146bc60408301614657565b60408201526146cd60608301614657565b60608201526146de6080830161462a565b60808201526146ef60a0830161462a565b60a082015261470060c0830161462a565b60c082015260e0828101359082015261471c6101008301614662565b6101008201526101209182013591810191909152919050565b5f6101408284031215614746575f5ffd5b6127ba8383614679565b5f67ffffffffffffffff8211156147695761476961453f565b5060051b60200190565b5f82601f830112614782575f5ffd5b813561479561479082614750565b6145ba565b8082825260208201915060208360051b8601019250858311156147b6575f5ffd5b602085015b838110156147dc5780356147ce81614609565b8352602092830192016147bb565b5095945050505050565b5f82601f8301126147f5575f5ffd5b813561480361479082614750565b8082825260208201915060208360051b860101925085831115614824575f5ffd5b602085015b838110156147dc578035835260209283019201614829565b5f5f5f60608486031215614853575f5ffd5b833567ffffffffffffffff811115614869575f5ffd5b61487586828701614773565b935050602084013567ffffffffffffffff811115614891575f5ffd5b61489d86828701614773565b925050604084013567ffffffffffffffff8111156148b9575f5ffd5b610bc2868287016147e6565b5f61018082840312156148d6575f5ffd5b6148de614596565b90506148e98261462a565b81526148f76020830161462a565b602082015261490860408301614657565b604082015261491960608301614657565b606082015261492a60808301614657565b608082015261493b60a0830161462a565b60a082015261494c60c0830161462a565b60c082015261495d60e0830161462a565b60e082015261496f610100830161462a565b610100820152610120828101359082015261498d6101408301614662565b6101408201526101609182013591810191909152919050565b5f5f8284036102008112156149b9575f5ffd5b6149c385856148c5565b925060807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe80820112156149f4575f5ffd5b50610180830190509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600581106138bf576138bf614a03565b805182526020810151614a5281614a30565b60208301526040908101516fffffffffffffffffffffffffffffffff16910152565b60a08101614a828286614a40565b6fffffffffffffffffffffffffffffffff841660608301528215156080830152949350505050565b6060810161098b8284614a40565b600581106138bf575f5ffd5b803560ff81168114614635575f5ffd5b5f60808284031215614ae4575f5ffd5b6040516080810167ffffffffffffffff81118282101715614b0757614b0761453f565b6040529050808235614b1881614ab8565b8152614b2660208401614ac4565b602082015260408381013590820152606092830135920191909152919050565b5f5f6101c08385031215614b58575f5ffd5b614b628484614679565b9150614b72846101408501614ad4565b90509250929050565b5f5f60208385031215614b8c575f5ffd5b823567ffffffffffffffff811115614ba2575f5ffd5b8301601f81018513614bb2575f5ffd5b803567ffffffffffffffff811115614bc8575f5ffd5b8560208260051b8401011115614bdc575f5ffd5b6020919091019590945092505050565b5f5f5f5f5f6102608688031215614c01575f5ffd5b614c0b87876148c5565b9450614c1b876101808801614ad4565b9350610200860135614c2c8161463a565b9250610220860135614c3d81614609565b9150610240860135614c4e81614609565b809150509295509295909350565b5f5f5f6101e08486031215614c6f575f5ffd5b614c798585614679565b9250614c89856101408601614ad4565b91506101c0840135614c9a8161463a565b809150509250925092565b602081525f82518060208401528060208501604085015e5f6040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b5f5f60408385031215614d09575f5ffd5b8235614d1481614609565b91506020830135614d2481614609565b809150509250929050565b5f6101808284031215614d40575f5ffd5b6127ba83836148c5565b5f5f5f6102208486031215614d5d575f5ffd5b614d6785856148c5565b9250614d77856101808601614ad4565b9150610200840135614c9a8161463a565b5f5f5f5f60808587031215614d9b575f5ffd5b8435614da681614609565b93506020850135614db681614609565b92506040850135614dc681614609565b9396929550929360600135925050565b5f5f5f60608486031215614de8575f5ffd5b8335614df381614609565b92506020840135614e0381614609565b929592945050506040919091013590565b5f60208284031215614e24575f5ffd5b813567ffffffffffffffff811115614e3a575f5ffd5b8201601f81018413614e4a575f5ffd5b8035614e5861479082614750565b8082825260208201915060206101808402850101925086831115614e7a575f5ffd5b6020840193505b82841015614ea757614e9387856148c5565b825260208201915061018084019350614e81565b9695505050505050565b5f5f5f5f60808587031215614ec4575f5ffd5b8435614ecf81614609565b9350602085013567ffffffffffffffff811115614eea575f5ffd5b614ef687828801614773565b935050604085013567ffffffffffffffff811115614f12575f5ffd5b614f1e87828801614773565b925050606085013567ffffffffffffffff811115614f3a575f5ffd5b614f46878288016147e6565b91505092959194509250565b80151581146138bf575f5ffd5b803561463581614f52565b5f5f5f5f5f5f6102408789031215614f80575f5ffd5b614f8a8888614679565b9550614f9a886101408901614ad4565b94506101c0870135614fab8161463a565b93506101e0870135614fbc81614609565b9250610200870135614fcd81614f52565b9150610220870135614fde81614609565b809150509295509295509295565b5f5f83601f840112614ffc575f5ffd5b50813567ffffffffffffffff811115615013575f5ffd5b6020830191508360208260071b850101111561502d575f5ffd5b9250929050565b5f5f5f5f60408587031215615047575f5ffd5b843567ffffffffffffffff81111561505d575f5ffd5b8501601f8101871361506d575f5ffd5b803567ffffffffffffffff811115615083575f5ffd5b87602061014083028401011115615098575f5ffd5b60209182019550935085013567ffffffffffffffff8111156150b8575f5ffd5b6150c487828801614fec565b95989497509550505050565b5f8151808452602084019350602083015f5b8281101561510257815115158652602095860195909101906001016150e2565b5093949350505050565b606080825284519082018190525f9060208601906080840190835b818110156151505761513a838551614a40565b6020939093019260609290920191600101615127565b5050838103602080860191909152865180835291810192508601905f5b8181101561519d5782516fffffffffffffffffffffffffffffffff1684526020938401939092019160010161516d565b5050508281036040840152614ea781856150d0565b5f5f604083850312156151c3575f5ffd5b823567ffffffffffffffff8111156151d9575f5ffd5b8301601f810185136151e9575f5ffd5b80356151f761479082614750565b8082825260208201915060208360051b850101925087831115615218575f5ffd5b6020840193505b8284101561524357833561523281614609565b82526020938401939091019061521f565b9450614b729250505060208401614f5f565b5f5f5f5f60408587031215615268575f5ffd5b843567ffffffffffffffff81111561527e575f5ffd5b8501601f8101871361528e575f5ffd5b803567ffffffffffffffff8111156152a4575f5ffd5b87602061018083028401011115615098575f5ffd5b5f5f604083850312156152ca575f5ffd5b82356152d581614609565b91506020830135614d2481614f52565b5f602082840312156152f5575f5ffd5b813567ffffffffffffffff81111561530b575f5ffd5b8201601f8101841361531b575f5ffd5b803561532961479082614750565b808282526020820191506020610140840285010192508683111561534b575f5ffd5b6020840193505b82841015614ea7576153648785614679565b825260208201915061014084019350615352565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f608082840312156153b5575f5ffd5b6127ba8383614ad4565b6153c881614a30565b9052565b885173ffffffffffffffffffffffffffffffffffffffff168152610260810160208a0151615412602084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408a015161543660408401826fffffffffffffffffffffffffffffffff169052565b5060608a015161545a60608401826fffffffffffffffffffffffffffffffff169052565b5060808a015161547e60808401826fffffffffffffffffffffffffffffffff169052565b5060a08a01516154a660a084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c08a01516154ce60c084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060e08a01516154f660e084018273ffffffffffffffffffffffffffffffffffffffff169052565b506101008a015161552061010084018273ffffffffffffffffffffffffffffffffffffffff169052565b506101208a01516101208301526101408a015161554a61014084018267ffffffffffffffff169052565b506101608a015161016083015261556561018083018a6153bf565b60ff88166101a0830152866101c0830152856101e083015261559c6102008301866fffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff841661022083015273ffffffffffffffffffffffffffffffffffffffff83166102408301529998505050505050505050565b875173ffffffffffffffffffffffffffffffffffffffff16815261020081016020890151615629602084018273ffffffffffffffffffffffffffffffffffffffff169052565b50604089015161564d60408401826fffffffffffffffffffffffffffffffff169052565b50606089015161567160608401826fffffffffffffffffffffffffffffffff169052565b506080890151615699608084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a08901516156c160a084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c08901516156e960c084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060e089015160e083015261010089015161571161010084018267ffffffffffffffff169052565b5061012089015161012083015261572c6101408301896153bf565b60ff871661016083015285610180830152846101a08301526157636101c08301856fffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff83166101e083015298975050505050505050565b803561579781614ab8565b6157a081614a30565b825260ff6157b060208301614ac4565b16602083015260408181013590830152606090810135910152565b6101c081016157f7826157dd8661462a565b73ffffffffffffffffffffffffffffffffffffffff169052565b6158036020850161462a565b73ffffffffffffffffffffffffffffffffffffffff16602083015261582a60408501614657565b6fffffffffffffffffffffffffffffffff16604083015261584d60608501614657565b6fffffffffffffffffffffffffffffffff1660608301526158706080850161462a565b73ffffffffffffffffffffffffffffffffffffffff16608083015261589760a0850161462a565b73ffffffffffffffffffffffffffffffffffffffff1660a08301526158be60c0850161462a565b73ffffffffffffffffffffffffffffffffffffffff1660c083015260e084810135908301526158f06101008501614662565b67ffffffffffffffff1661010083015261012084810135908301526127ba61014083018461578c565b5f5f5f83850360a081121561592c575f5ffd5b6060811215615939575f5ffd5b506040516060810167ffffffffffffffff8111828210171561595d5761595d61453f565b60405284518152602085015161597281614ab8565b602082015260408501516159858161463a565b6040820152606085015190935061599b8161463a565b6080850151909250614c9a81614f52565b5f6060820173ffffffffffffffffffffffffffffffffffffffff86168352606060208401528085518083526080850191506020870192505f5b81811015615a1957835173ffffffffffffffffffffffffffffffffffffffff168352602093840193909201916001016159e5565b505080925050508215156040830152949350505050565b6102008101615a42826157dd8661462a565b615a4e6020850161462a565b73ffffffffffffffffffffffffffffffffffffffff166020830152615a7560408501614657565b6fffffffffffffffffffffffffffffffff166040830152615a9860608501614657565b6fffffffffffffffffffffffffffffffff166060830152615abb60808501614657565b6fffffffffffffffffffffffffffffffff166080830152615ade60a0850161462a565b73ffffffffffffffffffffffffffffffffffffffff1660a0830152615b0560c0850161462a565b73ffffffffffffffffffffffffffffffffffffffff1660c0830152615b2c60e0850161462a565b73ffffffffffffffffffffffffffffffffffffffff1660e0830152615b54610100850161462a565b73ffffffffffffffffffffffffffffffffffffffff166101008301526101208481013590830152615b886101408501614662565b67ffffffffffffffff1661014083015261016084810135908301526127ba61018083018461578c565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b6fffffffffffffffffffffffffffffffff828116828216039081111561098b5761098b615bb1565b5f60208284031215615c16575f5ffd5b81516127ba81614609565b5f60208284031215615c31575f5ffd5b5051919050565b8181038181111561098b5761098b615bb1565b808202811582820484141761098b5761098b615bb1565b5f82615c95577f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b500490565b8082018082111561098b5761098b615bb1565b6040810160068410615cc157615cc1614a03565b9281526020015290565b6fffffffffffffffffffffffffffffffff818116838216019081111561098b5761098b615bb1565b6040810160048410615cc157615cc1614a0356fea2646970667358221220e4fe14a5b56e79aab7d9c13eade50d20c0bb263655b8d7fcfb771378d8a96f8d64736f6c634300081c003360806040525f80553480156011575f5ffd5b50607980601d5f395ff3fe6080604052348015600e575f5ffd5b50600436106026575f3560e01c8063f2541a8c14602a575b5f5ffd5b60315f5481565b60405190815260200160405180910390f3fea2646970667358221220441c9024ad201e12716eff30242abddc0d0c41398bc7ac1654d874d1ab0a63ed64736f6c634300081c0033",
  "deployedBytecode": "",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
