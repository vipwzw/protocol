{
  "_format": "hh-sol-artifact-1",
  "contractName": "TestNativeOrdersFeature",
  "sourceName": "contracts/test/TestNativeOrdersFeature.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "zeroExAddress",
          "type": "address"
        },
        {
          "internalType": "contract IEtherToken",
          "name": "weth",
          "type": "address"
        },
        {
          "internalType": "contract IStaking",
          "name": "staking",
          "type": "address"
        },
        {
          "internalType": "contract FeeCollectorController",
          "name": "_feeCollectorController",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "protocolFeeMultiplier",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "makerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "takerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "takerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "takerTokenFeeFilledAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "protocolFeePaid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "pool",
          "type": "bytes32"
        }
      ],
      "name": "LimitOrderFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "OrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "OrderSignerRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "makerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "takerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minValidSalt",
          "type": "uint256"
        }
      ],
      "name": "PairCancelledLimitOrders",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "makerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "takerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minValidSalt",
          "type": "uint256"
        }
      ],
      "name": "PairCancelledRfqOrders",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "makerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "takerToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "takerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "pool",
          "type": "bytes32"
        }
      ],
      "name": "RfqOrderFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "RfqOrderOriginsAllowed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "EIP712_DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEATURE_NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEATURE_VERSION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROTOCOL_FEE_MULTIPLIER",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "_fillLimitOrder",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "takerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "useSelfBalance",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "_fillRfqOrder",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "takerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "batchCancelLimitOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Token[]",
          "name": "makerTokens",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20Token[]",
          "name": "takerTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minValidSalts",
          "type": "uint256[]"
        }
      ],
      "name": "batchCancelPairLimitOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token[]",
          "name": "makerTokens",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20Token[]",
          "name": "takerTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minValidSalts",
          "type": "uint256[]"
        }
      ],
      "name": "batchCancelPairLimitOrdersWithSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Token[]",
          "name": "makerTokens",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20Token[]",
          "name": "takerTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minValidSalts",
          "type": "uint256[]"
        }
      ],
      "name": "batchCancelPairRfqOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token[]",
          "name": "makerTokens",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20Token[]",
          "name": "takerTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minValidSalts",
          "type": "uint256[]"
        }
      ],
      "name": "batchCancelPairRfqOrdersWithSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "batchCancelRfqOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature[]",
          "name": "signatures",
          "type": "tuple[]"
        }
      ],
      "name": "batchGetLimitOrderRelevantStates",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum LibNativeOrder.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFilledAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct LibNativeOrder.OrderInfo[]",
          "name": "orderInfos",
          "type": "tuple[]"
        },
        {
          "internalType": "uint128[]",
          "name": "actualFillableTakerTokenAmounts",
          "type": "uint128[]"
        },
        {
          "internalType": "bool[]",
          "name": "isSignatureValids",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature[]",
          "name": "signatures",
          "type": "tuple[]"
        }
      ],
      "name": "batchGetRfqOrderRelevantStates",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum LibNativeOrder.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFilledAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct LibNativeOrder.OrderInfo[]",
          "name": "orderInfos",
          "type": "tuple[]"
        },
        {
          "internalType": "uint128[]",
          "name": "actualFillableTakerTokenAmounts",
          "type": "uint128[]"
        },
        {
          "internalType": "bool[]",
          "name": "isSignatureValids",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "cancelLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Token",
          "name": "makerToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token",
          "name": "takerToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minValidSalt",
          "type": "uint256"
        }
      ],
      "name": "cancelPairLimitOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token",
          "name": "makerToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token",
          "name": "takerToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minValidSalt",
          "type": "uint256"
        }
      ],
      "name": "cancelPairLimitOrdersWithSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Token",
          "name": "makerToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token",
          "name": "takerToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minValidSalt",
          "type": "uint256"
        }
      ],
      "name": "cancelPairRfqOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token",
          "name": "makerToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Token",
          "name": "takerToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minValidSalt",
          "type": "uint256"
        }
      ],
      "name": "cancelPairRfqOrdersWithSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "cancelRfqOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        }
      ],
      "name": "fillLimitOrder",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "takerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        }
      ],
      "name": "fillOrKillLimitOrder",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        }
      ],
      "name": "fillOrKillRfqOrder",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "takerTokenFillAmount",
          "type": "uint128"
        }
      ],
      "name": "fillRfqOrder",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "takerTokenFilledAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "makerTokenFilledAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getLimitOrderHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getLimitOrderInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum LibNativeOrder.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFilledAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct LibNativeOrder.OrderInfo",
          "name": "orderInfo",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFeeAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.LimitOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        }
      ],
      "name": "getLimitOrderRelevantState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum LibNativeOrder.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFilledAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct LibNativeOrder.OrderInfo",
          "name": "orderInfo",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "actualFillableTakerTokenAmount",
          "type": "uint128"
        },
        {
          "internalType": "bool",
          "name": "isSignatureValid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProtocolFeeMultiplier",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "multiplier",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getRfqOrderHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getRfqOrderInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum LibNativeOrder.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFilledAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct LibNativeOrder.OrderInfo",
          "name": "orderInfo",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20Token",
              "name": "makerToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Token",
              "name": "takerToken",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "makerAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "takerAmount",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "txOrigin",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "pool",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibNativeOrder.RfqOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum LibSignature.SignatureType",
              "name": "signatureType",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct LibSignature.Signature",
          "name": "signature",
          "type": "tuple"
        }
      ],
      "name": "getRfqOrderRelevantState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "internalType": "enum LibNativeOrder.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "takerTokenFilledAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct LibNativeOrder.OrderInfo",
          "name": "orderInfo",
          "type": "tuple"
        },
        {
          "internalType": "uint128",
          "name": "actualFillableTakerTokenAmount",
          "type": "uint128"
        },
        {
          "internalType": "bool",
          "name": "isSignatureValid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "isValidOrderSigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migrate",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "success",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "registerAllowedOrderSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "origins",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "registerAllowedRfqOrigins",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "poolIds",
          "type": "bytes32[]"
        }
      ],
      "name": "transferProtocolFeesForPools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x610180604052680100000003000000006101605234801561001e575f5ffd5b50604051614b5b380380614b5b83398101604081905261003d9161024d565b84848460405161004c9061022a565b604051809103905ff080158015610065573d5f5f3e3d5ffd5b5084848484848483838383838383838c80805f4690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f9e5dae0addaf20578aeb5d70341d092b53b4e14480ac5726438fd436df7ba4277f06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c838560405160200161011b9594939291909485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60408051601f1981840301815282825280516020918201206080526001600160a01b03891660c0819052633c9506a360e21b8452915191965063f2541a8c95506004808401955090935090918290030181865afa15801561017e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101a291906102c6565b60e08181525050836001600160a01b0316610100816001600160a01b031681525050826001600160a01b0316610120816001600160a01b0316815250508063ffffffff1660a08163ffffffff16815250505050505050505050306001600160a01b0316610140816001600160a01b0316815250505050505050505050505050505050506102dd565b609680614ac583390190565b6001600160a01b038116811461024a575f5ffd5b50565b5f5f5f5f5f60a08688031215610261575f5ffd5b855161026c81610236565b602087015190955061027d81610236565b604087015190945061028e81610236565b606087015190935061029f81610236565b608087015190925063ffffffff811681146102b8575f5ffd5b809150509295509295909350565b5f602082840312156102d6575f5ffd5b5051919050565b60805160a05160c05160e051610100516101205161014051610160516147716103545f395f61024e01525f612a7c01525f6120ff01525f61208101525f61334601525f8181611feb015261330701525f81816103a10152818161057201526132c501525f818161068d015261085701526147715ff3fe608060405260043610610207575f3560e01c80639a4f809c11610113578063b4658bfb1161009d578063ea7faa611161006d578063ea7faa61146106ce578063f6274f66146106ed578063f6e0f6a514610700578063fd5f995b1461071f578063fe55a3ef1461073e575f5ffd5b8063b4658bfb1461063e578063d0a55fb01461065d578063dab400f31461067c578063dd11d225146106af575f5ffd5b8063aa6b21cd116100e3578063aa6b21cd14610594578063aa77476c146105b3578063ad354eeb146105d2578063b09f1fb114610600578063b10a33f41461061f575f5ffd5b80639a4f809c146105045780639baa45a8146105235780639f0434f514610542578063a0edcef514610561575f5ffd5b8063487b5c201161019457806386a0c8d71161016457806386a0c8d7146104675780638fd3ab80146104865780639240529c146104b3578063935c82a4146104c657806395480889146104e5575f5ffd5b8063487b5c20146103935780636ae4b4f7146103d65780636b52a4a8146104195780637d49ec1a14610448575f5ffd5b8063346693c5116101da578063346693c5146102bf57806337f381d8146102eb5780633cd2f0261461030a578063414e4ccf14610329578063438cdfc51461035c575f5ffd5b8063016a6d651461020b578063031b905c1461023d5780630f0e8cf7146102705780631fb0979514610291575b5f5ffd5b348015610216575f5ffd5b5061022a6102253660046135d6565b61075d565b6040519081526020015b60405180910390f35b348015610248575f5ffd5b5061022a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561027b575f5ffd5b5061028f61028a3660046136e1565b6108aa565b005b34801561029c575f5ffd5b506102b06102ab366004613843565b610951565b604051610234939291906138d2565b3480156102ca575f5ffd5b506102de6102d93660046135d6565b610a33565b60405161023491906138ff565b3480156102f6575f5ffd5b506102b061030536600461399a565b610ae2565b348015610315575f5ffd5b5061028f6103243660046139cf565b610bab565b61033c610337366004613a3e565b610be3565b604080516001600160801b03938416815292909116602083015201610234565b348015610367575f5ffd5b5061037b610376366004613aae565b610c4a565b6040516001600160801b039091168152602001610234565b34801561039e575f5ffd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405163ffffffff9091168152602001610234565b3480156103e1575f5ffd5b5061040c6040518060400160405280600b81526020016a4c696d69744f726465727360a81b81525081565b6040516102349190613af7565b348015610424575f5ffd5b50610438610433366004613b2c565b610cfb565b6040519015158152602001610234565b348015610453575f5ffd5b5061028f610462366004613b63565b610d36565b348015610472575f5ffd5b5061028f6104813660046136e1565b610d9c565b348015610491575f5ffd5b5061049a610e34565b6040516001600160e01b03199091168152602001610234565b61037b6104c1366004613b7e565b611031565b3480156104d1575f5ffd5b5061028f6104e0366004613bbc565b6110b7565b3480156104f0575f5ffd5b506102de6104ff366004613b63565b6110de565b34801561050f575f5ffd5b5061028f61051e366004613c0a565b61116e565b34801561052e575f5ffd5b5061028f61053d366004613c48565b61117a565b34801561054d575f5ffd5b5061028f61055c366004613ce4565b6111af565b34801561056c575f5ffd5b506103c17f000000000000000000000000000000000000000000000000000000000000000081565b34801561059f575f5ffd5b5061033c6105ae366004613d9a565b611228565b3480156105be575f5ffd5b5061033c6105cd366004613aae565b611298565b3480156105dd575f5ffd5b506105f16105ec366004613e63565b611305565b60405161023493929190613f38565b34801561060b575f5ffd5b5061028f61061a366004613fd5565b61153b565b34801561062a575f5ffd5b5061028f610639366004613bbc565b611651565b348015610649575f5ffd5b506105f1610658366004614077565b611678565b348015610668575f5ffd5b5061028f610677366004613c0a565b6118a3565b348015610687575f5ffd5b5061022a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156106ba575f5ffd5b5061022a6106c9366004613b63565b6118af565b3480156106d9575f5ffd5b5061028f6106e83660046140d9565b6119c3565b61033c6106fb366004613b7e565b611a3f565b34801561070b575f5ffd5b5061028f61071a366004614105565b611ab1565b34801561072a575f5ffd5b5061028f610739366004613ce4565b611ae6565b348015610749575f5ffd5b5061028f6107583660046135d6565b611b58565b5f6108a4610847835f6040517fe593d3fdfa8b60e5e17a1b2204662ecbe15c23f2084b9ad5bae40359540a7da9815282516001600160a01b0316602082015260208301516001600160a01b0316604082015260408301516001600160801b0316606082015260608301516001600160801b0316608082015260808301516001600160a01b031660a082015260a08301516001600160a01b031660c082015260c08301516001600160a01b031660e082015260e08301516101008201526101008301516001600160401b03166101208201526101208301516101408201526101608120915050919050565b60405161190160f01b60208201527f00000000000000000000000000000000000000000000000000000000000000006022820152604281018290525f90606201604051602081830303815290604052805190602001209050919050565b92915050565b815183511480156108bc575080518351145b6108e15760405162461bcd60e51b81526004016108d890614197565b60405180910390fd5b5f5b835181101561094b5761094333858381518110610902576109026141f4565b602002602001015185848151811061091c5761091c6141f4565b6020026020010151858581518110610936576109366141f4565b6020026020010151611bba565b6001016108e3565b50505050565b604080516060810182525f808252602082018190529181018290529080610977856110de565b92506109db6040518060a001604052808760a001516001600160a01b03168152602001875f01516001600160a01b0316815260200187604001516001600160801b0316815260200187606001516001600160801b0316815260200185815250611c94565b83519092505f906109fa906109f536889003880188614208565b611d87565b9050806001600160a01b03168660a001516001600160a01b03161480610a295750610a298660a0015182610cfb565b9150509250925092565b604080516060810182525f8082526020820181905291810191909152610a588261075d565b81525f610a63611ef1565b60808401516001600160a01b039081165f9081526002929092016020908152604080842087518416855282528084208288015190931684529190529020546060840151610100850151610120860151929350610ac3928592919085611efd565b60c08301516001600160a01b0316610adc575f60208301525b50919050565b604080516060810182525f808252602082018190529181018290529080610b0885610a33565b9250610b6c6040518060a0016040528087608001516001600160a01b03168152602001875f01516001600160a01b0316815260200187604001516001600160801b0316815260200187606001516001600160801b0316815260200185815250611c94565b91505f610b7c845f015186611d87565b9050806001600160a01b031686608001516001600160a01b03161480610a295750610a29866080015182610cfb565b5f5b81811015610bde57610bd6838383818110610bca57610bca6141f4565b90506020020135611fd3565b600101610bad565b505050565b5f5f5f610c306040518060a001604052808a8152602001898152602001886001600160801b03168152602001876001600160a01b03168152602001866001600160a01b0316815250612198565b602081015160409091015190999098509650505050505050565b5f5f610c9e6040518060c00160405280878152602001868152602001856001600160801b03168152602001336001600160a01b031681526020015f15158152602001336001600160a01b031681525061253a565b9050826001600160801b031681602001516001600160801b03161015610cef57610cef610cea610ccd8761075d565b83602001516001600160801b0316866001600160801b0316612868565b6128e4565b60400151949350505050565b5f610d04611ef1565b6001600160a01b039384165f908152600491909101602090815260408083209490951682529290925250205460ff1690565b5f610d40826118af565b90508160a001516001600160a01b0316336001600160a01b031614158015610d735750610d718260a0015133610cfb565b155b15610d8a57610d8a610cea82338560a001516128ec565b610d98818360a00151612924565b5050565b81518351148015610dae575080518351145b610dca5760405162461bcd60e51b81526004016108d890614197565b5f5b835181101561094b57610e2c33858381518110610deb57610deb6141f4565b6020026020010151858481518110610e0557610e056141f4565b6020026020010151858581518110610e1f57610e1f6141f4565b6020026020010151612987565b600101610dcc565b5f610e45631e69781360e11b612a55565b610e55637b13a7b360e11b612a55565b610e65632a9dd1db60e21b612a55565b610e7563249014a760e21b612a55565b610e8563438cdfc560e01b612a55565b610e9563414e4ccf60e01b612a55565b610ea563aa6b21cd60e01b612a55565b610eb5633ea4f60d60e11b612a55565b610ec563fe55a3ef60e01b612a55565b610ed563137548b560e31b612a55565b610ee563f6e0f6a560e01b612a55565b610ef5630d0a55fb60e41b612a55565b610f05632c428cfd60e21b612a55565b610f156386a0c8d760e01b612a55565b610f25639f0434f560e01b612a55565b610f35632693e02760e21b612a55565b610f456324d720a960e21b612a55565b610f55630f0e8cf760e01b612a55565b610f6563fd5f995b60e01b612a55565b610f75639548088960e01b612a55565b610f8563346693c560e01b612a55565b610f9563dd11d22560e01b612a55565b610fa563016a6d6560e01b612a55565b610fb5630243dae160e51b612a55565b610fc563b09f1fb160e01b612a55565b610fd5631fb0979560e01b612a55565b610fe56306fe703b60e31b612a55565b610ff563b4658bfb60e01b612a55565b61100563ad354eeb60e01b612a55565b61101563ea7faa6160e01b612a55565b611025630d6a549560e31b612a55565b50632c64c5ef60e01b90565b5f5f61107d6040518060a00160405280878152602001868152602001856001600160801b03168152602001336001600160a01b03168152602001336001600160a01b0316815250612198565b9050826001600160801b031681602001516001600160801b031610156110ac576110ac610cea610ccd876118af565b8051610cef90612ad5565b6110c18433610cfb565b6110d2576110d2610cea8533612b54565b61094b84848484611bba565b604080516060810182525f8082526020820181905291810191909152611103826118af565b81525f61110e611ef1565b60a08401516001600160a01b039081165f9081526001929092016020908152604080842087518416855282528084208288015190931684529190529020546060840151610140850151610160860151929350610adc928592919085611efd565b610bde33848484611bba565b5f5b8151811015610d98576111a782828151811061119a5761119a6141f4565b6020026020010151610d36565b60010161117c565b815183511480156111c1575080518351145b6111dd5760405162461bcd60e51b81526004016108d890614197565b6111e78433610cfb565b6111f8576111f8610cea8533612b54565b5f5b83518110156112215761121985858381518110610deb57610deb6141f4565b6001016111fa565b5050505050565b5f5f5f61127d6040518060c001604052808b81526020018a8152602001896001600160801b03168152602001886001600160a01b031681526020018715158152602001866001600160a01b031681525061253a565b6020810151604090910151909a909950975050505050505050565b5f5f5f6112ed6040518060c00160405280888152602001878152602001866001600160801b03168152602001336001600160a01b031681526020015f15158152602001336001600160a01b031681525061253a565b60208101516040909101519097909650945050505050565b606080808584146113285760405162461bcd60e51b81526004016108d890614222565b856001600160401b0381111561134057611340613431565b60405190808252806020026020018201604052801561138957816020015b604080516060810182525f80825260208083018290529282015282525f1990920191018161135e5790505b509250856001600160401b038111156113a4576113a4613431565b6040519080825280602002602001820160405280156113cd578160200160208202803683370190505b509150856001600160401b038111156113e8576113e8613431565b604051908082528060200260200182016040528015611411578160200160208202803683370190505b5090505f5b8681101561153057306337f381d8898984818110611436576114366141f4565b9050610140020188888581811061144f5761144f6141f4565b9050608002016040518363ffffffff1660e01b81526004016114729291906142ad565b60a060405180830381865afa9250505080156114ab575060408051601f3d908101601f191682019092526114a8918101906143a7565b60015b1561152857828785815181106114c3576114c36141f4565b6020026020010181905250818685815181106114e1576114e16141f4565b60200260200101906001600160801b031690816001600160801b03168152505080858581518110611514576115146141f4565b911515602092830291909101909101525050505b600101611416565b509450945094915050565b33321461159a5760405162461bcd60e51b815260206004820152602760248201527f4e61746976654f7264657273466561747572652f4e4f5f434f4e54524143545f6044820152664f524947494e5360c81b60648201526084016108d8565b5f6115a3611ef1565b90505f5b835181101561161057335f908152600383016020526040812085518592908790859081106115d7576115d76141f4565b6020908102919091018101516001600160a01b031682528101919091526040015f20805460ff19169115159190911790556001016115a7565b507f02dfead5eb769b298e82dd9650b31c40559a3d42701dbf53c931bc2682847c3133848460405161164493929190614439565b60405180910390a1505050565b61165b8433610cfb565b61166c5761166c610cea8533612b54565b61094b84848484612987565b6060808085841461169b5760405162461bcd60e51b81526004016108d890614222565b856001600160401b038111156116b3576116b3613431565b6040519080825280602002602001820160405280156116fc57816020015b604080516060810182525f80825260208083018290529282015282525f199092019101816116d15790505b509250856001600160401b0381111561171757611717613431565b604051908082528060200260200182016040528015611740578160200160208202803683370190505b509150856001600160401b0381111561175b5761175b613431565b604051908082528060200260200182016040528015611784578160200160208202803683370190505b5090505f5b868110156115305730631fb097958989848181106117a9576117a96141f4565b905061018002018888858181106117c2576117c26141f4565b9050608002016040518363ffffffff1660e01b81526004016117e59291906144a2565b60a060405180830381865afa92505050801561181e575060408051601f3d908101601f1916820190925261181b918101906143a7565b60015b1561189b5782878581518110611836576118366141f4565b602002602001018190525081868581518110611854576118546141f4565b60200260200101906001600160801b031690816001600160801b03168152505080858581518110611887576118876141f4565b911515602092830291909101909101525050505b600101611789565b610bde33848484612987565b5f6108a4610847835f6040517fce918627cb55462ddbb85e73de69a8b322f2bc88f4507c52fcad6d4c33c29d49815282516001600160a01b0316602082015260208301516001600160a01b0316604082015260408301516001600160801b0316606082015260608301516001600160801b0316608082015260808301516001600160801b031660a082015260a08301516001600160a01b031660c082015260c08301516001600160a01b031660e082015260e08301516001600160a01b03166101008201526101008301516001600160a01b03166101208201526101208301516101408201526101408301516001600160401b03166101608201526101608301516101808201526101a08120915050919050565b5f6119cc611ef1565b335f81815260048301602090815260408083206001600160a01b03891680855290835292819020805460ff1916881515908117909155815194855291840192909252908201529091507f6ea9dbe8b2cc119348716a9220a0742ad62b7884ecb0ff4b32cd508121fd937990606001611644565b5f5f5f611a8c6040518060a00160405280888152602001878152602001866001600160801b03168152602001336001600160a01b03168152602001336001600160a01b0316815250612198565b9050611a9a815f0151612ad5565b602081015160409091015190969095509350505050565b5f5b8151811015610d9857611ade828281518110611ad157611ad16141f4565b6020026020010151611b58565b600101611ab3565b81518351148015611af8575080518351145b611b145760405162461bcd60e51b81526004016108d890614197565b611b1e8433610cfb565b611b2f57611b2f610cea8533612b54565b5f5b835181101561122157611b5085858381518110610902576109026141f4565b600101611b31565b5f611b628261075d565b905081608001516001600160a01b0316336001600160a01b031614158015611b955750611b93826080015133610cfb565b155b15611bac57611bac610cea823385608001516128ec565b610d98818360800151612924565b5f611bc3611ef1565b6001600160a01b038087165f9081526002830160209081526040808320898516845282528083209388168352929052205490915082811115611c0c57611c0c610cea8483612bd1565b6001600160a01b038681165f81815260028501602090815260408083208a8616808552908352818420958a1680855295835292819020889055805193845290830191909152810191909152606081018490527ffe7ffb1edfe79f4df716cb2dcad21cf2f31b104d816a7976ba1e6e4653c1efb1906080015b60405180910390a1505050505050565b5f81604001516001600160801b03165f1480611cbb575060608201516001600160801b0316155b15611cc757505f919050565b60018260800151602001516004811115611ce357611ce3613883565b14611cef57505f919050565b5f611d358360800151604001518460600151611d0b91906145da565b6001600160801b031684606001516001600160801b031685604001516001600160801b0316612c0f565b9050611d5181611d4c8560200151865f0151612c2d565b612d09565b9050611d80611d7b8285604001516001600160801b031686606001516001600160801b0316612d1e565b612d3f565b9392505050565b5f611d928383612d61565b600282516004811115611da757611da7613883565b03611e185760208083015160408085015160608087015183515f815295860180855289905260ff9094169285019290925290830152608082015260019060a0016020604051602081039080840390855afa158015611e07573d5f5f3e3d5ffd5b505050602060405103519050611ed5565b600382516004811115611e2d57611e2d613883565b03611ed5575f7f19457468657265756d205369676e6564204d6573736167653a0a3332000000005f5283601c52603c5f2090506001818460200151856040015186606001516040515f8152602001604052604051611ea7949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015611ec7573d5f5f3e3d5ffd5b505050602060405103519150505b6001600160a01b0381166108a4576108a4610cea600585612e36565b5f5f6108a46007612e6c565b5f611f06611ef1565b86515f9081526020829052604090819020546001600160801b03808216928a0183905292935091871611611f59576020870160025b90816004811115611f4e57611f4e613883565b815250505050611221565b600160ff1b811615611f7057602087016003611f3b565b50426001600160401b0316846001600160401b031611611fae576020860160045b90816004811115611fa457611fa4613883565b8152505050611221565b82821115611fc157602086016003611f91565b60016020870181905250505050505050565b6040516318cdf6cd60e11b8152600481018290525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063319bed9a906024016020604051808303815f875af1158015612039573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061205d91906145f9565b6040516370a0823160e01b81526001600160a01b0380831660048301529192505f917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156120c6573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120ea9190614614565b90506001811115610bde576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a3b4a327838061213160018661462b565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064015f604051808303815f87803b15801561217d575f5ffd5b505af115801561218f573d5f5f3e3d5ffd5b50505050505050565b604080516080810182525f8082526020820181905291810182905260608101919091525f6121c8835f01516110de565b90506001816020015160048111156121e2576121e2613883565b1461220c5761220c610cea825f01518360200151600481111561220757612207613883565b612e94565b825160c001516001600160a01b031615801590612246575082606001516001600160a01b0316835f015160c001516001600160a01b031614155b1561226757612267610cea825f01518560600151865f015160c00151612ed4565b825160e001516001600160a01b0316158015906122a1575082608001516001600160a01b0316835f015160e001516001600160a01b031614155b156122c2576122c2610cea825f01518560800151865f015160e00151612f0c565b5f6122d4825f01518560200151611d87565b9050835f015160a001516001600160a01b0316816001600160a01b03161415801561230c5750835160a0015161230a9082610cfb565b155b15612328578151845160a0015161232891610cea918490612f44565b508251610120015161233990612f7c565b8252604080516101408101825282518152845160a0908101516001600160a01b039081166020808501919091526060808901805184168688015251831681860152885151831660808601528851909101519091169183019190915285518301516001600160801b0390811660c0840152865190910151811660e0830152858301518116610100830152918301519091166101208201526123d89061305b565b6001600160801b039081166040850152908116602084015283516080015116156124605761243482602001516001600160801b0316845f0151606001516001600160801b0316855f0151608001516001600160801b0316612c0f565b6001600160801b0316606080840182905284516020810151918601516101009091015161246093613192565b8051835160a08101516060808701516101008401518451602080870151908a01516040808c0151968c01518c51610120909a015191517fab614d2b738543c0ea21f56347cf696a3a0c42a7cbec3212a5ca22a4dcff21249b61252c9b909a999390919a8b526001600160a01b03998a1660208c015297891660408b015295881660608a015293871660808901529190951660a08701526001600160801b0394851660c0870152841660e08601529092166101008401526101208301919091526101408201526101600190565b60405180910390a150919050565b604080516080810182525f8082526020820181905291810182905260608101919091525f61256a835f0151610a33565b905060018160200151600481111561258457612584613883565b146125a9576125a9610cea825f01518360200151600481111561220757612207613883565b5f6125b2611ef1565b845160c001519091506001600160a01b031632148015906125fd5750835160c001516001600160a01b03165f908152600382016020908152604080832032845290915290205460ff16155b15612619578151845160c0015161261991610cea91329061321e565b50825160a001516001600160a01b031615801590612654575082606001516001600160a01b0316835f015160a001516001600160a01b031614155b1561267557612675610cea825f01518560600151865f015160a00151612ed4565b5f612687825f01518560200151611d87565b9050835f0151608001516001600160a01b0316816001600160a01b0316141580156126bf57508351608001516126bd9082610cfb565b155b156126db5781518451608001516126db91610cea918490612f44565b5060408051610140810182528251815284516080908101516001600160a01b031660208301528501516127bc9282019061271957856060015161271b565b305b6001600160a01b031681526020018560a001516001600160a01b03168152602001855f01515f01516001600160a01b03168152602001855f0151602001516001600160a01b03168152602001855f0151604001516001600160801b03168152602001855f0151606001516001600160801b0316815260200185604001516001600160801b0316815260200183604001516001600160801b031681525061305b565b6001600160801b039081166040858101829052929091166020808601829052845187516080808201516060808c015184518588015160e0968701518c519889526001600160a01b03958616998901999099529184169a87019a909a52988216908501529096169582019590955260a081019290925260c0820192909252918201527f829fa99d94dc4636925b38632e625736a614c154d55006b7ab6bea979c210c32906101000161252c565b6040516024810184905260448101839052606481018290526060907f21948612b5ef214ec0508df4901600e07a810a371be76b25d59ade73826e3d97906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290509392505050565b805160208201fd5b60607f88b2c08e4a5f57d416ad23dad18c20497ccfe684b1379b28fd564adaf582b80f8484846040516024016128a99392919061463e565b5f61292d611ef1565b5f84815260208281526040918290208054600160ff1b17905581518681526001600160a01b038616918101919091529192507fa6eb7cdc219e1518ced964e9a34e61d68a94e4f1569db3e84256ba981ba527539101611644565b5f612990611ef1565b6001600160a01b038087165f90815260018301602090815260408083208985168452825280832093881683529290522054909150828111156129d9576129d9610cea8483612bd1565b6001600160a01b038681165f81815260018501602090815260408083208a8616808552908352818420958a1680855295835292819020889055805193845290830191909152810191909152606081018490527fa91fe7ae62fce669df2c7f880f8c14d178531aae72515558e5c948e37c32a57290608001611c84565b604051636eb224cb60e01b81526001600160e01b0319821660048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201523090636eb224cb906044015f604051808303815f87803b158015612ac3575f5ffd5b505af1158015611221573d5f5f3e3d5ffd5b8034118015612ae45750333014155b15612b51575f612af4823461462b565b6040519091505f90339083908381818185875af1925050503d805f8114612b36576040519150601f19603f3d011682016040523d82523d5f602084013e612b3b565b606091505b5050905080610bde57610bde610cea3384613256565b50565b6040516001600160a01b038084166024830152821660448201526060907f84356db366796dc6e2aeb1ad74b631fe4e5ec6a650464da6059e9f95c8810a10906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905092915050565b60405160248101839052604481018290526060907fb12bc7e7d341f4431d6faf05f991ee3b779183e341b24243064e10c886cd187390606401612b97565b5f82612c1b838661465d565b612c259190614674565b949350505050565b604051636eb1769f60e11b81526001600160a01b0382811660048301523060248301525f91611d809185169063dd62ed3e90604401602060405180830381865afa158015612c7d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ca19190614614565b6040516370a0823160e01b81526001600160a01b0385811660048301528616906370a0823190602401602060405180830381865afa158015612ce5573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d4c9190614614565b5f818310612d175781611d80565b5090919050565b5f82612d2b60018261462b565b612d35848761465d565b612c1b9190614693565b5f6001600160801b03821115612d5d57612d5d610cea60038461329c565b5090565b604081015170014551231950b75fc4402da1732fc9bebe19111580612db15750612d9e600270014551231950b75fc4402da1732fc9bebe19614674565b612da9906001614693565b606082015110155b15612dc457612dc4610cea600584612e36565b5f81516004811115612dd857612dd8613883565b03612deb57612deb610cea600384612e36565b600181516004811115612e0057612e00613883565b03612e1257612e12610cea5f84612e36565b600481516004811115612e2757612e27613883565b03610d9857610d98610cea6002845b60607ff18f11f3027e735c758137924b262d4d3aff0037dcd785aca3c699fa05d960bd8383604051602401612b979291906146a6565b5f608082600b811115612e8157612e81613883565b612e8c906001614693565b901b92915050565b6040516024810183905260ff821660448201526060907f47ab394e41470191eaf9fa542e84ac483a12665fbd616eb8d1c022ced6c9400090606401612b97565b60607f5d3300180a4547b3e27137be832d3ebf56f1ba5ebb30dd580999c61f77fa63968484846040516024016128a99392919061463e565b60607f15e6a383bb02d79ee933b927fbecba78cdde16cba84b94a99661f44bcce3b7368484846040516024016128a99392919061463e565b60607ff13e65d925201525f3d71a731833b19bb26e44cfbd97caf72a366b73866f71248484846040516024016128a99392919061463e565b5f5f612f866132b9565b9050805f03612f9757505f92915050565b5f612fa1846132ef565b90505f816001600160a01b0316836040515f6040518083038185875af1925050503d805f8114612fec576040519150601f19603f3d011682016040523d82523d5f602084013e612ff1565b606091505b50509050806130525760405162461bcd60e51b815260206004820152602760248201527f466978696e50726f746f636f6c466565732f45544845525f5452414e5346455260448201526617d1905312515160ca1b60648201526084016108d8565b50909392505050565b5f5f6130808361010001518461012001518560e0015161307b91906145da565b61338c565b91506130b0826001600160801b03168460e001516001600160801b03168560c001516001600160801b0316612c0f565b90506001600160801b03821615806130cf57506001600160801b038116155b156130de57505f928392509050565b818361012001516130ef91906146c4565b6001600160801b0316613100611ef1565b84515f90815260209190915260409081902091909155830151306001600160a01b039091160361314b576131468360a001518460200151846001600160801b03166133ac565b61316c565b61316c8360a0015184604001518560200151856001600160801b0316613192565b61318d836080015184602001518560600151846001600160801b0316613192565b915091565b306001600160a01b038516036131ba5760405162461bcd60e51b81526004016108d8906146e3565b6040516323b872dd60e01b81526001600160a01b03841660048201526001600160a01b03831660248201528160448201526020816064835f6001600160a01b038a165af13d6001835114602082101516811517821691508161218f57805f843e8083fd5b60607fc0972f3cc4234ca2091de7e7bc7081494bd29ac280167d66f0d44168973b16348484846040516024016128a99392919061463e565b6040516001600160a01b0383166024820152604481018290526060907fbde95cc2119e0200d80642397198abfcf98e6e4dddd0de9c6320d86252ad40ab90606401612b97565b606063c996af7b60e01b8383604051602401612b97929190614727565b5f6132ea3a63ffffffff7f00000000000000000000000000000000000000000000000000000000000000001661465d565b905090565b604080516001600160f81b03196020808301919091527f000000000000000000000000000000000000000000000000000000000000000060601b6bffffffffffffffffffffffff19166021830152603582018490527f000000000000000000000000000000000000000000000000000000000000000060558084019190915283518084039091018152607590920190925280519101205f906108a4565b5f816001600160801b0316836001600160801b031610612d175781611d80565b306001600160a01b038416036133d45760405162461bcd60e51b81526004016108d8906146e3565b60405163a9059cbb60e01b81526001600160a01b03831660048201528160248201526020816044835f6001600160a01b0389165af13d6001835114602082101516811517821691508161342957805f843e8083fd5b505050505050565b634e487b7160e01b5f52604160045260245ffd5b60405161014081016001600160401b038111828210171561346857613468613431565b60405290565b60405161018081016001600160401b038111828210171561346857613468613431565b604051601f8201601f191681016001600160401b03811182821017156134b9576134b9613431565b604052919050565b6001600160a01b0381168114612b51575f5ffd5b80356134e0816134c1565b919050565b6001600160801b0381168114612b51575f5ffd5b80356134e0816134e5565b80356001600160401b03811681146134e0575f5ffd5b5f610140828403121561352b575f5ffd5b613533613445565b905061353e826134d5565b815261354c602083016134d5565b602082015261355d604083016134f9565b604082015261356e606083016134f9565b606082015261357f608083016134d5565b608082015261359060a083016134d5565b60a08201526135a160c083016134d5565b60c082015260e082810135908201526135bd6101008301613504565b6101008201526101209182013591810191909152919050565b5f61014082840312156135e7575f5ffd5b611d80838361351a565b5f6001600160401b0382111561360957613609613431565b5060051b60200190565b5f82601f830112613622575f5ffd5b8135613635613630826135f1565b613491565b8082825260208201915060208360051b860101925085831115613656575f5ffd5b602085015b8381101561367c57803561366e816134c1565b83526020928301920161365b565b5095945050505050565b5f82601f830112613695575f5ffd5b81356136a3613630826135f1565b8082825260208201915060208360051b8601019250858311156136c4575f5ffd5b602085015b8381101561367c5780358352602092830192016136c9565b5f5f5f606084860312156136f3575f5ffd5b83356001600160401b03811115613708575f5ffd5b61371486828701613613565b93505060208401356001600160401b0381111561372f575f5ffd5b61373b86828701613613565b92505060408401356001600160401b03811115613756575f5ffd5b610a2986828701613686565b5f6101808284031215613773575f5ffd5b61377b61346e565b9050613786826134d5565b8152613794602083016134d5565b60208201526137a5604083016134f9565b60408201526137b6606083016134f9565b60608201526137c7608083016134f9565b60808201526137d860a083016134d5565b60a08201526137e960c083016134d5565b60c08201526137fa60e083016134d5565b60e082015261380c61010083016134d5565b610100820152610120828101359082015261382a6101408301613504565b6101408201526101609182013591810191909152919050565b5f5f828403610200811215613856575f5ffd5b6138608585613762565b9250608061017f1982011215613874575f5ffd5b50610180830190509250929050565b634e487b7160e01b5f52602160045260245ffd5b60058110612b5157612b51613883565b8051825260208101516138b981613897565b60208301526040908101516001600160801b0316910152565b60a081016138e082866138a7565b6001600160801b03841660608301528215156080830152949350505050565b606081016108a482846138a7565b60058110612b51575f5ffd5b803560ff811681146134e0575f5ffd5b5f60808284031215613939575f5ffd5b604051608081016001600160401b038111828210171561395b5761395b613431565b604052905080823561396c8161390d565b815261397a60208401613919565b602082015260408381013590820152606092830135920191909152919050565b5f5f6101c083850312156139ac575f5ffd5b6139b6848461351a565b91506139c6846101408501613929565b90509250929050565b5f5f602083850312156139e0575f5ffd5b82356001600160401b038111156139f5575f5ffd5b8301601f81018513613a05575f5ffd5b80356001600160401b03811115613a1a575f5ffd5b8560208260051b8401011115613a2e575f5ffd5b6020919091019590945092505050565b5f5f5f5f5f6102608688031215613a53575f5ffd5b613a5d8787613762565b9450613a6d876101808801613929565b9350610200860135613a7e816134e5565b9250610220860135613a8f816134c1565b9150610240860135613aa0816134c1565b809150509295509295909350565b5f5f5f6101e08486031215613ac1575f5ffd5b613acb858561351a565b9250613adb856101408601613929565b91506101c0840135613aec816134e5565b809150509250925092565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f5f60408385031215613b3d575f5ffd5b8235613b48816134c1565b91506020830135613b58816134c1565b809150509250929050565b5f6101808284031215613b74575f5ffd5b611d808383613762565b5f5f5f6102208486031215613b91575f5ffd5b613b9b8585613762565b9250613bab856101808601613929565b9150610200840135613aec816134e5565b5f5f5f5f60808587031215613bcf575f5ffd5b8435613bda816134c1565b93506020850135613bea816134c1565b92506040850135613bfa816134c1565b9396929550929360600135925050565b5f5f5f60608486031215613c1c575f5ffd5b8335613c27816134c1565b92506020840135613c37816134c1565b929592945050506040919091013590565b5f60208284031215613c58575f5ffd5b81356001600160401b03811115613c6d575f5ffd5b8201601f81018413613c7d575f5ffd5b8035613c8b613630826135f1565b8082825260208201915060206101808402850101925086831115613cad575f5ffd5b6020840193505b82841015613cda57613cc68785613762565b825260208201915061018084019350613cb4565b9695505050505050565b5f5f5f5f60808587031215613cf7575f5ffd5b8435613d02816134c1565b935060208501356001600160401b03811115613d1c575f5ffd5b613d2887828801613613565b93505060408501356001600160401b03811115613d43575f5ffd5b613d4f87828801613613565b92505060608501356001600160401b03811115613d6a575f5ffd5b613d7687828801613686565b91505092959194509250565b8015158114612b51575f5ffd5b80356134e081613d82565b5f5f5f5f5f5f6102408789031215613db0575f5ffd5b613dba888861351a565b9550613dca886101408901613929565b94506101c0870135613ddb816134e5565b93506101e0870135613dec816134c1565b9250610200870135613dfd81613d82565b9150610220870135613e0e816134c1565b809150509295509295509295565b5f5f83601f840112613e2c575f5ffd5b5081356001600160401b03811115613e42575f5ffd5b6020830191508360208260071b8501011115613e5c575f5ffd5b9250929050565b5f5f5f5f60408587031215613e76575f5ffd5b84356001600160401b03811115613e8b575f5ffd5b8501601f81018713613e9b575f5ffd5b80356001600160401b03811115613eb0575f5ffd5b87602061014083028401011115613ec5575f5ffd5b6020918201955093508501356001600160401b03811115613ee4575f5ffd5b613ef087828801613e1c565b95989497509550505050565b5f8151808452602084019350602083015f5b82811015613f2e5781511515865260209586019590910190600101613f0e565b5093949350505050565b606080825284519082018190525f9060208601906080840190835b81811015613f7c57613f668385516138a7565b6020939093019260609290920191600101613f53565b5050838103602080860191909152865180835291810192508601905f5b81811015613fc05782516001600160801b0316845260209384019390920191600101613f99565b5050508281036040840152613cda8185613efc565b5f5f60408385031215613fe6575f5ffd5b82356001600160401b03811115613ffb575f5ffd5b8301601f8101851361400b575f5ffd5b8035614019613630826135f1565b8082825260208201915060208360051b85010192508783111561403a575f5ffd5b6020840193505b82841015614065578335614054816134c1565b825260209384019390910190614041565b94506139c69250505060208401613d8f565b5f5f5f5f6040858703121561408a575f5ffd5b84356001600160401b0381111561409f575f5ffd5b8501601f810187136140af575f5ffd5b80356001600160401b038111156140c4575f5ffd5b87602061018083028401011115613ec5575f5ffd5b5f5f604083850312156140ea575f5ffd5b82356140f5816134c1565b91506020830135613b5881613d82565b5f60208284031215614115575f5ffd5b81356001600160401b0381111561412a575f5ffd5b8201601f8101841361413a575f5ffd5b8035614148613630826135f1565b808282526020820191506020610140840285010192508683111561416a575f5ffd5b6020840193505b82841015613cda57614183878561351a565b825260208201915061014084019350614171565b60208082526038908201527f4e61746976654f7264657273466561747572652f4d49534d4154434845445f5060408201527f4149525f4f52444552535f41525241595f4c454e475448530000000000000000606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b5f60808284031215614218575f5ffd5b611d808383613929565b6020808252602c908201527f4e61746976654f7264657273466561747572652f4d49534d4154434845445f4160408201526b525241595f4c454e4754485360a01b606082015260800190565b80356142798161390d565b61428281613897565b825260ff61429260208301613919565b16602083015260408181013590830152606090810135910152565b6101c081016142cc826142bf866134d5565b6001600160a01b03169052565b6142d8602085016134d5565b6001600160a01b031660208301526142f2604085016134f9565b6001600160801b0316604083015261430c606085016134f9565b6001600160801b03166060830152614326608085016134d5565b6001600160a01b0316608083015261434060a085016134d5565b6001600160a01b031660a083015261435a60c085016134d5565b6001600160a01b031660c083015260e0848101359083015261437f6101008501613504565b6001600160401b03166101008301526101208481013590830152611d8061014083018461426e565b5f5f5f83850360a08112156143ba575f5ffd5b60608112156143c7575f5ffd5b50604051606081016001600160401b03811182821017156143ea576143ea613431565b6040528451815260208501516143ff8161390d565b60208201526040850151614412816134e5565b60408201526060850151909350614428816134e5565b6080850151909250613aec81613d82565b6001600160a01b03841681526060602080830182905284519183018290525f91908501906080840190835b8181101561448b5783516001600160a01b0316835260209384019390920191600101614464565b505080925050508215156040830152949350505050565b61020081016144b4826142bf866134d5565b6144c0602085016134d5565b6001600160a01b031660208301526144da604085016134f9565b6001600160801b031660408301526144f4606085016134f9565b6001600160801b0316606083015261450e608085016134f9565b6001600160801b0316608083015261452860a085016134d5565b6001600160a01b031660a083015261454260c085016134d5565b6001600160a01b031660c083015261455c60e085016134d5565b6001600160a01b031660e083015261457761010085016134d5565b6001600160a01b0316610100830152610120848101359083015261459e6101408501613504565b6001600160401b03166101408301526101608481013590830152611d8061018083018461426e565b634e487b7160e01b5f52601160045260245ffd5b6001600160801b0382811682821603908111156108a4576108a46145c6565b5f60208284031215614609575f5ffd5b8151611d80816134c1565b5f60208284031215614624575f5ffd5b5051919050565b818103818111156108a4576108a46145c6565b9283526001600160a01b03918216602084015216604082015260600190565b80820281158282048414176108a4576108a46145c6565b5f8261468e57634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156108a4576108a46145c6565b60408101600684106146ba576146ba613883565b9281526020015290565b6001600160801b0381811683821601908111156108a4576108a46145c6565b60208082526024908201527f466978696e546f6b656e5370656e6465722f43414e4e4f545f494e564f4b455f60408201526329a2a62360e11b606082015260800190565b60408101600484106146ba576146ba61388356fea264697066735822122018aed5979807d4aa4a40d0e83374b52572b33ed2748b6fede1782c0b4757200c64736f6c634300081c003360806040525f80553480156011575f5ffd5b50607980601d5f395ff3fe6080604052348015600e575f5ffd5b50600436106026575f3560e01c8063f2541a8c14602a575b5f5ffd5b60315f5481565b60405190815260200160405180910390f3fea2646970667358221220d40ce6e389f928027d23bbfe6a13bc2daaab8738f117937cf11b8c469fe65e3f64736f6c634300081c0033",
  "deployedBytecode": "0x608060405260043610610207575f3560e01c80639a4f809c11610113578063b4658bfb1161009d578063ea7faa611161006d578063ea7faa61146106ce578063f6274f66146106ed578063f6e0f6a514610700578063fd5f995b1461071f578063fe55a3ef1461073e575f5ffd5b8063b4658bfb1461063e578063d0a55fb01461065d578063dab400f31461067c578063dd11d225146106af575f5ffd5b8063aa6b21cd116100e3578063aa6b21cd14610594578063aa77476c146105b3578063ad354eeb146105d2578063b09f1fb114610600578063b10a33f41461061f575f5ffd5b80639a4f809c146105045780639baa45a8146105235780639f0434f514610542578063a0edcef514610561575f5ffd5b8063487b5c201161019457806386a0c8d71161016457806386a0c8d7146104675780638fd3ab80146104865780639240529c146104b3578063935c82a4146104c657806395480889146104e5575f5ffd5b8063487b5c20146103935780636ae4b4f7146103d65780636b52a4a8146104195780637d49ec1a14610448575f5ffd5b8063346693c5116101da578063346693c5146102bf57806337f381d8146102eb5780633cd2f0261461030a578063414e4ccf14610329578063438cdfc51461035c575f5ffd5b8063016a6d651461020b578063031b905c1461023d5780630f0e8cf7146102705780631fb0979514610291575b5f5ffd5b348015610216575f5ffd5b5061022a6102253660046135d6565b61075d565b6040519081526020015b60405180910390f35b348015610248575f5ffd5b5061022a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561027b575f5ffd5b5061028f61028a3660046136e1565b6108aa565b005b34801561029c575f5ffd5b506102b06102ab366004613843565b610951565b604051610234939291906138d2565b3480156102ca575f5ffd5b506102de6102d93660046135d6565b610a33565b60405161023491906138ff565b3480156102f6575f5ffd5b506102b061030536600461399a565b610ae2565b348015610315575f5ffd5b5061028f6103243660046139cf565b610bab565b61033c610337366004613a3e565b610be3565b604080516001600160801b03938416815292909116602083015201610234565b348015610367575f5ffd5b5061037b610376366004613aae565b610c4a565b6040516001600160801b039091168152602001610234565b34801561039e575f5ffd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405163ffffffff9091168152602001610234565b3480156103e1575f5ffd5b5061040c6040518060400160405280600b81526020016a4c696d69744f726465727360a81b81525081565b6040516102349190613af7565b348015610424575f5ffd5b50610438610433366004613b2c565b610cfb565b6040519015158152602001610234565b348015610453575f5ffd5b5061028f610462366004613b63565b610d36565b348015610472575f5ffd5b5061028f6104813660046136e1565b610d9c565b348015610491575f5ffd5b5061049a610e34565b6040516001600160e01b03199091168152602001610234565b61037b6104c1366004613b7e565b611031565b3480156104d1575f5ffd5b5061028f6104e0366004613bbc565b6110b7565b3480156104f0575f5ffd5b506102de6104ff366004613b63565b6110de565b34801561050f575f5ffd5b5061028f61051e366004613c0a565b61116e565b34801561052e575f5ffd5b5061028f61053d366004613c48565b61117a565b34801561054d575f5ffd5b5061028f61055c366004613ce4565b6111af565b34801561056c575f5ffd5b506103c17f000000000000000000000000000000000000000000000000000000000000000081565b34801561059f575f5ffd5b5061033c6105ae366004613d9a565b611228565b3480156105be575f5ffd5b5061033c6105cd366004613aae565b611298565b3480156105dd575f5ffd5b506105f16105ec366004613e63565b611305565b60405161023493929190613f38565b34801561060b575f5ffd5b5061028f61061a366004613fd5565b61153b565b34801561062a575f5ffd5b5061028f610639366004613bbc565b611651565b348015610649575f5ffd5b506105f1610658366004614077565b611678565b348015610668575f5ffd5b5061028f610677366004613c0a565b6118a3565b348015610687575f5ffd5b5061022a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156106ba575f5ffd5b5061022a6106c9366004613b63565b6118af565b3480156106d9575f5ffd5b5061028f6106e83660046140d9565b6119c3565b61033c6106fb366004613b7e565b611a3f565b34801561070b575f5ffd5b5061028f61071a366004614105565b611ab1565b34801561072a575f5ffd5b5061028f610739366004613ce4565b611ae6565b348015610749575f5ffd5b5061028f6107583660046135d6565b611b58565b5f6108a4610847835f6040517fe593d3fdfa8b60e5e17a1b2204662ecbe15c23f2084b9ad5bae40359540a7da9815282516001600160a01b0316602082015260208301516001600160a01b0316604082015260408301516001600160801b0316606082015260608301516001600160801b0316608082015260808301516001600160a01b031660a082015260a08301516001600160a01b031660c082015260c08301516001600160a01b031660e082015260e08301516101008201526101008301516001600160401b03166101208201526101208301516101408201526101608120915050919050565b60405161190160f01b60208201527f00000000000000000000000000000000000000000000000000000000000000006022820152604281018290525f90606201604051602081830303815290604052805190602001209050919050565b92915050565b815183511480156108bc575080518351145b6108e15760405162461bcd60e51b81526004016108d890614197565b60405180910390fd5b5f5b835181101561094b5761094333858381518110610902576109026141f4565b602002602001015185848151811061091c5761091c6141f4565b6020026020010151858581518110610936576109366141f4565b6020026020010151611bba565b6001016108e3565b50505050565b604080516060810182525f808252602082018190529181018290529080610977856110de565b92506109db6040518060a001604052808760a001516001600160a01b03168152602001875f01516001600160a01b0316815260200187604001516001600160801b0316815260200187606001516001600160801b0316815260200185815250611c94565b83519092505f906109fa906109f536889003880188614208565b611d87565b9050806001600160a01b03168660a001516001600160a01b03161480610a295750610a298660a0015182610cfb565b9150509250925092565b604080516060810182525f8082526020820181905291810191909152610a588261075d565b81525f610a63611ef1565b60808401516001600160a01b039081165f9081526002929092016020908152604080842087518416855282528084208288015190931684529190529020546060840151610100850151610120860151929350610ac3928592919085611efd565b60c08301516001600160a01b0316610adc575f60208301525b50919050565b604080516060810182525f808252602082018190529181018290529080610b0885610a33565b9250610b6c6040518060a0016040528087608001516001600160a01b03168152602001875f01516001600160a01b0316815260200187604001516001600160801b0316815260200187606001516001600160801b0316815260200185815250611c94565b91505f610b7c845f015186611d87565b9050806001600160a01b031686608001516001600160a01b03161480610a295750610a29866080015182610cfb565b5f5b81811015610bde57610bd6838383818110610bca57610bca6141f4565b90506020020135611fd3565b600101610bad565b505050565b5f5f5f610c306040518060a001604052808a8152602001898152602001886001600160801b03168152602001876001600160a01b03168152602001866001600160a01b0316815250612198565b602081015160409091015190999098509650505050505050565b5f5f610c9e6040518060c00160405280878152602001868152602001856001600160801b03168152602001336001600160a01b031681526020015f15158152602001336001600160a01b031681525061253a565b9050826001600160801b031681602001516001600160801b03161015610cef57610cef610cea610ccd8761075d565b83602001516001600160801b0316866001600160801b0316612868565b6128e4565b60400151949350505050565b5f610d04611ef1565b6001600160a01b039384165f908152600491909101602090815260408083209490951682529290925250205460ff1690565b5f610d40826118af565b90508160a001516001600160a01b0316336001600160a01b031614158015610d735750610d718260a0015133610cfb565b155b15610d8a57610d8a610cea82338560a001516128ec565b610d98818360a00151612924565b5050565b81518351148015610dae575080518351145b610dca5760405162461bcd60e51b81526004016108d890614197565b5f5b835181101561094b57610e2c33858381518110610deb57610deb6141f4565b6020026020010151858481518110610e0557610e056141f4565b6020026020010151858581518110610e1f57610e1f6141f4565b6020026020010151612987565b600101610dcc565b5f610e45631e69781360e11b612a55565b610e55637b13a7b360e11b612a55565b610e65632a9dd1db60e21b612a55565b610e7563249014a760e21b612a55565b610e8563438cdfc560e01b612a55565b610e9563414e4ccf60e01b612a55565b610ea563aa6b21cd60e01b612a55565b610eb5633ea4f60d60e11b612a55565b610ec563fe55a3ef60e01b612a55565b610ed563137548b560e31b612a55565b610ee563f6e0f6a560e01b612a55565b610ef5630d0a55fb60e41b612a55565b610f05632c428cfd60e21b612a55565b610f156386a0c8d760e01b612a55565b610f25639f0434f560e01b612a55565b610f35632693e02760e21b612a55565b610f456324d720a960e21b612a55565b610f55630f0e8cf760e01b612a55565b610f6563fd5f995b60e01b612a55565b610f75639548088960e01b612a55565b610f8563346693c560e01b612a55565b610f9563dd11d22560e01b612a55565b610fa563016a6d6560e01b612a55565b610fb5630243dae160e51b612a55565b610fc563b09f1fb160e01b612a55565b610fd5631fb0979560e01b612a55565b610fe56306fe703b60e31b612a55565b610ff563b4658bfb60e01b612a55565b61100563ad354eeb60e01b612a55565b61101563ea7faa6160e01b612a55565b611025630d6a549560e31b612a55565b50632c64c5ef60e01b90565b5f5f61107d6040518060a00160405280878152602001868152602001856001600160801b03168152602001336001600160a01b03168152602001336001600160a01b0316815250612198565b9050826001600160801b031681602001516001600160801b031610156110ac576110ac610cea610ccd876118af565b8051610cef90612ad5565b6110c18433610cfb565b6110d2576110d2610cea8533612b54565b61094b84848484611bba565b604080516060810182525f8082526020820181905291810191909152611103826118af565b81525f61110e611ef1565b60a08401516001600160a01b039081165f9081526001929092016020908152604080842087518416855282528084208288015190931684529190529020546060840151610140850151610160860151929350610adc928592919085611efd565b610bde33848484611bba565b5f5b8151811015610d98576111a782828151811061119a5761119a6141f4565b6020026020010151610d36565b60010161117c565b815183511480156111c1575080518351145b6111dd5760405162461bcd60e51b81526004016108d890614197565b6111e78433610cfb565b6111f8576111f8610cea8533612b54565b5f5b83518110156112215761121985858381518110610deb57610deb6141f4565b6001016111fa565b5050505050565b5f5f5f61127d6040518060c001604052808b81526020018a8152602001896001600160801b03168152602001886001600160a01b031681526020018715158152602001866001600160a01b031681525061253a565b6020810151604090910151909a909950975050505050505050565b5f5f5f6112ed6040518060c00160405280888152602001878152602001866001600160801b03168152602001336001600160a01b031681526020015f15158152602001336001600160a01b031681525061253a565b60208101516040909101519097909650945050505050565b606080808584146113285760405162461bcd60e51b81526004016108d890614222565b856001600160401b0381111561134057611340613431565b60405190808252806020026020018201604052801561138957816020015b604080516060810182525f80825260208083018290529282015282525f1990920191018161135e5790505b509250856001600160401b038111156113a4576113a4613431565b6040519080825280602002602001820160405280156113cd578160200160208202803683370190505b509150856001600160401b038111156113e8576113e8613431565b604051908082528060200260200182016040528015611411578160200160208202803683370190505b5090505f5b8681101561153057306337f381d8898984818110611436576114366141f4565b9050610140020188888581811061144f5761144f6141f4565b9050608002016040518363ffffffff1660e01b81526004016114729291906142ad565b60a060405180830381865afa9250505080156114ab575060408051601f3d908101601f191682019092526114a8918101906143a7565b60015b1561152857828785815181106114c3576114c36141f4565b6020026020010181905250818685815181106114e1576114e16141f4565b60200260200101906001600160801b031690816001600160801b03168152505080858581518110611514576115146141f4565b911515602092830291909101909101525050505b600101611416565b509450945094915050565b33321461159a5760405162461bcd60e51b815260206004820152602760248201527f4e61746976654f7264657273466561747572652f4e4f5f434f4e54524143545f6044820152664f524947494e5360c81b60648201526084016108d8565b5f6115a3611ef1565b90505f5b835181101561161057335f908152600383016020526040812085518592908790859081106115d7576115d76141f4565b6020908102919091018101516001600160a01b031682528101919091526040015f20805460ff19169115159190911790556001016115a7565b507f02dfead5eb769b298e82dd9650b31c40559a3d42701dbf53c931bc2682847c3133848460405161164493929190614439565b60405180910390a1505050565b61165b8433610cfb565b61166c5761166c610cea8533612b54565b61094b84848484612987565b6060808085841461169b5760405162461bcd60e51b81526004016108d890614222565b856001600160401b038111156116b3576116b3613431565b6040519080825280602002602001820160405280156116fc57816020015b604080516060810182525f80825260208083018290529282015282525f199092019101816116d15790505b509250856001600160401b0381111561171757611717613431565b604051908082528060200260200182016040528015611740578160200160208202803683370190505b509150856001600160401b0381111561175b5761175b613431565b604051908082528060200260200182016040528015611784578160200160208202803683370190505b5090505f5b868110156115305730631fb097958989848181106117a9576117a96141f4565b905061018002018888858181106117c2576117c26141f4565b9050608002016040518363ffffffff1660e01b81526004016117e59291906144a2565b60a060405180830381865afa92505050801561181e575060408051601f3d908101601f1916820190925261181b918101906143a7565b60015b1561189b5782878581518110611836576118366141f4565b602002602001018190525081868581518110611854576118546141f4565b60200260200101906001600160801b031690816001600160801b03168152505080858581518110611887576118876141f4565b911515602092830291909101909101525050505b600101611789565b610bde33848484612987565b5f6108a4610847835f6040517fce918627cb55462ddbb85e73de69a8b322f2bc88f4507c52fcad6d4c33c29d49815282516001600160a01b0316602082015260208301516001600160a01b0316604082015260408301516001600160801b0316606082015260608301516001600160801b0316608082015260808301516001600160801b031660a082015260a08301516001600160a01b031660c082015260c08301516001600160a01b031660e082015260e08301516001600160a01b03166101008201526101008301516001600160a01b03166101208201526101208301516101408201526101408301516001600160401b03166101608201526101608301516101808201526101a08120915050919050565b5f6119cc611ef1565b335f81815260048301602090815260408083206001600160a01b03891680855290835292819020805460ff1916881515908117909155815194855291840192909252908201529091507f6ea9dbe8b2cc119348716a9220a0742ad62b7884ecb0ff4b32cd508121fd937990606001611644565b5f5f5f611a8c6040518060a00160405280888152602001878152602001866001600160801b03168152602001336001600160a01b03168152602001336001600160a01b0316815250612198565b9050611a9a815f0151612ad5565b602081015160409091015190969095509350505050565b5f5b8151811015610d9857611ade828281518110611ad157611ad16141f4565b6020026020010151611b58565b600101611ab3565b81518351148015611af8575080518351145b611b145760405162461bcd60e51b81526004016108d890614197565b611b1e8433610cfb565b611b2f57611b2f610cea8533612b54565b5f5b835181101561122157611b5085858381518110610902576109026141f4565b600101611b31565b5f611b628261075d565b905081608001516001600160a01b0316336001600160a01b031614158015611b955750611b93826080015133610cfb565b155b15611bac57611bac610cea823385608001516128ec565b610d98818360800151612924565b5f611bc3611ef1565b6001600160a01b038087165f9081526002830160209081526040808320898516845282528083209388168352929052205490915082811115611c0c57611c0c610cea8483612bd1565b6001600160a01b038681165f81815260028501602090815260408083208a8616808552908352818420958a1680855295835292819020889055805193845290830191909152810191909152606081018490527ffe7ffb1edfe79f4df716cb2dcad21cf2f31b104d816a7976ba1e6e4653c1efb1906080015b60405180910390a1505050505050565b5f81604001516001600160801b03165f1480611cbb575060608201516001600160801b0316155b15611cc757505f919050565b60018260800151602001516004811115611ce357611ce3613883565b14611cef57505f919050565b5f611d358360800151604001518460600151611d0b91906145da565b6001600160801b031684606001516001600160801b031685604001516001600160801b0316612c0f565b9050611d5181611d4c8560200151865f0151612c2d565b612d09565b9050611d80611d7b8285604001516001600160801b031686606001516001600160801b0316612d1e565b612d3f565b9392505050565b5f611d928383612d61565b600282516004811115611da757611da7613883565b03611e185760208083015160408085015160608087015183515f815295860180855289905260ff9094169285019290925290830152608082015260019060a0016020604051602081039080840390855afa158015611e07573d5f5f3e3d5ffd5b505050602060405103519050611ed5565b600382516004811115611e2d57611e2d613883565b03611ed5575f7f19457468657265756d205369676e6564204d6573736167653a0a3332000000005f5283601c52603c5f2090506001818460200151856040015186606001516040515f8152602001604052604051611ea7949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015611ec7573d5f5f3e3d5ffd5b505050602060405103519150505b6001600160a01b0381166108a4576108a4610cea600585612e36565b5f5f6108a46007612e6c565b5f611f06611ef1565b86515f9081526020829052604090819020546001600160801b03808216928a0183905292935091871611611f59576020870160025b90816004811115611f4e57611f4e613883565b815250505050611221565b600160ff1b811615611f7057602087016003611f3b565b50426001600160401b0316846001600160401b031611611fae576020860160045b90816004811115611fa457611fa4613883565b8152505050611221565b82821115611fc157602086016003611f91565b60016020870181905250505050505050565b6040516318cdf6cd60e11b8152600481018290525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063319bed9a906024016020604051808303815f875af1158015612039573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061205d91906145f9565b6040516370a0823160e01b81526001600160a01b0380831660048301529192505f917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156120c6573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120ea9190614614565b90506001811115610bde576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a3b4a327838061213160018661462b565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064015f604051808303815f87803b15801561217d575f5ffd5b505af115801561218f573d5f5f3e3d5ffd5b50505050505050565b604080516080810182525f8082526020820181905291810182905260608101919091525f6121c8835f01516110de565b90506001816020015160048111156121e2576121e2613883565b1461220c5761220c610cea825f01518360200151600481111561220757612207613883565b612e94565b825160c001516001600160a01b031615801590612246575082606001516001600160a01b0316835f015160c001516001600160a01b031614155b1561226757612267610cea825f01518560600151865f015160c00151612ed4565b825160e001516001600160a01b0316158015906122a1575082608001516001600160a01b0316835f015160e001516001600160a01b031614155b156122c2576122c2610cea825f01518560800151865f015160e00151612f0c565b5f6122d4825f01518560200151611d87565b9050835f015160a001516001600160a01b0316816001600160a01b03161415801561230c5750835160a0015161230a9082610cfb565b155b15612328578151845160a0015161232891610cea918490612f44565b508251610120015161233990612f7c565b8252604080516101408101825282518152845160a0908101516001600160a01b039081166020808501919091526060808901805184168688015251831681860152885151831660808601528851909101519091169183019190915285518301516001600160801b0390811660c0840152865190910151811660e0830152858301518116610100830152918301519091166101208201526123d89061305b565b6001600160801b039081166040850152908116602084015283516080015116156124605761243482602001516001600160801b0316845f0151606001516001600160801b0316855f0151608001516001600160801b0316612c0f565b6001600160801b0316606080840182905284516020810151918601516101009091015161246093613192565b8051835160a08101516060808701516101008401518451602080870151908a01516040808c0151968c01518c51610120909a015191517fab614d2b738543c0ea21f56347cf696a3a0c42a7cbec3212a5ca22a4dcff21249b61252c9b909a999390919a8b526001600160a01b03998a1660208c015297891660408b015295881660608a015293871660808901529190951660a08701526001600160801b0394851660c0870152841660e08601529092166101008401526101208301919091526101408201526101600190565b60405180910390a150919050565b604080516080810182525f8082526020820181905291810182905260608101919091525f61256a835f0151610a33565b905060018160200151600481111561258457612584613883565b146125a9576125a9610cea825f01518360200151600481111561220757612207613883565b5f6125b2611ef1565b845160c001519091506001600160a01b031632148015906125fd5750835160c001516001600160a01b03165f908152600382016020908152604080832032845290915290205460ff16155b15612619578151845160c0015161261991610cea91329061321e565b50825160a001516001600160a01b031615801590612654575082606001516001600160a01b0316835f015160a001516001600160a01b031614155b1561267557612675610cea825f01518560600151865f015160a00151612ed4565b5f612687825f01518560200151611d87565b9050835f0151608001516001600160a01b0316816001600160a01b0316141580156126bf57508351608001516126bd9082610cfb565b155b156126db5781518451608001516126db91610cea918490612f44565b5060408051610140810182528251815284516080908101516001600160a01b031660208301528501516127bc9282019061271957856060015161271b565b305b6001600160a01b031681526020018560a001516001600160a01b03168152602001855f01515f01516001600160a01b03168152602001855f0151602001516001600160a01b03168152602001855f0151604001516001600160801b03168152602001855f0151606001516001600160801b0316815260200185604001516001600160801b0316815260200183604001516001600160801b031681525061305b565b6001600160801b039081166040858101829052929091166020808601829052845187516080808201516060808c015184518588015160e0968701518c519889526001600160a01b03958616998901999099529184169a87019a909a52988216908501529096169582019590955260a081019290925260c0820192909252918201527f829fa99d94dc4636925b38632e625736a614c154d55006b7ab6bea979c210c32906101000161252c565b6040516024810184905260448101839052606481018290526060907f21948612b5ef214ec0508df4901600e07a810a371be76b25d59ade73826e3d97906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290509392505050565b805160208201fd5b60607f88b2c08e4a5f57d416ad23dad18c20497ccfe684b1379b28fd564adaf582b80f8484846040516024016128a99392919061463e565b5f61292d611ef1565b5f84815260208281526040918290208054600160ff1b17905581518681526001600160a01b038616918101919091529192507fa6eb7cdc219e1518ced964e9a34e61d68a94e4f1569db3e84256ba981ba527539101611644565b5f612990611ef1565b6001600160a01b038087165f90815260018301602090815260408083208985168452825280832093881683529290522054909150828111156129d9576129d9610cea8483612bd1565b6001600160a01b038681165f81815260018501602090815260408083208a8616808552908352818420958a1680855295835292819020889055805193845290830191909152810191909152606081018490527fa91fe7ae62fce669df2c7f880f8c14d178531aae72515558e5c948e37c32a57290608001611c84565b604051636eb224cb60e01b81526001600160e01b0319821660048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201523090636eb224cb906044015f604051808303815f87803b158015612ac3575f5ffd5b505af1158015611221573d5f5f3e3d5ffd5b8034118015612ae45750333014155b15612b51575f612af4823461462b565b6040519091505f90339083908381818185875af1925050503d805f8114612b36576040519150601f19603f3d011682016040523d82523d5f602084013e612b3b565b606091505b5050905080610bde57610bde610cea3384613256565b50565b6040516001600160a01b038084166024830152821660448201526060907f84356db366796dc6e2aeb1ad74b631fe4e5ec6a650464da6059e9f95c8810a10906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905092915050565b60405160248101839052604481018290526060907fb12bc7e7d341f4431d6faf05f991ee3b779183e341b24243064e10c886cd187390606401612b97565b5f82612c1b838661465d565b612c259190614674565b949350505050565b604051636eb1769f60e11b81526001600160a01b0382811660048301523060248301525f91611d809185169063dd62ed3e90604401602060405180830381865afa158015612c7d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ca19190614614565b6040516370a0823160e01b81526001600160a01b0385811660048301528616906370a0823190602401602060405180830381865afa158015612ce5573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d4c9190614614565b5f818310612d175781611d80565b5090919050565b5f82612d2b60018261462b565b612d35848761465d565b612c1b9190614693565b5f6001600160801b03821115612d5d57612d5d610cea60038461329c565b5090565b604081015170014551231950b75fc4402da1732fc9bebe19111580612db15750612d9e600270014551231950b75fc4402da1732fc9bebe19614674565b612da9906001614693565b606082015110155b15612dc457612dc4610cea600584612e36565b5f81516004811115612dd857612dd8613883565b03612deb57612deb610cea600384612e36565b600181516004811115612e0057612e00613883565b03612e1257612e12610cea5f84612e36565b600481516004811115612e2757612e27613883565b03610d9857610d98610cea6002845b60607ff18f11f3027e735c758137924b262d4d3aff0037dcd785aca3c699fa05d960bd8383604051602401612b979291906146a6565b5f608082600b811115612e8157612e81613883565b612e8c906001614693565b901b92915050565b6040516024810183905260ff821660448201526060907f47ab394e41470191eaf9fa542e84ac483a12665fbd616eb8d1c022ced6c9400090606401612b97565b60607f5d3300180a4547b3e27137be832d3ebf56f1ba5ebb30dd580999c61f77fa63968484846040516024016128a99392919061463e565b60607f15e6a383bb02d79ee933b927fbecba78cdde16cba84b94a99661f44bcce3b7368484846040516024016128a99392919061463e565b60607ff13e65d925201525f3d71a731833b19bb26e44cfbd97caf72a366b73866f71248484846040516024016128a99392919061463e565b5f5f612f866132b9565b9050805f03612f9757505f92915050565b5f612fa1846132ef565b90505f816001600160a01b0316836040515f6040518083038185875af1925050503d805f8114612fec576040519150601f19603f3d011682016040523d82523d5f602084013e612ff1565b606091505b50509050806130525760405162461bcd60e51b815260206004820152602760248201527f466978696e50726f746f636f6c466565732f45544845525f5452414e5346455260448201526617d1905312515160ca1b60648201526084016108d8565b50909392505050565b5f5f6130808361010001518461012001518560e0015161307b91906145da565b61338c565b91506130b0826001600160801b03168460e001516001600160801b03168560c001516001600160801b0316612c0f565b90506001600160801b03821615806130cf57506001600160801b038116155b156130de57505f928392509050565b818361012001516130ef91906146c4565b6001600160801b0316613100611ef1565b84515f90815260209190915260409081902091909155830151306001600160a01b039091160361314b576131468360a001518460200151846001600160801b03166133ac565b61316c565b61316c8360a0015184604001518560200151856001600160801b0316613192565b61318d836080015184602001518560600151846001600160801b0316613192565b915091565b306001600160a01b038516036131ba5760405162461bcd60e51b81526004016108d8906146e3565b6040516323b872dd60e01b81526001600160a01b03841660048201526001600160a01b03831660248201528160448201526020816064835f6001600160a01b038a165af13d6001835114602082101516811517821691508161218f57805f843e8083fd5b60607fc0972f3cc4234ca2091de7e7bc7081494bd29ac280167d66f0d44168973b16348484846040516024016128a99392919061463e565b6040516001600160a01b0383166024820152604481018290526060907fbde95cc2119e0200d80642397198abfcf98e6e4dddd0de9c6320d86252ad40ab90606401612b97565b606063c996af7b60e01b8383604051602401612b97929190614727565b5f6132ea3a63ffffffff7f00000000000000000000000000000000000000000000000000000000000000001661465d565b905090565b604080516001600160f81b03196020808301919091527f000000000000000000000000000000000000000000000000000000000000000060601b6bffffffffffffffffffffffff19166021830152603582018490527f000000000000000000000000000000000000000000000000000000000000000060558084019190915283518084039091018152607590920190925280519101205f906108a4565b5f816001600160801b0316836001600160801b031610612d175781611d80565b306001600160a01b038416036133d45760405162461bcd60e51b81526004016108d8906146e3565b60405163a9059cbb60e01b81526001600160a01b03831660048201528160248201526020816044835f6001600160a01b0389165af13d6001835114602082101516811517821691508161342957805f843e8083fd5b505050505050565b634e487b7160e01b5f52604160045260245ffd5b60405161014081016001600160401b038111828210171561346857613468613431565b60405290565b60405161018081016001600160401b038111828210171561346857613468613431565b604051601f8201601f191681016001600160401b03811182821017156134b9576134b9613431565b604052919050565b6001600160a01b0381168114612b51575f5ffd5b80356134e0816134c1565b919050565b6001600160801b0381168114612b51575f5ffd5b80356134e0816134e5565b80356001600160401b03811681146134e0575f5ffd5b5f610140828403121561352b575f5ffd5b613533613445565b905061353e826134d5565b815261354c602083016134d5565b602082015261355d604083016134f9565b604082015261356e606083016134f9565b606082015261357f608083016134d5565b608082015261359060a083016134d5565b60a08201526135a160c083016134d5565b60c082015260e082810135908201526135bd6101008301613504565b6101008201526101209182013591810191909152919050565b5f61014082840312156135e7575f5ffd5b611d80838361351a565b5f6001600160401b0382111561360957613609613431565b5060051b60200190565b5f82601f830112613622575f5ffd5b8135613635613630826135f1565b613491565b8082825260208201915060208360051b860101925085831115613656575f5ffd5b602085015b8381101561367c57803561366e816134c1565b83526020928301920161365b565b5095945050505050565b5f82601f830112613695575f5ffd5b81356136a3613630826135f1565b8082825260208201915060208360051b8601019250858311156136c4575f5ffd5b602085015b8381101561367c5780358352602092830192016136c9565b5f5f5f606084860312156136f3575f5ffd5b83356001600160401b03811115613708575f5ffd5b61371486828701613613565b93505060208401356001600160401b0381111561372f575f5ffd5b61373b86828701613613565b92505060408401356001600160401b03811115613756575f5ffd5b610a2986828701613686565b5f6101808284031215613773575f5ffd5b61377b61346e565b9050613786826134d5565b8152613794602083016134d5565b60208201526137a5604083016134f9565b60408201526137b6606083016134f9565b60608201526137c7608083016134f9565b60808201526137d860a083016134d5565b60a08201526137e960c083016134d5565b60c08201526137fa60e083016134d5565b60e082015261380c61010083016134d5565b610100820152610120828101359082015261382a6101408301613504565b6101408201526101609182013591810191909152919050565b5f5f828403610200811215613856575f5ffd5b6138608585613762565b9250608061017f1982011215613874575f5ffd5b50610180830190509250929050565b634e487b7160e01b5f52602160045260245ffd5b60058110612b5157612b51613883565b8051825260208101516138b981613897565b60208301526040908101516001600160801b0316910152565b60a081016138e082866138a7565b6001600160801b03841660608301528215156080830152949350505050565b606081016108a482846138a7565b60058110612b51575f5ffd5b803560ff811681146134e0575f5ffd5b5f60808284031215613939575f5ffd5b604051608081016001600160401b038111828210171561395b5761395b613431565b604052905080823561396c8161390d565b815261397a60208401613919565b602082015260408381013590820152606092830135920191909152919050565b5f5f6101c083850312156139ac575f5ffd5b6139b6848461351a565b91506139c6846101408501613929565b90509250929050565b5f5f602083850312156139e0575f5ffd5b82356001600160401b038111156139f5575f5ffd5b8301601f81018513613a05575f5ffd5b80356001600160401b03811115613a1a575f5ffd5b8560208260051b8401011115613a2e575f5ffd5b6020919091019590945092505050565b5f5f5f5f5f6102608688031215613a53575f5ffd5b613a5d8787613762565b9450613a6d876101808801613929565b9350610200860135613a7e816134e5565b9250610220860135613a8f816134c1565b9150610240860135613aa0816134c1565b809150509295509295909350565b5f5f5f6101e08486031215613ac1575f5ffd5b613acb858561351a565b9250613adb856101408601613929565b91506101c0840135613aec816134e5565b809150509250925092565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f5f60408385031215613b3d575f5ffd5b8235613b48816134c1565b91506020830135613b58816134c1565b809150509250929050565b5f6101808284031215613b74575f5ffd5b611d808383613762565b5f5f5f6102208486031215613b91575f5ffd5b613b9b8585613762565b9250613bab856101808601613929565b9150610200840135613aec816134e5565b5f5f5f5f60808587031215613bcf575f5ffd5b8435613bda816134c1565b93506020850135613bea816134c1565b92506040850135613bfa816134c1565b9396929550929360600135925050565b5f5f5f60608486031215613c1c575f5ffd5b8335613c27816134c1565b92506020840135613c37816134c1565b929592945050506040919091013590565b5f60208284031215613c58575f5ffd5b81356001600160401b03811115613c6d575f5ffd5b8201601f81018413613c7d575f5ffd5b8035613c8b613630826135f1565b8082825260208201915060206101808402850101925086831115613cad575f5ffd5b6020840193505b82841015613cda57613cc68785613762565b825260208201915061018084019350613cb4565b9695505050505050565b5f5f5f5f60808587031215613cf7575f5ffd5b8435613d02816134c1565b935060208501356001600160401b03811115613d1c575f5ffd5b613d2887828801613613565b93505060408501356001600160401b03811115613d43575f5ffd5b613d4f87828801613613565b92505060608501356001600160401b03811115613d6a575f5ffd5b613d7687828801613686565b91505092959194509250565b8015158114612b51575f5ffd5b80356134e081613d82565b5f5f5f5f5f5f6102408789031215613db0575f5ffd5b613dba888861351a565b9550613dca886101408901613929565b94506101c0870135613ddb816134e5565b93506101e0870135613dec816134c1565b9250610200870135613dfd81613d82565b9150610220870135613e0e816134c1565b809150509295509295509295565b5f5f83601f840112613e2c575f5ffd5b5081356001600160401b03811115613e42575f5ffd5b6020830191508360208260071b8501011115613e5c575f5ffd5b9250929050565b5f5f5f5f60408587031215613e76575f5ffd5b84356001600160401b03811115613e8b575f5ffd5b8501601f81018713613e9b575f5ffd5b80356001600160401b03811115613eb0575f5ffd5b87602061014083028401011115613ec5575f5ffd5b6020918201955093508501356001600160401b03811115613ee4575f5ffd5b613ef087828801613e1c565b95989497509550505050565b5f8151808452602084019350602083015f5b82811015613f2e5781511515865260209586019590910190600101613f0e565b5093949350505050565b606080825284519082018190525f9060208601906080840190835b81811015613f7c57613f668385516138a7565b6020939093019260609290920191600101613f53565b5050838103602080860191909152865180835291810192508601905f5b81811015613fc05782516001600160801b0316845260209384019390920191600101613f99565b5050508281036040840152613cda8185613efc565b5f5f60408385031215613fe6575f5ffd5b82356001600160401b03811115613ffb575f5ffd5b8301601f8101851361400b575f5ffd5b8035614019613630826135f1565b8082825260208201915060208360051b85010192508783111561403a575f5ffd5b6020840193505b82841015614065578335614054816134c1565b825260209384019390910190614041565b94506139c69250505060208401613d8f565b5f5f5f5f6040858703121561408a575f5ffd5b84356001600160401b0381111561409f575f5ffd5b8501601f810187136140af575f5ffd5b80356001600160401b038111156140c4575f5ffd5b87602061018083028401011115613ec5575f5ffd5b5f5f604083850312156140ea575f5ffd5b82356140f5816134c1565b91506020830135613b5881613d82565b5f60208284031215614115575f5ffd5b81356001600160401b0381111561412a575f5ffd5b8201601f8101841361413a575f5ffd5b8035614148613630826135f1565b808282526020820191506020610140840285010192508683111561416a575f5ffd5b6020840193505b82841015613cda57614183878561351a565b825260208201915061014084019350614171565b60208082526038908201527f4e61746976654f7264657273466561747572652f4d49534d4154434845445f5060408201527f4149525f4f52444552535f41525241595f4c454e475448530000000000000000606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b5f60808284031215614218575f5ffd5b611d808383613929565b6020808252602c908201527f4e61746976654f7264657273466561747572652f4d49534d4154434845445f4160408201526b525241595f4c454e4754485360a01b606082015260800190565b80356142798161390d565b61428281613897565b825260ff61429260208301613919565b16602083015260408181013590830152606090810135910152565b6101c081016142cc826142bf866134d5565b6001600160a01b03169052565b6142d8602085016134d5565b6001600160a01b031660208301526142f2604085016134f9565b6001600160801b0316604083015261430c606085016134f9565b6001600160801b03166060830152614326608085016134d5565b6001600160a01b0316608083015261434060a085016134d5565b6001600160a01b031660a083015261435a60c085016134d5565b6001600160a01b031660c083015260e0848101359083015261437f6101008501613504565b6001600160401b03166101008301526101208481013590830152611d8061014083018461426e565b5f5f5f83850360a08112156143ba575f5ffd5b60608112156143c7575f5ffd5b50604051606081016001600160401b03811182821017156143ea576143ea613431565b6040528451815260208501516143ff8161390d565b60208201526040850151614412816134e5565b60408201526060850151909350614428816134e5565b6080850151909250613aec81613d82565b6001600160a01b03841681526060602080830182905284519183018290525f91908501906080840190835b8181101561448b5783516001600160a01b0316835260209384019390920191600101614464565b505080925050508215156040830152949350505050565b61020081016144b4826142bf866134d5565b6144c0602085016134d5565b6001600160a01b031660208301526144da604085016134f9565b6001600160801b031660408301526144f4606085016134f9565b6001600160801b0316606083015261450e608085016134f9565b6001600160801b0316608083015261452860a085016134d5565b6001600160a01b031660a083015261454260c085016134d5565b6001600160a01b031660c083015261455c60e085016134d5565b6001600160a01b031660e083015261457761010085016134d5565b6001600160a01b0316610100830152610120848101359083015261459e6101408501613504565b6001600160401b03166101408301526101608481013590830152611d8061018083018461426e565b634e487b7160e01b5f52601160045260245ffd5b6001600160801b0382811682821603908111156108a4576108a46145c6565b5f60208284031215614609575f5ffd5b8151611d80816134c1565b5f60208284031215614624575f5ffd5b5051919050565b818103818111156108a4576108a46145c6565b9283526001600160a01b03918216602084015216604082015260600190565b80820281158282048414176108a4576108a46145c6565b5f8261468e57634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156108a4576108a46145c6565b60408101600684106146ba576146ba613883565b9281526020015290565b6001600160801b0381811683821601908111156108a4576108a46145c6565b60208082526024908201527f466978696e546f6b656e5370656e6465722f43414e4e4f545f494e564f4b455f60408201526329a2a62360e11b606082015260800190565b60408101600484106146ba576146ba61388356fea264697066735822122018aed5979807d4aa4a40d0e83374b52572b33ed2748b6fede1782c0b4757200c64736f6c634300081c0033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
