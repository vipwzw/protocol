/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DummyERC20Token,
  DummyERC20TokenInterface,
} from "../../src/DummyERC20Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b50604051610c00380380610c0083398101604081905261002e91610143565b600261003a858261024a565b506003610047848261024a565b506004805460ff191660ff84161790556005819055335f81815260208181526040808320859055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350505050610304565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126100c9575f5ffd5b81516001600160401b038111156100e2576100e26100a6565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610110576101106100a6565b604052818152838201602001851015610127575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f5f5f60808587031215610156575f5ffd5b84516001600160401b0381111561016b575f5ffd5b610177878288016100ba565b602087015190955090506001600160401b03811115610194575f5ffd5b6101a0878288016100ba565b935050604085015160ff811681146101b6575f5ffd5b6060959095015193969295505050565b600181811c908216806101da57607f821691505b6020821081036101f857634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561024557805f5260205f20601f840160051c810160208510156102235750805b601f840160051c820191505b81811015610242575f815560010161022f565b50505b505050565b81516001600160401b03811115610263576102636100a6565b6102778161027184546101c6565b846101fe565b6020601f8211600181146102a9575f83156102925750848201515b5f19600385901b1c1916600184901b178455610242565b5f84815260208120601f198516915b828110156102d857878501518255602094850194600190920191016102b8565b50848210156102f557868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b6108ef806103115f395ff3fe608060405234801561000f575f5ffd5b50600436106100b9575f3560e01c806340c10f191161007257806395d89b411161005857806395d89b411461017b578063a9059cbb14610183578063dd62ed3e14610196575f5ffd5b806340c10f191461014757806370a082311461015c575f5ffd5b806318160ddd116100a257806318160ddd146100fe57806323b872dd14610115578063313ce56714610128575f5ffd5b806306fdde03146100bd578063095ea7b3146100db575b5f5ffd5b6100c56101c0565b6040516100d291906106e7565b60405180910390f35b6100ee6100e9366004610762565b61024c565b60405190151581526020016100d2565b61010760055481565b6040519081526020016100d2565b6100ee61012336600461078a565b6102c5565b6004546101359060ff1681565b60405160ff90911681526020016100d2565b61015a610155366004610762565b61051a565b005b61010761016a3660046107c4565b5f6020819052908152604090205481565b6100c56105bc565b6100ee610191366004610762565b6105c9565b6101076101a43660046107e4565b600160209081525f928352604080842090915290825290205481565b600280546101cd90610815565b80601f01602080910402602001604051908101604052809291908181526020018280546101f990610815565b80156102445780601f1061021b57610100808354040283529160200191610244565b820191905f5260205f20905b81548152906001019060200180831161022757829003601f168201915b505050505081565b335f81815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102b39086815260200190565b60405180910390a35060015b92915050565b73ffffffffffffffffffffffffffffffffffffffff83165f90815260208190526040812054821115610358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e742062616c616e636500000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff84165f9081526001602090815260408083203384529091529020548211156103f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e73756666696369656e7420616c6c6f77616e636500000000000000000000604482015260640161034f565b73ffffffffffffffffffffffffffffffffffffffff84165f9081526020819052604081208054849290610425908490610893565b909155505073ffffffffffffffffffffffffffffffffffffffff83165f908152602081905260408120805484929061045e9084906108a6565b909155505073ffffffffffffffffffffffffffffffffffffffff84165f908152600160209081526040808320338452909152812080548492906104a2908490610893565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161050891815260200190565b60405180910390a35060019392505050565b73ffffffffffffffffffffffffffffffffffffffff82165f908152602081905260408120805483929061054e9084906108a6565b925050819055508060055f82825461056691906108a6565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316905f907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600380546101cd90610815565b335f90815260208190526040812054821115610641576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e742062616c616e6365000000000000000000000000604482015260640161034f565b335f908152602081905260408120805484929061065f908490610893565b909155505073ffffffffffffffffffffffffffffffffffffffff83165f90815260208190526040812080548492906106989084906108a6565b909155505060405182815273ffffffffffffffffffffffffffffffffffffffff84169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016102b3565b602081525f82518060208401528060208501604085015e5f6040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461075d575f5ffd5b919050565b5f5f60408385031215610773575f5ffd5b61077c8361073a565b946020939093013593505050565b5f5f5f6060848603121561079c575f5ffd5b6107a58461073a565b92506107b36020850161073a565b929592945050506040919091013590565b5f602082840312156107d4575f5ffd5b6107dd8261073a565b9392505050565b5f5f604083850312156107f5575f5ffd5b6107fe8361073a565b915061080c6020840161073a565b90509250929050565b600181811c9082168061082957607f821691505b602082108103610860577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b818103818111156102bf576102bf610866565b808201808211156102bf576102bf61086656fea2646970667358221220e09c6e10d44dddbd2f2d9713781372c92122761159cc21605d92e5046175296164736f6c634300081c0033";

type DummyERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyERC20Token__factory extends ContractFactory {
  constructor(...args: DummyERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _totalSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      _totalSupply,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _totalSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      _totalSupply,
      overrides || {}
    ) as Promise<
      DummyERC20Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DummyERC20Token__factory {
    return super.connect(runner) as DummyERC20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyERC20TokenInterface {
    return new Interface(_abi) as DummyERC20TokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DummyERC20Token {
    return new Contract(address, _abi, runner) as unknown as DummyERC20Token;
  }
}
