/*
 * -----------------------------------------------------------------------------
 * Warning: This file is auto-generated by contracts-gen. Don't edit manually.
 * -----------------------------------------------------------------------------
 */
import { ContractArtifact } from 'ethereum-types';

import * as IStaking from '../artifacts/contracts/src/interfaces/IStaking.sol/IStaking.json';
import * as IStakingEvents from '../artifacts/contracts/src/interfaces/IStakingEvents.sol/IStakingEvents.json';
import * as IStakingProxy from '../artifacts/contracts/src/interfaces/IStakingProxy.sol/IStakingProxy.json';
import * as IStorage from '../artifacts/contracts/src/interfaces/IStorage.sol/IStorage.json';
import * as IStorageInit from '../artifacts/contracts/src/interfaces/IStorageInit.sol/IStorageInit.json';
import * as IStructs from '../artifacts/contracts/src/interfaces/IStructs.sol/IStructs.json';
import * as IZrxVault from '../artifacts/contracts/src/interfaces/IZrxVault.sol/IZrxVault.json';
import * as LibCobbDouglas from '../artifacts/contracts/src/libs/LibCobbDouglas.sol/LibCobbDouglas.json';
import * as LibFixedMath from '../artifacts/contracts/src/libs/LibFixedMath.sol/LibFixedMath.json';
import * as LibFixedMathRichErrors from '../artifacts/contracts/src/libs/LibFixedMathRichErrors.sol/LibFixedMathRichErrors.json';
import * as LibSafeDowncast from '../artifacts/contracts/src/libs/LibSafeDowncast.sol/LibSafeDowncast.json';
import * as LibStakingRichErrors from '../artifacts/contracts/src/libs/LibStakingRichErrors.sol/LibStakingRichErrors.json';
import * as MixinAbstract from '../artifacts/contracts/src/sys/MixinAbstract.sol/MixinAbstract.json';
import * as MixinConstants from '../artifacts/contracts/src/immutable/MixinConstants.sol/MixinConstants.json';
import * as MixinCumulativeRewards from '../artifacts/contracts/src/staking_pools/MixinCumulativeRewards.sol/MixinCumulativeRewards.json';
import * as MixinDeploymentConstants from '../artifacts/contracts/src/immutable/MixinDeploymentConstants.sol/MixinDeploymentConstants.json';
import * as MixinExchangeFees from '../artifacts/contracts/src/fees/MixinExchangeFees.sol/MixinExchangeFees.json';
import * as MixinExchangeManager from '../artifacts/contracts/src/fees/MixinExchangeManager.sol/MixinExchangeManager.json';
import * as MixinFinalizer from '../artifacts/contracts/src/sys/MixinFinalizer.sol/MixinFinalizer.json';
import * as MixinParams from '../artifacts/contracts/src/sys/MixinParams.sol/MixinParams.json';
import * as MixinScheduler from '../artifacts/contracts/src/sys/MixinScheduler.sol/MixinScheduler.json';
import * as MixinStake from '../artifacts/contracts/src/stake/MixinStake.sol/MixinStake.json';
import * as MixinStakeBalances from '../artifacts/contracts/src/stake/MixinStakeBalances.sol/MixinStakeBalances.json';
import * as MixinStakeStorage from '../artifacts/contracts/src/stake/MixinStakeStorage.sol/MixinStakeStorage.json';
import * as MixinStakingPool from '../artifacts/contracts/src/staking_pools/MixinStakingPool.sol/MixinStakingPool.json';
import * as MixinStakingPoolRewards from '../artifacts/contracts/src/staking_pools/MixinStakingPoolRewards.sol/MixinStakingPoolRewards.json';
import * as MixinStorage from '../artifacts/contracts/src/immutable/MixinStorage.sol/MixinStorage.json';
import * as Staking from '../artifacts/contracts/src/Staking.sol/Staking.json';
import * as StakingPatch from '../artifacts/contracts/src/StakingPatch.sol/StakingPatch.json';
import * as StakingProxy from '../artifacts/contracts/src/StakingProxy.sol/StakingProxy.json';
// Note: Test contract artifacts are temporarily commented out as they are not available
// These would be generated when test contracts are compiled
// import * as TestAssertStorageParams from '../artifacts/contracts/test/TestAssertStorageParams.sol/TestAssertStorageParams.json';
// import * as TestCobbDouglas from '../artifacts/contracts/test/TestCobbDouglas.sol/TestCobbDouglas.json';
// ... (other test contracts)
// import * as TestStorageLayoutAndConstants from '../artifacts/contracts/test/TestStorageLayoutAndConstants.sol/TestStorageLayoutAndConstants.json';
import * as ZrxVault from '../artifacts/contracts/src/ZrxVault.sol/ZrxVault.json';
export const artifacts = {
    Staking: Staking as ContractArtifact,
    StakingPatch: StakingPatch as ContractArtifact,
    StakingProxy: StakingProxy as ContractArtifact,
    ZrxVault: ZrxVault as ContractArtifact,
    MixinExchangeFees: MixinExchangeFees as ContractArtifact,
    MixinExchangeManager: MixinExchangeManager as ContractArtifact,
    MixinConstants: MixinConstants as ContractArtifact,
    MixinDeploymentConstants: MixinDeploymentConstants as ContractArtifact,
    MixinStorage: MixinStorage as ContractArtifact,
    IStaking: IStaking as ContractArtifact,
    IStakingEvents: IStakingEvents as ContractArtifact,
    IStakingProxy: IStakingProxy as ContractArtifact,
    IStorage: IStorage as ContractArtifact,
    IStorageInit: IStorageInit as ContractArtifact,
    IStructs: IStructs as ContractArtifact,
    IZrxVault: IZrxVault as ContractArtifact,
    LibCobbDouglas: LibCobbDouglas as ContractArtifact,
    LibFixedMath: LibFixedMath as ContractArtifact,
    LibFixedMathRichErrors: LibFixedMathRichErrors as ContractArtifact,
    LibSafeDowncast: LibSafeDowncast as ContractArtifact,
    LibStakingRichErrors: LibStakingRichErrors as ContractArtifact,
    MixinStake: MixinStake as ContractArtifact,
    MixinStakeBalances: MixinStakeBalances as ContractArtifact,
    MixinStakeStorage: MixinStakeStorage as ContractArtifact,
    MixinCumulativeRewards: MixinCumulativeRewards as ContractArtifact,
    MixinStakingPool: MixinStakingPool as ContractArtifact,
    MixinStakingPoolRewards: MixinStakingPoolRewards as ContractArtifact,
    MixinAbstract: MixinAbstract as ContractArtifact,
    MixinFinalizer: MixinFinalizer as ContractArtifact,
    MixinParams: MixinParams as ContractArtifact,
    MixinScheduler: MixinScheduler as ContractArtifact,
    // Test contracts temporarily commented out - will be enabled when test artifacts are generated
    // TestAssertStorageParams: TestAssertStorageParams as ContractArtifact,
    // TestCobbDouglas: TestCobbDouglas as ContractArtifact,
    // ... (other test contracts)
};
