/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  PayTakerTransformer,
  PayTakerTransformerInterface,
} from "../PayTakerTransformer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "ethRecipient",
        type: "address",
      },
    ],
    name: "die",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IERC20Transformer.TransformContext",
        name: "context",
        type: "tuple",
      },
    ],
    name: "transform",
    outputs: [
      {
        internalType: "bytes4",
        name: "success",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250503073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505060805160a0516111296100b3600039600081816102b2015261030c01526000818161022c01528181610286015261035101526111296000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063832b24bb14610046578063c9353cb514610076578063d5f3948814610092575b600080fd5b610060600480360381019061005b9190610881565b6100b0565b60405161006d9190610905565b60405180910390f35b610090600480360381019061008b919061097e565b61022a565b005b61009a61034f565b6040516100a791906109cc565b60405180910390f35b6000808280604001906100c391906109f6565b8101906100d09190610d7b565b905060005b8160000151518110156102195760008183602001515111610116577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610136565b8260200151828151811061012d5761012c610dc4565b5b60200260200101515b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81036101a9576101a6308460000151848151811061017a57610179610dc4565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1661037390919063ffffffff16565b90505b6000811461020d5761020c8560200160208101906101c7919061097e565b82856000015185815181106101df576101de610dc4565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166104259092919063ffffffff16565b5b508060010190506100d5565b506313c9929e60e01b915050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102b0576102af6102aa337f0000000000000000000000000000000000000000000000000000000000000000610516565b6105b1565b5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461033657610335610330307f00000000000000000000000000000000000000000000000000000000000000006105b9565b6105b1565b5b8073ffffffffffffffffffffffffffffffffffffffff16ff5b7f000000000000000000000000000000000000000000000000000000000000000081565b600061037e83610654565b156103a2578173ffffffffffffffffffffffffffffffffffffffff1631905061041f565b8273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016103db91906109cc565b602060405180830381865afa1580156103f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041c9190610e08565b90505b92915050565b61042e83610654565b156104e55760008273ffffffffffffffffffffffffffffffffffffffff168260405161045990610e66565b60006040518083038185875af1925050503d8060008114610496576040519150601f19603f3d011682016040523d82523d6000602084013e61049b565b606091505b50509050806104df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d690610efe565b60405180910390fd5b50610511565b61051082828573ffffffffffffffffffffffffffffffffffffffff166106a09092919063ffffffff16565b5b505050565b60607f5cec653b364cca3880afa73ceff506d0651d11d26abbbe4a56460aa933b21b08838360405160240161054c929190610f1e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b805160208201fd5b60607fb5cf2cd09307d6c717473134badbb9761c2c97d7565566c2a71eba6cd6fc514d83836040516024016105ef929190610f1e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60008373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040516024016106d1929190610f56565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905061071f8482610725565b50505050565b6000808373ffffffffffffffffffffffffffffffffffffffff168360405161074d9190610fe5565b6000604051808303816000865af19150503d806000811461078a576040519150601f19603f3d011682016040523d82523d6000602084013e61078f565b606091505b5091509150816107a3576107a2816105b1565b5b600081510361080d5760008473ffffffffffffffffffffffffffffffffffffffff163b11610806576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fd9061106e565b60405180910390fd5b5050610845565b6020815110610839578080602001905181019061082a91906110c6565b61083857610837816105b1565b5b5b610842816105b1565b50505b5050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000606082840312156108785761087761085d565b5b81905092915050565b60006020828403121561089757610896610853565b5b600082013567ffffffffffffffff8111156108b5576108b4610858565b5b6108c184828501610862565b91505092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6108ff816108ca565b82525050565b600060208201905061091a60008301846108f6565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061094b82610920565b9050919050565b61095b81610940565b811461096657600080fd5b50565b60008135905061097881610952565b92915050565b60006020828403121561099457610993610853565b5b60006109a284828501610969565b91505092915050565b60006109b682610920565b9050919050565b6109c6816109ab565b82525050565b60006020820190506109e160008301846109bd565b92915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112610a1357610a126109e7565b5b80840192508235915067ffffffffffffffff821115610a3557610a346109ec565b5b602083019250600182023603831315610a5157610a506109f1565b5b509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610aa782610a5e565b810181811067ffffffffffffffff82111715610ac657610ac5610a6f565b5b80604052505050565b6000610ad9610849565b9050610ae58282610a9e565b919050565b600080fd5b600080fd5b600067ffffffffffffffff821115610b0f57610b0e610a6f565b5b602082029050602081019050919050565b600080fd5b6000610b30826109ab565b9050919050565b610b4081610b25565b8114610b4b57600080fd5b50565b600081359050610b5d81610b37565b92915050565b6000610b76610b7184610af4565b610acf565b90508083825260208201905060208402830185811115610b9957610b98610b20565b5b835b81811015610bc25780610bae8882610b4e565b845260208401935050602081019050610b9b565b5050509392505050565b600082601f830112610be157610be0610aef565b5b8135610bf1848260208601610b63565b91505092915050565b600067ffffffffffffffff821115610c1557610c14610a6f565b5b602082029050602081019050919050565b6000819050919050565b610c3981610c26565b8114610c4457600080fd5b50565b600081359050610c5681610c30565b92915050565b6000610c6f610c6a84610bfa565b610acf565b90508083825260208201905060208402830185811115610c9257610c91610b20565b5b835b81811015610cbb5780610ca78882610c47565b845260208401935050602081019050610c94565b5050509392505050565b600082601f830112610cda57610cd9610aef565b5b8135610cea848260208601610c5c565b91505092915050565b600060408284031215610d0957610d08610a59565b5b610d136040610acf565b9050600082013567ffffffffffffffff811115610d3357610d32610aea565b5b610d3f84828501610bcc565b600083015250602082013567ffffffffffffffff811115610d6357610d62610aea565b5b610d6f84828501610cc5565b60208301525092915050565b600060208284031215610d9157610d90610853565b5b600082013567ffffffffffffffff811115610daf57610dae610858565b5b610dbb84828501610cf3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050610e0281610c30565b92915050565b600060208284031215610e1e57610e1d610853565b5b6000610e2c84828501610df3565b91505092915050565b600081905092915050565b50565b6000610e50600083610e35565b9150610e5b82610e40565b600082019050919050565b6000610e7182610e43565b9150819050919050565b600082825260208201905092915050565b7f4c696245524332305472616e73666f726d65722f4641494c45445f544f5f534560008201527f4e445f4554484552000000000000000000000000000000000000000000000000602082015250565b6000610ee8602883610e7b565b9150610ef382610e8c565b604082019050919050565b60006020820190508181036000830152610f1781610edb565b9050919050565b6000604082019050610f3360008301856109bd565b610f4060208301846109bd565b9392505050565b610f5081610c26565b82525050565b6000604082019050610f6b60008301856109bd565b610f786020830184610f47565b9392505050565b600081519050919050565b60005b83811015610fa8578082015181840152602081019050610f8d565b60008484015250505050565b6000610fbf82610f7f565b610fc98185610e35565b9350610fd9818560208601610f8a565b80840191505092915050565b6000610ff18284610fb4565b915081905092915050565b7f696e76616c696420746f6b656e20616464726573732c20636f6e7461696e732060008201527f6e6f20636f646500000000000000000000000000000000000000000000000000602082015250565b6000611058602783610e7b565b915061106382610ffc565b604082019050919050565b600060208201905081810360008301526110878161104b565b9050919050565b60008115159050919050565b6110a38161108e565b81146110ae57600080fd5b50565b6000815190506110c08161109a565b92915050565b6000602082840312156110dc576110db610853565b5b60006110ea848285016110b1565b9150509291505056fea264697066735822122036789d9fb826906acf99fdaa0bddc3fbea254c9e3e0d9b47e40467a275fa637f64736f6c634300081c0033";

type PayTakerTransformerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PayTakerTransformerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PayTakerTransformer__factory extends ContractFactory {
  constructor(...args: PayTakerTransformerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PayTakerTransformer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PayTakerTransformer__factory {
    return super.connect(runner) as PayTakerTransformer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PayTakerTransformerInterface {
    return new Interface(_abi) as PayTakerTransformerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PayTakerTransformer {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PayTakerTransformer;
  }
}
