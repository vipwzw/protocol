/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IERC20Transformer,
  IERC20TransformerInterface,
} from "../IERC20Transformer";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IERC20Transformer.TransformContext",
        name: "context",
        type: "tuple",
      },
    ],
    name: "transform",
    outputs: [
      {
        internalType: "bytes4",
        name: "success",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IERC20Transformer__factory {
  static readonly abi = _abi;
  static createInterface(): IERC20TransformerInterface {
    return new Interface(_abi) as IERC20TransformerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IERC20Transformer {
    return new Contract(address, _abi, runner) as unknown as IERC20Transformer;
  }
}
